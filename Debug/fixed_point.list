
fixed_point.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00003f14  080001d0  080001d0  000101d0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000002d8  080040e8  080040e8  000140e8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080043c0  080043c0  000201dc  2**0
                  CONTENTS
  4 .ARM          00000000  080043c0  080043c0  000201dc  2**0
                  CONTENTS
  5 .preinit_array 00000000  080043c0  080043c0  000201dc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080043c0  080043c0  000143c0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080043c4  080043c4  000143c4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000001dc  20000000  080043c8  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000070  200001dc  080045a4  000201dc  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000024c  080045a4  0002024c  2**0
                  ALLOC
 11 .ARM.attributes 0000002a  00000000  00000000  000201dc  2**0
                  CONTENTS, READONLY
 12 .debug_info   00008843  00000000  00000000  00020206  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 00001243  00000000  00000000  00028a49  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 00000768  00000000  00000000  00029c90  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 000006d0  00000000  00000000  0002a3f8  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  0002226b  00000000  00000000  0002aac8  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   00005a70  00000000  00000000  0004cd33  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    000ceb60  00000000  00000000  000527a3  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  00121303  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00002c98  00000000  00000000  00121380  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001d0 <__do_global_dtors_aux>:
 80001d0:	b510      	push	{r4, lr}
 80001d2:	4c05      	ldr	r4, [pc, #20]	; (80001e8 <__do_global_dtors_aux+0x18>)
 80001d4:	7823      	ldrb	r3, [r4, #0]
 80001d6:	b933      	cbnz	r3, 80001e6 <__do_global_dtors_aux+0x16>
 80001d8:	4b04      	ldr	r3, [pc, #16]	; (80001ec <__do_global_dtors_aux+0x1c>)
 80001da:	b113      	cbz	r3, 80001e2 <__do_global_dtors_aux+0x12>
 80001dc:	4804      	ldr	r0, [pc, #16]	; (80001f0 <__do_global_dtors_aux+0x20>)
 80001de:	f3af 8000 	nop.w
 80001e2:	2301      	movs	r3, #1
 80001e4:	7023      	strb	r3, [r4, #0]
 80001e6:	bd10      	pop	{r4, pc}
 80001e8:	200001dc 	.word	0x200001dc
 80001ec:	00000000 	.word	0x00000000
 80001f0:	080040cc 	.word	0x080040cc

080001f4 <frame_dummy>:
 80001f4:	b508      	push	{r3, lr}
 80001f6:	4b03      	ldr	r3, [pc, #12]	; (8000204 <frame_dummy+0x10>)
 80001f8:	b11b      	cbz	r3, 8000202 <frame_dummy+0xe>
 80001fa:	4903      	ldr	r1, [pc, #12]	; (8000208 <frame_dummy+0x14>)
 80001fc:	4803      	ldr	r0, [pc, #12]	; (800020c <frame_dummy+0x18>)
 80001fe:	f3af 8000 	nop.w
 8000202:	bd08      	pop	{r3, pc}
 8000204:	00000000 	.word	0x00000000
 8000208:	200001e0 	.word	0x200001e0
 800020c:	080040cc 	.word	0x080040cc

08000210 <strlen>:
 8000210:	4603      	mov	r3, r0
 8000212:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000216:	2a00      	cmp	r2, #0
 8000218:	d1fb      	bne.n	8000212 <strlen+0x2>
 800021a:	1a18      	subs	r0, r3, r0
 800021c:	3801      	subs	r0, #1
 800021e:	4770      	bx	lr

08000220 <memchr>:
 8000220:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000224:	2a10      	cmp	r2, #16
 8000226:	db2b      	blt.n	8000280 <memchr+0x60>
 8000228:	f010 0f07 	tst.w	r0, #7
 800022c:	d008      	beq.n	8000240 <memchr+0x20>
 800022e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000232:	3a01      	subs	r2, #1
 8000234:	428b      	cmp	r3, r1
 8000236:	d02d      	beq.n	8000294 <memchr+0x74>
 8000238:	f010 0f07 	tst.w	r0, #7
 800023c:	b342      	cbz	r2, 8000290 <memchr+0x70>
 800023e:	d1f6      	bne.n	800022e <memchr+0xe>
 8000240:	b4f0      	push	{r4, r5, r6, r7}
 8000242:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000246:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800024a:	f022 0407 	bic.w	r4, r2, #7
 800024e:	f07f 0700 	mvns.w	r7, #0
 8000252:	2300      	movs	r3, #0
 8000254:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000258:	3c08      	subs	r4, #8
 800025a:	ea85 0501 	eor.w	r5, r5, r1
 800025e:	ea86 0601 	eor.w	r6, r6, r1
 8000262:	fa85 f547 	uadd8	r5, r5, r7
 8000266:	faa3 f587 	sel	r5, r3, r7
 800026a:	fa86 f647 	uadd8	r6, r6, r7
 800026e:	faa5 f687 	sel	r6, r5, r7
 8000272:	b98e      	cbnz	r6, 8000298 <memchr+0x78>
 8000274:	d1ee      	bne.n	8000254 <memchr+0x34>
 8000276:	bcf0      	pop	{r4, r5, r6, r7}
 8000278:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800027c:	f002 0207 	and.w	r2, r2, #7
 8000280:	b132      	cbz	r2, 8000290 <memchr+0x70>
 8000282:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000286:	3a01      	subs	r2, #1
 8000288:	ea83 0301 	eor.w	r3, r3, r1
 800028c:	b113      	cbz	r3, 8000294 <memchr+0x74>
 800028e:	d1f8      	bne.n	8000282 <memchr+0x62>
 8000290:	2000      	movs	r0, #0
 8000292:	4770      	bx	lr
 8000294:	3801      	subs	r0, #1
 8000296:	4770      	bx	lr
 8000298:	2d00      	cmp	r5, #0
 800029a:	bf06      	itte	eq
 800029c:	4635      	moveq	r5, r6
 800029e:	3803      	subeq	r0, #3
 80002a0:	3807      	subne	r0, #7
 80002a2:	f015 0f01 	tst.w	r5, #1
 80002a6:	d107      	bne.n	80002b8 <memchr+0x98>
 80002a8:	3001      	adds	r0, #1
 80002aa:	f415 7f80 	tst.w	r5, #256	; 0x100
 80002ae:	bf02      	ittt	eq
 80002b0:	3001      	addeq	r0, #1
 80002b2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 80002b6:	3001      	addeq	r0, #1
 80002b8:	bcf0      	pop	{r4, r5, r6, r7}
 80002ba:	3801      	subs	r0, #1
 80002bc:	4770      	bx	lr
 80002be:	bf00      	nop

080002c0 <__aeabi_drsub>:
 80002c0:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 80002c4:	e002      	b.n	80002cc <__adddf3>
 80002c6:	bf00      	nop

080002c8 <__aeabi_dsub>:
 80002c8:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

080002cc <__adddf3>:
 80002cc:	b530      	push	{r4, r5, lr}
 80002ce:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002d2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002d6:	ea94 0f05 	teq	r4, r5
 80002da:	bf08      	it	eq
 80002dc:	ea90 0f02 	teqeq	r0, r2
 80002e0:	bf1f      	itttt	ne
 80002e2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002e6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002ea:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002ee:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002f2:	f000 80e2 	beq.w	80004ba <__adddf3+0x1ee>
 80002f6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002fa:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002fe:	bfb8      	it	lt
 8000300:	426d      	neglt	r5, r5
 8000302:	dd0c      	ble.n	800031e <__adddf3+0x52>
 8000304:	442c      	add	r4, r5
 8000306:	ea80 0202 	eor.w	r2, r0, r2
 800030a:	ea81 0303 	eor.w	r3, r1, r3
 800030e:	ea82 0000 	eor.w	r0, r2, r0
 8000312:	ea83 0101 	eor.w	r1, r3, r1
 8000316:	ea80 0202 	eor.w	r2, r0, r2
 800031a:	ea81 0303 	eor.w	r3, r1, r3
 800031e:	2d36      	cmp	r5, #54	; 0x36
 8000320:	bf88      	it	hi
 8000322:	bd30      	pophi	{r4, r5, pc}
 8000324:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000328:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800032c:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000330:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000334:	d002      	beq.n	800033c <__adddf3+0x70>
 8000336:	4240      	negs	r0, r0
 8000338:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800033c:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000340:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000344:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000348:	d002      	beq.n	8000350 <__adddf3+0x84>
 800034a:	4252      	negs	r2, r2
 800034c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000350:	ea94 0f05 	teq	r4, r5
 8000354:	f000 80a7 	beq.w	80004a6 <__adddf3+0x1da>
 8000358:	f1a4 0401 	sub.w	r4, r4, #1
 800035c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000360:	db0d      	blt.n	800037e <__adddf3+0xb2>
 8000362:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000366:	fa22 f205 	lsr.w	r2, r2, r5
 800036a:	1880      	adds	r0, r0, r2
 800036c:	f141 0100 	adc.w	r1, r1, #0
 8000370:	fa03 f20e 	lsl.w	r2, r3, lr
 8000374:	1880      	adds	r0, r0, r2
 8000376:	fa43 f305 	asr.w	r3, r3, r5
 800037a:	4159      	adcs	r1, r3
 800037c:	e00e      	b.n	800039c <__adddf3+0xd0>
 800037e:	f1a5 0520 	sub.w	r5, r5, #32
 8000382:	f10e 0e20 	add.w	lr, lr, #32
 8000386:	2a01      	cmp	r2, #1
 8000388:	fa03 fc0e 	lsl.w	ip, r3, lr
 800038c:	bf28      	it	cs
 800038e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000392:	fa43 f305 	asr.w	r3, r3, r5
 8000396:	18c0      	adds	r0, r0, r3
 8000398:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800039c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80003a0:	d507      	bpl.n	80003b2 <__adddf3+0xe6>
 80003a2:	f04f 0e00 	mov.w	lr, #0
 80003a6:	f1dc 0c00 	rsbs	ip, ip, #0
 80003aa:	eb7e 0000 	sbcs.w	r0, lr, r0
 80003ae:	eb6e 0101 	sbc.w	r1, lr, r1
 80003b2:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 80003b6:	d31b      	bcc.n	80003f0 <__adddf3+0x124>
 80003b8:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 80003bc:	d30c      	bcc.n	80003d8 <__adddf3+0x10c>
 80003be:	0849      	lsrs	r1, r1, #1
 80003c0:	ea5f 0030 	movs.w	r0, r0, rrx
 80003c4:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80003c8:	f104 0401 	add.w	r4, r4, #1
 80003cc:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003d0:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 80003d4:	f080 809a 	bcs.w	800050c <__adddf3+0x240>
 80003d8:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 80003dc:	bf08      	it	eq
 80003de:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003e2:	f150 0000 	adcs.w	r0, r0, #0
 80003e6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003ea:	ea41 0105 	orr.w	r1, r1, r5
 80003ee:	bd30      	pop	{r4, r5, pc}
 80003f0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003f4:	4140      	adcs	r0, r0
 80003f6:	eb41 0101 	adc.w	r1, r1, r1
 80003fa:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80003fe:	f1a4 0401 	sub.w	r4, r4, #1
 8000402:	d1e9      	bne.n	80003d8 <__adddf3+0x10c>
 8000404:	f091 0f00 	teq	r1, #0
 8000408:	bf04      	itt	eq
 800040a:	4601      	moveq	r1, r0
 800040c:	2000      	moveq	r0, #0
 800040e:	fab1 f381 	clz	r3, r1
 8000412:	bf08      	it	eq
 8000414:	3320      	addeq	r3, #32
 8000416:	f1a3 030b 	sub.w	r3, r3, #11
 800041a:	f1b3 0220 	subs.w	r2, r3, #32
 800041e:	da0c      	bge.n	800043a <__adddf3+0x16e>
 8000420:	320c      	adds	r2, #12
 8000422:	dd08      	ble.n	8000436 <__adddf3+0x16a>
 8000424:	f102 0c14 	add.w	ip, r2, #20
 8000428:	f1c2 020c 	rsb	r2, r2, #12
 800042c:	fa01 f00c 	lsl.w	r0, r1, ip
 8000430:	fa21 f102 	lsr.w	r1, r1, r2
 8000434:	e00c      	b.n	8000450 <__adddf3+0x184>
 8000436:	f102 0214 	add.w	r2, r2, #20
 800043a:	bfd8      	it	le
 800043c:	f1c2 0c20 	rsble	ip, r2, #32
 8000440:	fa01 f102 	lsl.w	r1, r1, r2
 8000444:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000448:	bfdc      	itt	le
 800044a:	ea41 010c 	orrle.w	r1, r1, ip
 800044e:	4090      	lslle	r0, r2
 8000450:	1ae4      	subs	r4, r4, r3
 8000452:	bfa2      	ittt	ge
 8000454:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000458:	4329      	orrge	r1, r5
 800045a:	bd30      	popge	{r4, r5, pc}
 800045c:	ea6f 0404 	mvn.w	r4, r4
 8000460:	3c1f      	subs	r4, #31
 8000462:	da1c      	bge.n	800049e <__adddf3+0x1d2>
 8000464:	340c      	adds	r4, #12
 8000466:	dc0e      	bgt.n	8000486 <__adddf3+0x1ba>
 8000468:	f104 0414 	add.w	r4, r4, #20
 800046c:	f1c4 0220 	rsb	r2, r4, #32
 8000470:	fa20 f004 	lsr.w	r0, r0, r4
 8000474:	fa01 f302 	lsl.w	r3, r1, r2
 8000478:	ea40 0003 	orr.w	r0, r0, r3
 800047c:	fa21 f304 	lsr.w	r3, r1, r4
 8000480:	ea45 0103 	orr.w	r1, r5, r3
 8000484:	bd30      	pop	{r4, r5, pc}
 8000486:	f1c4 040c 	rsb	r4, r4, #12
 800048a:	f1c4 0220 	rsb	r2, r4, #32
 800048e:	fa20 f002 	lsr.w	r0, r0, r2
 8000492:	fa01 f304 	lsl.w	r3, r1, r4
 8000496:	ea40 0003 	orr.w	r0, r0, r3
 800049a:	4629      	mov	r1, r5
 800049c:	bd30      	pop	{r4, r5, pc}
 800049e:	fa21 f004 	lsr.w	r0, r1, r4
 80004a2:	4629      	mov	r1, r5
 80004a4:	bd30      	pop	{r4, r5, pc}
 80004a6:	f094 0f00 	teq	r4, #0
 80004aa:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 80004ae:	bf06      	itte	eq
 80004b0:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 80004b4:	3401      	addeq	r4, #1
 80004b6:	3d01      	subne	r5, #1
 80004b8:	e74e      	b.n	8000358 <__adddf3+0x8c>
 80004ba:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004be:	bf18      	it	ne
 80004c0:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80004c4:	d029      	beq.n	800051a <__adddf3+0x24e>
 80004c6:	ea94 0f05 	teq	r4, r5
 80004ca:	bf08      	it	eq
 80004cc:	ea90 0f02 	teqeq	r0, r2
 80004d0:	d005      	beq.n	80004de <__adddf3+0x212>
 80004d2:	ea54 0c00 	orrs.w	ip, r4, r0
 80004d6:	bf04      	itt	eq
 80004d8:	4619      	moveq	r1, r3
 80004da:	4610      	moveq	r0, r2
 80004dc:	bd30      	pop	{r4, r5, pc}
 80004de:	ea91 0f03 	teq	r1, r3
 80004e2:	bf1e      	ittt	ne
 80004e4:	2100      	movne	r1, #0
 80004e6:	2000      	movne	r0, #0
 80004e8:	bd30      	popne	{r4, r5, pc}
 80004ea:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004ee:	d105      	bne.n	80004fc <__adddf3+0x230>
 80004f0:	0040      	lsls	r0, r0, #1
 80004f2:	4149      	adcs	r1, r1
 80004f4:	bf28      	it	cs
 80004f6:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80004fa:	bd30      	pop	{r4, r5, pc}
 80004fc:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 8000500:	bf3c      	itt	cc
 8000502:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 8000506:	bd30      	popcc	{r4, r5, pc}
 8000508:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 800050c:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 8000510:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8000514:	f04f 0000 	mov.w	r0, #0
 8000518:	bd30      	pop	{r4, r5, pc}
 800051a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800051e:	bf1a      	itte	ne
 8000520:	4619      	movne	r1, r3
 8000522:	4610      	movne	r0, r2
 8000524:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000528:	bf1c      	itt	ne
 800052a:	460b      	movne	r3, r1
 800052c:	4602      	movne	r2, r0
 800052e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000532:	bf06      	itte	eq
 8000534:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000538:	ea91 0f03 	teqeq	r1, r3
 800053c:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000540:	bd30      	pop	{r4, r5, pc}
 8000542:	bf00      	nop

08000544 <__aeabi_ui2d>:
 8000544:	f090 0f00 	teq	r0, #0
 8000548:	bf04      	itt	eq
 800054a:	2100      	moveq	r1, #0
 800054c:	4770      	bxeq	lr
 800054e:	b530      	push	{r4, r5, lr}
 8000550:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000554:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000558:	f04f 0500 	mov.w	r5, #0
 800055c:	f04f 0100 	mov.w	r1, #0
 8000560:	e750      	b.n	8000404 <__adddf3+0x138>
 8000562:	bf00      	nop

08000564 <__aeabi_i2d>:
 8000564:	f090 0f00 	teq	r0, #0
 8000568:	bf04      	itt	eq
 800056a:	2100      	moveq	r1, #0
 800056c:	4770      	bxeq	lr
 800056e:	b530      	push	{r4, r5, lr}
 8000570:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000574:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000578:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800057c:	bf48      	it	mi
 800057e:	4240      	negmi	r0, r0
 8000580:	f04f 0100 	mov.w	r1, #0
 8000584:	e73e      	b.n	8000404 <__adddf3+0x138>
 8000586:	bf00      	nop

08000588 <__aeabi_f2d>:
 8000588:	0042      	lsls	r2, r0, #1
 800058a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800058e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000592:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000596:	bf1f      	itttt	ne
 8000598:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800059c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 80005a0:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 80005a4:	4770      	bxne	lr
 80005a6:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 80005aa:	bf08      	it	eq
 80005ac:	4770      	bxeq	lr
 80005ae:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 80005b2:	bf04      	itt	eq
 80005b4:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 80005b8:	4770      	bxeq	lr
 80005ba:	b530      	push	{r4, r5, lr}
 80005bc:	f44f 7460 	mov.w	r4, #896	; 0x380
 80005c0:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80005c4:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80005c8:	e71c      	b.n	8000404 <__adddf3+0x138>
 80005ca:	bf00      	nop

080005cc <__aeabi_ul2d>:
 80005cc:	ea50 0201 	orrs.w	r2, r0, r1
 80005d0:	bf08      	it	eq
 80005d2:	4770      	bxeq	lr
 80005d4:	b530      	push	{r4, r5, lr}
 80005d6:	f04f 0500 	mov.w	r5, #0
 80005da:	e00a      	b.n	80005f2 <__aeabi_l2d+0x16>

080005dc <__aeabi_l2d>:
 80005dc:	ea50 0201 	orrs.w	r2, r0, r1
 80005e0:	bf08      	it	eq
 80005e2:	4770      	bxeq	lr
 80005e4:	b530      	push	{r4, r5, lr}
 80005e6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80005ea:	d502      	bpl.n	80005f2 <__aeabi_l2d+0x16>
 80005ec:	4240      	negs	r0, r0
 80005ee:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005f2:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80005f6:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80005fa:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005fe:	f43f aed8 	beq.w	80003b2 <__adddf3+0xe6>
 8000602:	f04f 0203 	mov.w	r2, #3
 8000606:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800060a:	bf18      	it	ne
 800060c:	3203      	addne	r2, #3
 800060e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000612:	bf18      	it	ne
 8000614:	3203      	addne	r2, #3
 8000616:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 800061a:	f1c2 0320 	rsb	r3, r2, #32
 800061e:	fa00 fc03 	lsl.w	ip, r0, r3
 8000622:	fa20 f002 	lsr.w	r0, r0, r2
 8000626:	fa01 fe03 	lsl.w	lr, r1, r3
 800062a:	ea40 000e 	orr.w	r0, r0, lr
 800062e:	fa21 f102 	lsr.w	r1, r1, r2
 8000632:	4414      	add	r4, r2
 8000634:	e6bd      	b.n	80003b2 <__adddf3+0xe6>
 8000636:	bf00      	nop

08000638 <__aeabi_dmul>:
 8000638:	b570      	push	{r4, r5, r6, lr}
 800063a:	f04f 0cff 	mov.w	ip, #255	; 0xff
 800063e:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000642:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000646:	bf1d      	ittte	ne
 8000648:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800064c:	ea94 0f0c 	teqne	r4, ip
 8000650:	ea95 0f0c 	teqne	r5, ip
 8000654:	f000 f8de 	bleq	8000814 <__aeabi_dmul+0x1dc>
 8000658:	442c      	add	r4, r5
 800065a:	ea81 0603 	eor.w	r6, r1, r3
 800065e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000662:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000666:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800066a:	bf18      	it	ne
 800066c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000670:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000674:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000678:	d038      	beq.n	80006ec <__aeabi_dmul+0xb4>
 800067a:	fba0 ce02 	umull	ip, lr, r0, r2
 800067e:	f04f 0500 	mov.w	r5, #0
 8000682:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000686:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800068a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800068e:	f04f 0600 	mov.w	r6, #0
 8000692:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000696:	f09c 0f00 	teq	ip, #0
 800069a:	bf18      	it	ne
 800069c:	f04e 0e01 	orrne.w	lr, lr, #1
 80006a0:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 80006a4:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 80006a8:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 80006ac:	d204      	bcs.n	80006b8 <__aeabi_dmul+0x80>
 80006ae:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 80006b2:	416d      	adcs	r5, r5
 80006b4:	eb46 0606 	adc.w	r6, r6, r6
 80006b8:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 80006bc:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 80006c0:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 80006c4:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 80006c8:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 80006cc:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80006d0:	bf88      	it	hi
 80006d2:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80006d6:	d81e      	bhi.n	8000716 <__aeabi_dmul+0xde>
 80006d8:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 80006dc:	bf08      	it	eq
 80006de:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006e2:	f150 0000 	adcs.w	r0, r0, #0
 80006e6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006ea:	bd70      	pop	{r4, r5, r6, pc}
 80006ec:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 80006f0:	ea46 0101 	orr.w	r1, r6, r1
 80006f4:	ea40 0002 	orr.w	r0, r0, r2
 80006f8:	ea81 0103 	eor.w	r1, r1, r3
 80006fc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 8000700:	bfc2      	ittt	gt
 8000702:	ebd4 050c 	rsbsgt	r5, r4, ip
 8000706:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 800070a:	bd70      	popgt	{r4, r5, r6, pc}
 800070c:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000710:	f04f 0e00 	mov.w	lr, #0
 8000714:	3c01      	subs	r4, #1
 8000716:	f300 80ab 	bgt.w	8000870 <__aeabi_dmul+0x238>
 800071a:	f114 0f36 	cmn.w	r4, #54	; 0x36
 800071e:	bfde      	ittt	le
 8000720:	2000      	movle	r0, #0
 8000722:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 8000726:	bd70      	pople	{r4, r5, r6, pc}
 8000728:	f1c4 0400 	rsb	r4, r4, #0
 800072c:	3c20      	subs	r4, #32
 800072e:	da35      	bge.n	800079c <__aeabi_dmul+0x164>
 8000730:	340c      	adds	r4, #12
 8000732:	dc1b      	bgt.n	800076c <__aeabi_dmul+0x134>
 8000734:	f104 0414 	add.w	r4, r4, #20
 8000738:	f1c4 0520 	rsb	r5, r4, #32
 800073c:	fa00 f305 	lsl.w	r3, r0, r5
 8000740:	fa20 f004 	lsr.w	r0, r0, r4
 8000744:	fa01 f205 	lsl.w	r2, r1, r5
 8000748:	ea40 0002 	orr.w	r0, r0, r2
 800074c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000750:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000754:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000758:	fa21 f604 	lsr.w	r6, r1, r4
 800075c:	eb42 0106 	adc.w	r1, r2, r6
 8000760:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000764:	bf08      	it	eq
 8000766:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800076a:	bd70      	pop	{r4, r5, r6, pc}
 800076c:	f1c4 040c 	rsb	r4, r4, #12
 8000770:	f1c4 0520 	rsb	r5, r4, #32
 8000774:	fa00 f304 	lsl.w	r3, r0, r4
 8000778:	fa20 f005 	lsr.w	r0, r0, r5
 800077c:	fa01 f204 	lsl.w	r2, r1, r4
 8000780:	ea40 0002 	orr.w	r0, r0, r2
 8000784:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000788:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800078c:	f141 0100 	adc.w	r1, r1, #0
 8000790:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000794:	bf08      	it	eq
 8000796:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800079a:	bd70      	pop	{r4, r5, r6, pc}
 800079c:	f1c4 0520 	rsb	r5, r4, #32
 80007a0:	fa00 f205 	lsl.w	r2, r0, r5
 80007a4:	ea4e 0e02 	orr.w	lr, lr, r2
 80007a8:	fa20 f304 	lsr.w	r3, r0, r4
 80007ac:	fa01 f205 	lsl.w	r2, r1, r5
 80007b0:	ea43 0302 	orr.w	r3, r3, r2
 80007b4:	fa21 f004 	lsr.w	r0, r1, r4
 80007b8:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80007bc:	fa21 f204 	lsr.w	r2, r1, r4
 80007c0:	ea20 0002 	bic.w	r0, r0, r2
 80007c4:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 80007c8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80007cc:	bf08      	it	eq
 80007ce:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007d2:	bd70      	pop	{r4, r5, r6, pc}
 80007d4:	f094 0f00 	teq	r4, #0
 80007d8:	d10f      	bne.n	80007fa <__aeabi_dmul+0x1c2>
 80007da:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 80007de:	0040      	lsls	r0, r0, #1
 80007e0:	eb41 0101 	adc.w	r1, r1, r1
 80007e4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80007e8:	bf08      	it	eq
 80007ea:	3c01      	subeq	r4, #1
 80007ec:	d0f7      	beq.n	80007de <__aeabi_dmul+0x1a6>
 80007ee:	ea41 0106 	orr.w	r1, r1, r6
 80007f2:	f095 0f00 	teq	r5, #0
 80007f6:	bf18      	it	ne
 80007f8:	4770      	bxne	lr
 80007fa:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 80007fe:	0052      	lsls	r2, r2, #1
 8000800:	eb43 0303 	adc.w	r3, r3, r3
 8000804:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 8000808:	bf08      	it	eq
 800080a:	3d01      	subeq	r5, #1
 800080c:	d0f7      	beq.n	80007fe <__aeabi_dmul+0x1c6>
 800080e:	ea43 0306 	orr.w	r3, r3, r6
 8000812:	4770      	bx	lr
 8000814:	ea94 0f0c 	teq	r4, ip
 8000818:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 800081c:	bf18      	it	ne
 800081e:	ea95 0f0c 	teqne	r5, ip
 8000822:	d00c      	beq.n	800083e <__aeabi_dmul+0x206>
 8000824:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000828:	bf18      	it	ne
 800082a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800082e:	d1d1      	bne.n	80007d4 <__aeabi_dmul+0x19c>
 8000830:	ea81 0103 	eor.w	r1, r1, r3
 8000834:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000838:	f04f 0000 	mov.w	r0, #0
 800083c:	bd70      	pop	{r4, r5, r6, pc}
 800083e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000842:	bf06      	itte	eq
 8000844:	4610      	moveq	r0, r2
 8000846:	4619      	moveq	r1, r3
 8000848:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800084c:	d019      	beq.n	8000882 <__aeabi_dmul+0x24a>
 800084e:	ea94 0f0c 	teq	r4, ip
 8000852:	d102      	bne.n	800085a <__aeabi_dmul+0x222>
 8000854:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000858:	d113      	bne.n	8000882 <__aeabi_dmul+0x24a>
 800085a:	ea95 0f0c 	teq	r5, ip
 800085e:	d105      	bne.n	800086c <__aeabi_dmul+0x234>
 8000860:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000864:	bf1c      	itt	ne
 8000866:	4610      	movne	r0, r2
 8000868:	4619      	movne	r1, r3
 800086a:	d10a      	bne.n	8000882 <__aeabi_dmul+0x24a>
 800086c:	ea81 0103 	eor.w	r1, r1, r3
 8000870:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000874:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000878:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800087c:	f04f 0000 	mov.w	r0, #0
 8000880:	bd70      	pop	{r4, r5, r6, pc}
 8000882:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000886:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800088a:	bd70      	pop	{r4, r5, r6, pc}

0800088c <__aeabi_ddiv>:
 800088c:	b570      	push	{r4, r5, r6, lr}
 800088e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000892:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000896:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800089a:	bf1d      	ittte	ne
 800089c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80008a0:	ea94 0f0c 	teqne	r4, ip
 80008a4:	ea95 0f0c 	teqne	r5, ip
 80008a8:	f000 f8a7 	bleq	80009fa <__aeabi_ddiv+0x16e>
 80008ac:	eba4 0405 	sub.w	r4, r4, r5
 80008b0:	ea81 0e03 	eor.w	lr, r1, r3
 80008b4:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80008b8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80008bc:	f000 8088 	beq.w	80009d0 <__aeabi_ddiv+0x144>
 80008c0:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80008c4:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 80008c8:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 80008cc:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80008d0:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80008d4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80008d8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80008dc:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008e0:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 80008e4:	429d      	cmp	r5, r3
 80008e6:	bf08      	it	eq
 80008e8:	4296      	cmpeq	r6, r2
 80008ea:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 80008ee:	f504 7440 	add.w	r4, r4, #768	; 0x300
 80008f2:	d202      	bcs.n	80008fa <__aeabi_ddiv+0x6e>
 80008f4:	085b      	lsrs	r3, r3, #1
 80008f6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008fa:	1ab6      	subs	r6, r6, r2
 80008fc:	eb65 0503 	sbc.w	r5, r5, r3
 8000900:	085b      	lsrs	r3, r3, #1
 8000902:	ea4f 0232 	mov.w	r2, r2, rrx
 8000906:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 800090a:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 800090e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000912:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000916:	bf22      	ittt	cs
 8000918:	1ab6      	subcs	r6, r6, r2
 800091a:	4675      	movcs	r5, lr
 800091c:	ea40 000c 	orrcs.w	r0, r0, ip
 8000920:	085b      	lsrs	r3, r3, #1
 8000922:	ea4f 0232 	mov.w	r2, r2, rrx
 8000926:	ebb6 0e02 	subs.w	lr, r6, r2
 800092a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800092e:	bf22      	ittt	cs
 8000930:	1ab6      	subcs	r6, r6, r2
 8000932:	4675      	movcs	r5, lr
 8000934:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000938:	085b      	lsrs	r3, r3, #1
 800093a:	ea4f 0232 	mov.w	r2, r2, rrx
 800093e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000942:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000946:	bf22      	ittt	cs
 8000948:	1ab6      	subcs	r6, r6, r2
 800094a:	4675      	movcs	r5, lr
 800094c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000950:	085b      	lsrs	r3, r3, #1
 8000952:	ea4f 0232 	mov.w	r2, r2, rrx
 8000956:	ebb6 0e02 	subs.w	lr, r6, r2
 800095a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800095e:	bf22      	ittt	cs
 8000960:	1ab6      	subcs	r6, r6, r2
 8000962:	4675      	movcs	r5, lr
 8000964:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000968:	ea55 0e06 	orrs.w	lr, r5, r6
 800096c:	d018      	beq.n	80009a0 <__aeabi_ddiv+0x114>
 800096e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000972:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000976:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800097a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800097e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000982:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000986:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800098a:	d1c0      	bne.n	800090e <__aeabi_ddiv+0x82>
 800098c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000990:	d10b      	bne.n	80009aa <__aeabi_ddiv+0x11e>
 8000992:	ea41 0100 	orr.w	r1, r1, r0
 8000996:	f04f 0000 	mov.w	r0, #0
 800099a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 800099e:	e7b6      	b.n	800090e <__aeabi_ddiv+0x82>
 80009a0:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80009a4:	bf04      	itt	eq
 80009a6:	4301      	orreq	r1, r0
 80009a8:	2000      	moveq	r0, #0
 80009aa:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80009ae:	bf88      	it	hi
 80009b0:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80009b4:	f63f aeaf 	bhi.w	8000716 <__aeabi_dmul+0xde>
 80009b8:	ebb5 0c03 	subs.w	ip, r5, r3
 80009bc:	bf04      	itt	eq
 80009be:	ebb6 0c02 	subseq.w	ip, r6, r2
 80009c2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80009c6:	f150 0000 	adcs.w	r0, r0, #0
 80009ca:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80009ce:	bd70      	pop	{r4, r5, r6, pc}
 80009d0:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 80009d4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80009d8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80009dc:	bfc2      	ittt	gt
 80009de:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009e2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009e6:	bd70      	popgt	{r4, r5, r6, pc}
 80009e8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80009ec:	f04f 0e00 	mov.w	lr, #0
 80009f0:	3c01      	subs	r4, #1
 80009f2:	e690      	b.n	8000716 <__aeabi_dmul+0xde>
 80009f4:	ea45 0e06 	orr.w	lr, r5, r6
 80009f8:	e68d      	b.n	8000716 <__aeabi_dmul+0xde>
 80009fa:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009fe:	ea94 0f0c 	teq	r4, ip
 8000a02:	bf08      	it	eq
 8000a04:	ea95 0f0c 	teqeq	r5, ip
 8000a08:	f43f af3b 	beq.w	8000882 <__aeabi_dmul+0x24a>
 8000a0c:	ea94 0f0c 	teq	r4, ip
 8000a10:	d10a      	bne.n	8000a28 <__aeabi_ddiv+0x19c>
 8000a12:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000a16:	f47f af34 	bne.w	8000882 <__aeabi_dmul+0x24a>
 8000a1a:	ea95 0f0c 	teq	r5, ip
 8000a1e:	f47f af25 	bne.w	800086c <__aeabi_dmul+0x234>
 8000a22:	4610      	mov	r0, r2
 8000a24:	4619      	mov	r1, r3
 8000a26:	e72c      	b.n	8000882 <__aeabi_dmul+0x24a>
 8000a28:	ea95 0f0c 	teq	r5, ip
 8000a2c:	d106      	bne.n	8000a3c <__aeabi_ddiv+0x1b0>
 8000a2e:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000a32:	f43f aefd 	beq.w	8000830 <__aeabi_dmul+0x1f8>
 8000a36:	4610      	mov	r0, r2
 8000a38:	4619      	mov	r1, r3
 8000a3a:	e722      	b.n	8000882 <__aeabi_dmul+0x24a>
 8000a3c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a40:	bf18      	it	ne
 8000a42:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a46:	f47f aec5 	bne.w	80007d4 <__aeabi_dmul+0x19c>
 8000a4a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a4e:	f47f af0d 	bne.w	800086c <__aeabi_dmul+0x234>
 8000a52:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a56:	f47f aeeb 	bne.w	8000830 <__aeabi_dmul+0x1f8>
 8000a5a:	e712      	b.n	8000882 <__aeabi_dmul+0x24a>

08000a5c <__gedf2>:
 8000a5c:	f04f 3cff 	mov.w	ip, #4294967295
 8000a60:	e006      	b.n	8000a70 <__cmpdf2+0x4>
 8000a62:	bf00      	nop

08000a64 <__ledf2>:
 8000a64:	f04f 0c01 	mov.w	ip, #1
 8000a68:	e002      	b.n	8000a70 <__cmpdf2+0x4>
 8000a6a:	bf00      	nop

08000a6c <__cmpdf2>:
 8000a6c:	f04f 0c01 	mov.w	ip, #1
 8000a70:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a74:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a78:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a7c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a80:	bf18      	it	ne
 8000a82:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a86:	d01b      	beq.n	8000ac0 <__cmpdf2+0x54>
 8000a88:	b001      	add	sp, #4
 8000a8a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a8e:	bf0c      	ite	eq
 8000a90:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a94:	ea91 0f03 	teqne	r1, r3
 8000a98:	bf02      	ittt	eq
 8000a9a:	ea90 0f02 	teqeq	r0, r2
 8000a9e:	2000      	moveq	r0, #0
 8000aa0:	4770      	bxeq	lr
 8000aa2:	f110 0f00 	cmn.w	r0, #0
 8000aa6:	ea91 0f03 	teq	r1, r3
 8000aaa:	bf58      	it	pl
 8000aac:	4299      	cmppl	r1, r3
 8000aae:	bf08      	it	eq
 8000ab0:	4290      	cmpeq	r0, r2
 8000ab2:	bf2c      	ite	cs
 8000ab4:	17d8      	asrcs	r0, r3, #31
 8000ab6:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000aba:	f040 0001 	orr.w	r0, r0, #1
 8000abe:	4770      	bx	lr
 8000ac0:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000ac4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000ac8:	d102      	bne.n	8000ad0 <__cmpdf2+0x64>
 8000aca:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000ace:	d107      	bne.n	8000ae0 <__cmpdf2+0x74>
 8000ad0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000ad4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000ad8:	d1d6      	bne.n	8000a88 <__cmpdf2+0x1c>
 8000ada:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000ade:	d0d3      	beq.n	8000a88 <__cmpdf2+0x1c>
 8000ae0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000ae4:	4770      	bx	lr
 8000ae6:	bf00      	nop

08000ae8 <__aeabi_cdrcmple>:
 8000ae8:	4684      	mov	ip, r0
 8000aea:	4610      	mov	r0, r2
 8000aec:	4662      	mov	r2, ip
 8000aee:	468c      	mov	ip, r1
 8000af0:	4619      	mov	r1, r3
 8000af2:	4663      	mov	r3, ip
 8000af4:	e000      	b.n	8000af8 <__aeabi_cdcmpeq>
 8000af6:	bf00      	nop

08000af8 <__aeabi_cdcmpeq>:
 8000af8:	b501      	push	{r0, lr}
 8000afa:	f7ff ffb7 	bl	8000a6c <__cmpdf2>
 8000afe:	2800      	cmp	r0, #0
 8000b00:	bf48      	it	mi
 8000b02:	f110 0f00 	cmnmi.w	r0, #0
 8000b06:	bd01      	pop	{r0, pc}

08000b08 <__aeabi_dcmpeq>:
 8000b08:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b0c:	f7ff fff4 	bl	8000af8 <__aeabi_cdcmpeq>
 8000b10:	bf0c      	ite	eq
 8000b12:	2001      	moveq	r0, #1
 8000b14:	2000      	movne	r0, #0
 8000b16:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b1a:	bf00      	nop

08000b1c <__aeabi_dcmplt>:
 8000b1c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b20:	f7ff ffea 	bl	8000af8 <__aeabi_cdcmpeq>
 8000b24:	bf34      	ite	cc
 8000b26:	2001      	movcc	r0, #1
 8000b28:	2000      	movcs	r0, #0
 8000b2a:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b2e:	bf00      	nop

08000b30 <__aeabi_dcmple>:
 8000b30:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b34:	f7ff ffe0 	bl	8000af8 <__aeabi_cdcmpeq>
 8000b38:	bf94      	ite	ls
 8000b3a:	2001      	movls	r0, #1
 8000b3c:	2000      	movhi	r0, #0
 8000b3e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b42:	bf00      	nop

08000b44 <__aeabi_dcmpge>:
 8000b44:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b48:	f7ff ffce 	bl	8000ae8 <__aeabi_cdrcmple>
 8000b4c:	bf94      	ite	ls
 8000b4e:	2001      	movls	r0, #1
 8000b50:	2000      	movhi	r0, #0
 8000b52:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b56:	bf00      	nop

08000b58 <__aeabi_dcmpgt>:
 8000b58:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b5c:	f7ff ffc4 	bl	8000ae8 <__aeabi_cdrcmple>
 8000b60:	bf34      	ite	cc
 8000b62:	2001      	movcc	r0, #1
 8000b64:	2000      	movcs	r0, #0
 8000b66:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b6a:	bf00      	nop

08000b6c <__aeabi_dcmpun>:
 8000b6c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b70:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b74:	d102      	bne.n	8000b7c <__aeabi_dcmpun+0x10>
 8000b76:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b7a:	d10a      	bne.n	8000b92 <__aeabi_dcmpun+0x26>
 8000b7c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b80:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b84:	d102      	bne.n	8000b8c <__aeabi_dcmpun+0x20>
 8000b86:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b8a:	d102      	bne.n	8000b92 <__aeabi_dcmpun+0x26>
 8000b8c:	f04f 0000 	mov.w	r0, #0
 8000b90:	4770      	bx	lr
 8000b92:	f04f 0001 	mov.w	r0, #1
 8000b96:	4770      	bx	lr

08000b98 <__aeabi_d2iz>:
 8000b98:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b9c:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000ba0:	d215      	bcs.n	8000bce <__aeabi_d2iz+0x36>
 8000ba2:	d511      	bpl.n	8000bc8 <__aeabi_d2iz+0x30>
 8000ba4:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000ba8:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000bac:	d912      	bls.n	8000bd4 <__aeabi_d2iz+0x3c>
 8000bae:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000bb2:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000bb6:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000bba:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000bbe:	fa23 f002 	lsr.w	r0, r3, r2
 8000bc2:	bf18      	it	ne
 8000bc4:	4240      	negne	r0, r0
 8000bc6:	4770      	bx	lr
 8000bc8:	f04f 0000 	mov.w	r0, #0
 8000bcc:	4770      	bx	lr
 8000bce:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000bd2:	d105      	bne.n	8000be0 <__aeabi_d2iz+0x48>
 8000bd4:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000bd8:	bf08      	it	eq
 8000bda:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000bde:	4770      	bx	lr
 8000be0:	f04f 0000 	mov.w	r0, #0
 8000be4:	4770      	bx	lr
 8000be6:	bf00      	nop

08000be8 <__aeabi_frsub>:
 8000be8:	f080 4000 	eor.w	r0, r0, #2147483648	; 0x80000000
 8000bec:	e002      	b.n	8000bf4 <__addsf3>
 8000bee:	bf00      	nop

08000bf0 <__aeabi_fsub>:
 8000bf0:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000

08000bf4 <__addsf3>:
 8000bf4:	0042      	lsls	r2, r0, #1
 8000bf6:	bf1f      	itttt	ne
 8000bf8:	ea5f 0341 	movsne.w	r3, r1, lsl #1
 8000bfc:	ea92 0f03 	teqne	r2, r3
 8000c00:	ea7f 6c22 	mvnsne.w	ip, r2, asr #24
 8000c04:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8000c08:	d06a      	beq.n	8000ce0 <__addsf3+0xec>
 8000c0a:	ea4f 6212 	mov.w	r2, r2, lsr #24
 8000c0e:	ebd2 6313 	rsbs	r3, r2, r3, lsr #24
 8000c12:	bfc1      	itttt	gt
 8000c14:	18d2      	addgt	r2, r2, r3
 8000c16:	4041      	eorgt	r1, r0
 8000c18:	4048      	eorgt	r0, r1
 8000c1a:	4041      	eorgt	r1, r0
 8000c1c:	bfb8      	it	lt
 8000c1e:	425b      	neglt	r3, r3
 8000c20:	2b19      	cmp	r3, #25
 8000c22:	bf88      	it	hi
 8000c24:	4770      	bxhi	lr
 8000c26:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
 8000c2a:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000c2e:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
 8000c32:	bf18      	it	ne
 8000c34:	4240      	negne	r0, r0
 8000c36:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000c3a:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
 8000c3e:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
 8000c42:	bf18      	it	ne
 8000c44:	4249      	negne	r1, r1
 8000c46:	ea92 0f03 	teq	r2, r3
 8000c4a:	d03f      	beq.n	8000ccc <__addsf3+0xd8>
 8000c4c:	f1a2 0201 	sub.w	r2, r2, #1
 8000c50:	fa41 fc03 	asr.w	ip, r1, r3
 8000c54:	eb10 000c 	adds.w	r0, r0, ip
 8000c58:	f1c3 0320 	rsb	r3, r3, #32
 8000c5c:	fa01 f103 	lsl.w	r1, r1, r3
 8000c60:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
 8000c64:	d502      	bpl.n	8000c6c <__addsf3+0x78>
 8000c66:	4249      	negs	r1, r1
 8000c68:	eb60 0040 	sbc.w	r0, r0, r0, lsl #1
 8000c6c:	f5b0 0f00 	cmp.w	r0, #8388608	; 0x800000
 8000c70:	d313      	bcc.n	8000c9a <__addsf3+0xa6>
 8000c72:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
 8000c76:	d306      	bcc.n	8000c86 <__addsf3+0x92>
 8000c78:	0840      	lsrs	r0, r0, #1
 8000c7a:	ea4f 0131 	mov.w	r1, r1, rrx
 8000c7e:	f102 0201 	add.w	r2, r2, #1
 8000c82:	2afe      	cmp	r2, #254	; 0xfe
 8000c84:	d251      	bcs.n	8000d2a <__addsf3+0x136>
 8000c86:	f1b1 4f00 	cmp.w	r1, #2147483648	; 0x80000000
 8000c8a:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000c8e:	bf08      	it	eq
 8000c90:	f020 0001 	biceq.w	r0, r0, #1
 8000c94:	ea40 0003 	orr.w	r0, r0, r3
 8000c98:	4770      	bx	lr
 8000c9a:	0049      	lsls	r1, r1, #1
 8000c9c:	eb40 0000 	adc.w	r0, r0, r0
 8000ca0:	f410 0f00 	tst.w	r0, #8388608	; 0x800000
 8000ca4:	f1a2 0201 	sub.w	r2, r2, #1
 8000ca8:	d1ed      	bne.n	8000c86 <__addsf3+0x92>
 8000caa:	fab0 fc80 	clz	ip, r0
 8000cae:	f1ac 0c08 	sub.w	ip, ip, #8
 8000cb2:	ebb2 020c 	subs.w	r2, r2, ip
 8000cb6:	fa00 f00c 	lsl.w	r0, r0, ip
 8000cba:	bfaa      	itet	ge
 8000cbc:	eb00 50c2 	addge.w	r0, r0, r2, lsl #23
 8000cc0:	4252      	neglt	r2, r2
 8000cc2:	4318      	orrge	r0, r3
 8000cc4:	bfbc      	itt	lt
 8000cc6:	40d0      	lsrlt	r0, r2
 8000cc8:	4318      	orrlt	r0, r3
 8000cca:	4770      	bx	lr
 8000ccc:	f092 0f00 	teq	r2, #0
 8000cd0:	f481 0100 	eor.w	r1, r1, #8388608	; 0x800000
 8000cd4:	bf06      	itte	eq
 8000cd6:	f480 0000 	eoreq.w	r0, r0, #8388608	; 0x800000
 8000cda:	3201      	addeq	r2, #1
 8000cdc:	3b01      	subne	r3, #1
 8000cde:	e7b5      	b.n	8000c4c <__addsf3+0x58>
 8000ce0:	ea4f 0341 	mov.w	r3, r1, lsl #1
 8000ce4:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8000ce8:	bf18      	it	ne
 8000cea:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8000cee:	d021      	beq.n	8000d34 <__addsf3+0x140>
 8000cf0:	ea92 0f03 	teq	r2, r3
 8000cf4:	d004      	beq.n	8000d00 <__addsf3+0x10c>
 8000cf6:	f092 0f00 	teq	r2, #0
 8000cfa:	bf08      	it	eq
 8000cfc:	4608      	moveq	r0, r1
 8000cfe:	4770      	bx	lr
 8000d00:	ea90 0f01 	teq	r0, r1
 8000d04:	bf1c      	itt	ne
 8000d06:	2000      	movne	r0, #0
 8000d08:	4770      	bxne	lr
 8000d0a:	f012 4f7f 	tst.w	r2, #4278190080	; 0xff000000
 8000d0e:	d104      	bne.n	8000d1a <__addsf3+0x126>
 8000d10:	0040      	lsls	r0, r0, #1
 8000d12:	bf28      	it	cs
 8000d14:	f040 4000 	orrcs.w	r0, r0, #2147483648	; 0x80000000
 8000d18:	4770      	bx	lr
 8000d1a:	f112 7200 	adds.w	r2, r2, #33554432	; 0x2000000
 8000d1e:	bf3c      	itt	cc
 8000d20:	f500 0000 	addcc.w	r0, r0, #8388608	; 0x800000
 8000d24:	4770      	bxcc	lr
 8000d26:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
 8000d2a:	f043 40fe 	orr.w	r0, r3, #2130706432	; 0x7f000000
 8000d2e:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000d32:	4770      	bx	lr
 8000d34:	ea7f 6222 	mvns.w	r2, r2, asr #24
 8000d38:	bf16      	itet	ne
 8000d3a:	4608      	movne	r0, r1
 8000d3c:	ea7f 6323 	mvnseq.w	r3, r3, asr #24
 8000d40:	4601      	movne	r1, r0
 8000d42:	0242      	lsls	r2, r0, #9
 8000d44:	bf06      	itte	eq
 8000d46:	ea5f 2341 	movseq.w	r3, r1, lsl #9
 8000d4a:	ea90 0f01 	teqeq	r0, r1
 8000d4e:	f440 0080 	orrne.w	r0, r0, #4194304	; 0x400000
 8000d52:	4770      	bx	lr

08000d54 <__aeabi_ui2f>:
 8000d54:	f04f 0300 	mov.w	r3, #0
 8000d58:	e004      	b.n	8000d64 <__aeabi_i2f+0x8>
 8000d5a:	bf00      	nop

08000d5c <__aeabi_i2f>:
 8000d5c:	f010 4300 	ands.w	r3, r0, #2147483648	; 0x80000000
 8000d60:	bf48      	it	mi
 8000d62:	4240      	negmi	r0, r0
 8000d64:	ea5f 0c00 	movs.w	ip, r0
 8000d68:	bf08      	it	eq
 8000d6a:	4770      	bxeq	lr
 8000d6c:	f043 4396 	orr.w	r3, r3, #1258291200	; 0x4b000000
 8000d70:	4601      	mov	r1, r0
 8000d72:	f04f 0000 	mov.w	r0, #0
 8000d76:	e01c      	b.n	8000db2 <__aeabi_l2f+0x2a>

08000d78 <__aeabi_ul2f>:
 8000d78:	ea50 0201 	orrs.w	r2, r0, r1
 8000d7c:	bf08      	it	eq
 8000d7e:	4770      	bxeq	lr
 8000d80:	f04f 0300 	mov.w	r3, #0
 8000d84:	e00a      	b.n	8000d9c <__aeabi_l2f+0x14>
 8000d86:	bf00      	nop

08000d88 <__aeabi_l2f>:
 8000d88:	ea50 0201 	orrs.w	r2, r0, r1
 8000d8c:	bf08      	it	eq
 8000d8e:	4770      	bxeq	lr
 8000d90:	f011 4300 	ands.w	r3, r1, #2147483648	; 0x80000000
 8000d94:	d502      	bpl.n	8000d9c <__aeabi_l2f+0x14>
 8000d96:	4240      	negs	r0, r0
 8000d98:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000d9c:	ea5f 0c01 	movs.w	ip, r1
 8000da0:	bf02      	ittt	eq
 8000da2:	4684      	moveq	ip, r0
 8000da4:	4601      	moveq	r1, r0
 8000da6:	2000      	moveq	r0, #0
 8000da8:	f043 43b6 	orr.w	r3, r3, #1526726656	; 0x5b000000
 8000dac:	bf08      	it	eq
 8000dae:	f1a3 5380 	subeq.w	r3, r3, #268435456	; 0x10000000
 8000db2:	f5a3 0300 	sub.w	r3, r3, #8388608	; 0x800000
 8000db6:	fabc f28c 	clz	r2, ip
 8000dba:	3a08      	subs	r2, #8
 8000dbc:	eba3 53c2 	sub.w	r3, r3, r2, lsl #23
 8000dc0:	db10      	blt.n	8000de4 <__aeabi_l2f+0x5c>
 8000dc2:	fa01 fc02 	lsl.w	ip, r1, r2
 8000dc6:	4463      	add	r3, ip
 8000dc8:	fa00 fc02 	lsl.w	ip, r0, r2
 8000dcc:	f1c2 0220 	rsb	r2, r2, #32
 8000dd0:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 8000dd4:	fa20 f202 	lsr.w	r2, r0, r2
 8000dd8:	eb43 0002 	adc.w	r0, r3, r2
 8000ddc:	bf08      	it	eq
 8000dde:	f020 0001 	biceq.w	r0, r0, #1
 8000de2:	4770      	bx	lr
 8000de4:	f102 0220 	add.w	r2, r2, #32
 8000de8:	fa01 fc02 	lsl.w	ip, r1, r2
 8000dec:	f1c2 0220 	rsb	r2, r2, #32
 8000df0:	ea50 004c 	orrs.w	r0, r0, ip, lsl #1
 8000df4:	fa21 f202 	lsr.w	r2, r1, r2
 8000df8:	eb43 0002 	adc.w	r0, r3, r2
 8000dfc:	bf08      	it	eq
 8000dfe:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8000e02:	4770      	bx	lr

08000e04 <__aeabi_fmul>:
 8000e04:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000e08:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 8000e0c:	bf1e      	ittt	ne
 8000e0e:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 8000e12:	ea92 0f0c 	teqne	r2, ip
 8000e16:	ea93 0f0c 	teqne	r3, ip
 8000e1a:	d06f      	beq.n	8000efc <__aeabi_fmul+0xf8>
 8000e1c:	441a      	add	r2, r3
 8000e1e:	ea80 0c01 	eor.w	ip, r0, r1
 8000e22:	0240      	lsls	r0, r0, #9
 8000e24:	bf18      	it	ne
 8000e26:	ea5f 2141 	movsne.w	r1, r1, lsl #9
 8000e2a:	d01e      	beq.n	8000e6a <__aeabi_fmul+0x66>
 8000e2c:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
 8000e30:	ea43 1050 	orr.w	r0, r3, r0, lsr #5
 8000e34:	ea43 1151 	orr.w	r1, r3, r1, lsr #5
 8000e38:	fba0 3101 	umull	r3, r1, r0, r1
 8000e3c:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
 8000e40:	f5b1 0f00 	cmp.w	r1, #8388608	; 0x800000
 8000e44:	bf3e      	ittt	cc
 8000e46:	0049      	lslcc	r1, r1, #1
 8000e48:	ea41 71d3 	orrcc.w	r1, r1, r3, lsr #31
 8000e4c:	005b      	lslcc	r3, r3, #1
 8000e4e:	ea40 0001 	orr.w	r0, r0, r1
 8000e52:	f162 027f 	sbc.w	r2, r2, #127	; 0x7f
 8000e56:	2afd      	cmp	r2, #253	; 0xfd
 8000e58:	d81d      	bhi.n	8000e96 <__aeabi_fmul+0x92>
 8000e5a:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 8000e5e:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000e62:	bf08      	it	eq
 8000e64:	f020 0001 	biceq.w	r0, r0, #1
 8000e68:	4770      	bx	lr
 8000e6a:	f090 0f00 	teq	r0, #0
 8000e6e:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
 8000e72:	bf08      	it	eq
 8000e74:	0249      	lsleq	r1, r1, #9
 8000e76:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 8000e7a:	ea40 2051 	orr.w	r0, r0, r1, lsr #9
 8000e7e:	3a7f      	subs	r2, #127	; 0x7f
 8000e80:	bfc2      	ittt	gt
 8000e82:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
 8000e86:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 8000e8a:	4770      	bxgt	lr
 8000e8c:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000e90:	f04f 0300 	mov.w	r3, #0
 8000e94:	3a01      	subs	r2, #1
 8000e96:	dc5d      	bgt.n	8000f54 <__aeabi_fmul+0x150>
 8000e98:	f112 0f19 	cmn.w	r2, #25
 8000e9c:	bfdc      	itt	le
 8000e9e:	f000 4000 	andle.w	r0, r0, #2147483648	; 0x80000000
 8000ea2:	4770      	bxle	lr
 8000ea4:	f1c2 0200 	rsb	r2, r2, #0
 8000ea8:	0041      	lsls	r1, r0, #1
 8000eaa:	fa21 f102 	lsr.w	r1, r1, r2
 8000eae:	f1c2 0220 	rsb	r2, r2, #32
 8000eb2:	fa00 fc02 	lsl.w	ip, r0, r2
 8000eb6:	ea5f 0031 	movs.w	r0, r1, rrx
 8000eba:	f140 0000 	adc.w	r0, r0, #0
 8000ebe:	ea53 034c 	orrs.w	r3, r3, ip, lsl #1
 8000ec2:	bf08      	it	eq
 8000ec4:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8000ec8:	4770      	bx	lr
 8000eca:	f092 0f00 	teq	r2, #0
 8000ece:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
 8000ed2:	bf02      	ittt	eq
 8000ed4:	0040      	lsleq	r0, r0, #1
 8000ed6:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
 8000eda:	3a01      	subeq	r2, #1
 8000edc:	d0f9      	beq.n	8000ed2 <__aeabi_fmul+0xce>
 8000ede:	ea40 000c 	orr.w	r0, r0, ip
 8000ee2:	f093 0f00 	teq	r3, #0
 8000ee6:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000eea:	bf02      	ittt	eq
 8000eec:	0049      	lsleq	r1, r1, #1
 8000eee:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
 8000ef2:	3b01      	subeq	r3, #1
 8000ef4:	d0f9      	beq.n	8000eea <__aeabi_fmul+0xe6>
 8000ef6:	ea41 010c 	orr.w	r1, r1, ip
 8000efa:	e78f      	b.n	8000e1c <__aeabi_fmul+0x18>
 8000efc:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 8000f00:	ea92 0f0c 	teq	r2, ip
 8000f04:	bf18      	it	ne
 8000f06:	ea93 0f0c 	teqne	r3, ip
 8000f0a:	d00a      	beq.n	8000f22 <__aeabi_fmul+0x11e>
 8000f0c:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
 8000f10:	bf18      	it	ne
 8000f12:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
 8000f16:	d1d8      	bne.n	8000eca <__aeabi_fmul+0xc6>
 8000f18:	ea80 0001 	eor.w	r0, r0, r1
 8000f1c:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
 8000f20:	4770      	bx	lr
 8000f22:	f090 0f00 	teq	r0, #0
 8000f26:	bf17      	itett	ne
 8000f28:	f090 4f00 	teqne	r0, #2147483648	; 0x80000000
 8000f2c:	4608      	moveq	r0, r1
 8000f2e:	f091 0f00 	teqne	r1, #0
 8000f32:	f091 4f00 	teqne	r1, #2147483648	; 0x80000000
 8000f36:	d014      	beq.n	8000f62 <__aeabi_fmul+0x15e>
 8000f38:	ea92 0f0c 	teq	r2, ip
 8000f3c:	d101      	bne.n	8000f42 <__aeabi_fmul+0x13e>
 8000f3e:	0242      	lsls	r2, r0, #9
 8000f40:	d10f      	bne.n	8000f62 <__aeabi_fmul+0x15e>
 8000f42:	ea93 0f0c 	teq	r3, ip
 8000f46:	d103      	bne.n	8000f50 <__aeabi_fmul+0x14c>
 8000f48:	024b      	lsls	r3, r1, #9
 8000f4a:	bf18      	it	ne
 8000f4c:	4608      	movne	r0, r1
 8000f4e:	d108      	bne.n	8000f62 <__aeabi_fmul+0x15e>
 8000f50:	ea80 0001 	eor.w	r0, r0, r1
 8000f54:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
 8000f58:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000f5c:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000f60:	4770      	bx	lr
 8000f62:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000f66:	f440 0040 	orr.w	r0, r0, #12582912	; 0xc00000
 8000f6a:	4770      	bx	lr

08000f6c <__aeabi_fdiv>:
 8000f6c:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000f70:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 8000f74:	bf1e      	ittt	ne
 8000f76:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 8000f7a:	ea92 0f0c 	teqne	r2, ip
 8000f7e:	ea93 0f0c 	teqne	r3, ip
 8000f82:	d069      	beq.n	8001058 <__aeabi_fdiv+0xec>
 8000f84:	eba2 0203 	sub.w	r2, r2, r3
 8000f88:	ea80 0c01 	eor.w	ip, r0, r1
 8000f8c:	0249      	lsls	r1, r1, #9
 8000f8e:	ea4f 2040 	mov.w	r0, r0, lsl #9
 8000f92:	d037      	beq.n	8001004 <__aeabi_fdiv+0x98>
 8000f94:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 8000f98:	ea43 1111 	orr.w	r1, r3, r1, lsr #4
 8000f9c:	ea43 1310 	orr.w	r3, r3, r0, lsr #4
 8000fa0:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
 8000fa4:	428b      	cmp	r3, r1
 8000fa6:	bf38      	it	cc
 8000fa8:	005b      	lslcc	r3, r3, #1
 8000faa:	f142 027d 	adc.w	r2, r2, #125	; 0x7d
 8000fae:	f44f 0c00 	mov.w	ip, #8388608	; 0x800000
 8000fb2:	428b      	cmp	r3, r1
 8000fb4:	bf24      	itt	cs
 8000fb6:	1a5b      	subcs	r3, r3, r1
 8000fb8:	ea40 000c 	orrcs.w	r0, r0, ip
 8000fbc:	ebb3 0f51 	cmp.w	r3, r1, lsr #1
 8000fc0:	bf24      	itt	cs
 8000fc2:	eba3 0351 	subcs.w	r3, r3, r1, lsr #1
 8000fc6:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000fca:	ebb3 0f91 	cmp.w	r3, r1, lsr #2
 8000fce:	bf24      	itt	cs
 8000fd0:	eba3 0391 	subcs.w	r3, r3, r1, lsr #2
 8000fd4:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000fd8:	ebb3 0fd1 	cmp.w	r3, r1, lsr #3
 8000fdc:	bf24      	itt	cs
 8000fde:	eba3 03d1 	subcs.w	r3, r3, r1, lsr #3
 8000fe2:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000fe6:	011b      	lsls	r3, r3, #4
 8000fe8:	bf18      	it	ne
 8000fea:	ea5f 1c1c 	movsne.w	ip, ip, lsr #4
 8000fee:	d1e0      	bne.n	8000fb2 <__aeabi_fdiv+0x46>
 8000ff0:	2afd      	cmp	r2, #253	; 0xfd
 8000ff2:	f63f af50 	bhi.w	8000e96 <__aeabi_fmul+0x92>
 8000ff6:	428b      	cmp	r3, r1
 8000ff8:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000ffc:	bf08      	it	eq
 8000ffe:	f020 0001 	biceq.w	r0, r0, #1
 8001002:	4770      	bx	lr
 8001004:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
 8001008:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 800100c:	327f      	adds	r2, #127	; 0x7f
 800100e:	bfc2      	ittt	gt
 8001010:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
 8001014:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 8001018:	4770      	bxgt	lr
 800101a:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 800101e:	f04f 0300 	mov.w	r3, #0
 8001022:	3a01      	subs	r2, #1
 8001024:	e737      	b.n	8000e96 <__aeabi_fmul+0x92>
 8001026:	f092 0f00 	teq	r2, #0
 800102a:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
 800102e:	bf02      	ittt	eq
 8001030:	0040      	lsleq	r0, r0, #1
 8001032:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
 8001036:	3a01      	subeq	r2, #1
 8001038:	d0f9      	beq.n	800102e <__aeabi_fdiv+0xc2>
 800103a:	ea40 000c 	orr.w	r0, r0, ip
 800103e:	f093 0f00 	teq	r3, #0
 8001042:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8001046:	bf02      	ittt	eq
 8001048:	0049      	lsleq	r1, r1, #1
 800104a:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
 800104e:	3b01      	subeq	r3, #1
 8001050:	d0f9      	beq.n	8001046 <__aeabi_fdiv+0xda>
 8001052:	ea41 010c 	orr.w	r1, r1, ip
 8001056:	e795      	b.n	8000f84 <__aeabi_fdiv+0x18>
 8001058:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 800105c:	ea92 0f0c 	teq	r2, ip
 8001060:	d108      	bne.n	8001074 <__aeabi_fdiv+0x108>
 8001062:	0242      	lsls	r2, r0, #9
 8001064:	f47f af7d 	bne.w	8000f62 <__aeabi_fmul+0x15e>
 8001068:	ea93 0f0c 	teq	r3, ip
 800106c:	f47f af70 	bne.w	8000f50 <__aeabi_fmul+0x14c>
 8001070:	4608      	mov	r0, r1
 8001072:	e776      	b.n	8000f62 <__aeabi_fmul+0x15e>
 8001074:	ea93 0f0c 	teq	r3, ip
 8001078:	d104      	bne.n	8001084 <__aeabi_fdiv+0x118>
 800107a:	024b      	lsls	r3, r1, #9
 800107c:	f43f af4c 	beq.w	8000f18 <__aeabi_fmul+0x114>
 8001080:	4608      	mov	r0, r1
 8001082:	e76e      	b.n	8000f62 <__aeabi_fmul+0x15e>
 8001084:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
 8001088:	bf18      	it	ne
 800108a:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
 800108e:	d1ca      	bne.n	8001026 <__aeabi_fdiv+0xba>
 8001090:	f030 4200 	bics.w	r2, r0, #2147483648	; 0x80000000
 8001094:	f47f af5c 	bne.w	8000f50 <__aeabi_fmul+0x14c>
 8001098:	f031 4300 	bics.w	r3, r1, #2147483648	; 0x80000000
 800109c:	f47f af3c 	bne.w	8000f18 <__aeabi_fmul+0x114>
 80010a0:	e75f      	b.n	8000f62 <__aeabi_fmul+0x15e>
 80010a2:	bf00      	nop

080010a4 <__aeabi_f2iz>:
 80010a4:	ea4f 0240 	mov.w	r2, r0, lsl #1
 80010a8:	f1b2 4ffe 	cmp.w	r2, #2130706432	; 0x7f000000
 80010ac:	d30f      	bcc.n	80010ce <__aeabi_f2iz+0x2a>
 80010ae:	f04f 039e 	mov.w	r3, #158	; 0x9e
 80010b2:	ebb3 6212 	subs.w	r2, r3, r2, lsr #24
 80010b6:	d90d      	bls.n	80010d4 <__aeabi_f2iz+0x30>
 80010b8:	ea4f 2300 	mov.w	r3, r0, lsl #8
 80010bc:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 80010c0:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
 80010c4:	fa23 f002 	lsr.w	r0, r3, r2
 80010c8:	bf18      	it	ne
 80010ca:	4240      	negne	r0, r0
 80010cc:	4770      	bx	lr
 80010ce:	f04f 0000 	mov.w	r0, #0
 80010d2:	4770      	bx	lr
 80010d4:	f112 0f61 	cmn.w	r2, #97	; 0x61
 80010d8:	d101      	bne.n	80010de <__aeabi_f2iz+0x3a>
 80010da:	0242      	lsls	r2, r0, #9
 80010dc:	d105      	bne.n	80010ea <__aeabi_f2iz+0x46>
 80010de:	f010 4000 	ands.w	r0, r0, #2147483648	; 0x80000000
 80010e2:	bf08      	it	eq
 80010e4:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 80010e8:	4770      	bx	lr
 80010ea:	f04f 0000 	mov.w	r0, #0
 80010ee:	4770      	bx	lr

080010f0 <SysTick_Handler>:
 *      Author: Nvidia
 */
#include "main.h"

void SysTick_Handler(void)
{
 80010f0:	b580      	push	{r7, lr}
 80010f2:	af00      	add	r7, sp, #0
	HAL_IncTick();
 80010f4:	f000 fa86 	bl	8001604 <HAL_IncTick>
	HAL_SYSTICK_IRQHandler();
 80010f8:	f000 fba3 	bl	8001842 <HAL_SYSTICK_IRQHandler>
}
 80010fc:	bf00      	nop
 80010fe:	bd80      	pop	{r7, pc}

08001100 <main>:
void record_time_stop_and_measure_elapsed(void);
void Error_handler(void);
TIM_HandleTypeDef htimer6;

int main(void)
{
 8001100:	b580      	push	{r7, lr}
 8001102:	b0e6      	sub	sp, #408	; 0x198
 8001104:	af00      	add	r7, sp, #0
	HAL_Init();
 8001106:	f000 fa2b 	bl	8001560 <HAL_Init>
	TIMER6_Init();
 800110a:	f000 f821 	bl	8001150 <TIMER6_Init>

	float float_numbers [100];
	//filling array with dummy float number
	for(int i = 0 ; i < 100 ; i++)
 800110e:	2300      	movs	r3, #0
 8001110:	f8c7 3194 	str.w	r3, [r7, #404]	; 0x194
 8001114:	e00a      	b.n	800112c <main+0x2c>
		float_numbers[i] = 2.75;
 8001116:	1d3b      	adds	r3, r7, #4
 8001118:	f8d7 2194 	ldr.w	r2, [r7, #404]	; 0x194
 800111c:	490b      	ldr	r1, [pc, #44]	; (800114c <main+0x4c>)
 800111e:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
	for(int i = 0 ; i < 100 ; i++)
 8001122:	f8d7 3194 	ldr.w	r3, [r7, #404]	; 0x194
 8001126:	3301      	adds	r3, #1
 8001128:	f8c7 3194 	str.w	r3, [r7, #404]	; 0x194
 800112c:	f8d7 3194 	ldr.w	r3, [r7, #404]	; 0x194
 8001130:	2b63      	cmp	r3, #99	; 0x63
 8001132:	ddf0      	ble.n	8001116 <main+0x16>

	//float point operation
	fixed_point_math_calculation(float_numbers, 100);
 8001134:	1d3b      	adds	r3, r7, #4
 8001136:	2164      	movs	r1, #100	; 0x64
 8001138:	4618      	mov	r0, r3
 800113a:	f000 f863 	bl	8001204 <fixed_point_math_calculation>
	//fixed point operation
	float_point_math_calculation(float_numbers, 100);
 800113e:	1d3b      	adds	r3, r7, #4
 8001140:	2164      	movs	r1, #100	; 0x64
 8001142:	4618      	mov	r0, r3
 8001144:	f000 f81e 	bl	8001184 <float_point_math_calculation>

  while (1);
 8001148:	e7fe      	b.n	8001148 <main+0x48>
 800114a:	bf00      	nop
 800114c:	40300000 	.word	0x40300000

08001150 <TIMER6_Init>:
  return 0;
}

//Initializing timer6
void TIMER6_Init(void)
{
 8001150:	b580      	push	{r7, lr}
 8001152:	af00      	add	r7, sp, #0
	htimer6.Instance = TIM6;
 8001154:	4b09      	ldr	r3, [pc, #36]	; (800117c <TIMER6_Init+0x2c>)
 8001156:	4a0a      	ldr	r2, [pc, #40]	; (8001180 <TIMER6_Init+0x30>)
 8001158:	601a      	str	r2, [r3, #0]
	htimer6.Init.Prescaler = 24;		//prescaler
 800115a:	4b08      	ldr	r3, [pc, #32]	; (800117c <TIMER6_Init+0x2c>)
 800115c:	2218      	movs	r2, #24
 800115e:	605a      	str	r2, [r3, #4]
	htimer6.Init.Period = 65535-1; 		//period value loaded into ARR
 8001160:	4b06      	ldr	r3, [pc, #24]	; (800117c <TIMER6_Init+0x2c>)
 8001162:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8001166:	60da      	str	r2, [r3, #12]
	if( HAL_TIM_Base_Init(&htimer6) != HAL_OK )
 8001168:	4804      	ldr	r0, [pc, #16]	; (800117c <TIMER6_Init+0x2c>)
 800116a:	f000 fb76 	bl	800185a <HAL_TIM_Base_Init>
 800116e:	4603      	mov	r3, r0
 8001170:	2b00      	cmp	r3, #0
 8001172:	d001      	beq.n	8001178 <TIMER6_Init+0x28>
	{
		Error_handler();
 8001174:	f000 f8bc 	bl	80012f0 <Error_handler>
	}
}
 8001178:	bf00      	nop
 800117a:	bd80      	pop	{r7, pc}
 800117c:	20000204 	.word	0x20000204
 8001180:	40001000 	.word	0x40001000

08001184 <float_point_math_calculation>:

void float_point_math_calculation(float num_arr[], uint8_t length)
{
 8001184:	b590      	push	{r4, r7, lr}
 8001186:	b087      	sub	sp, #28
 8001188:	af00      	add	r7, sp, #0
 800118a:	6078      	str	r0, [r7, #4]
 800118c:	460b      	mov	r3, r1
 800118e:	70fb      	strb	r3, [r7, #3]
	//start timer
	record_time_start();
 8001190:	f000 f87e 	bl	8001290 <record_time_start>
	float sum = 0, average = 0;
 8001194:	f04f 0300 	mov.w	r3, #0
 8001198:	617b      	str	r3, [r7, #20]
 800119a:	f04f 0300 	mov.w	r3, #0
 800119e:	60fb      	str	r3, [r7, #12]
	for(uint8_t i = 0; i < length; i++ )
 80011a0:	2300      	movs	r3, #0
 80011a2:	74fb      	strb	r3, [r7, #19]
 80011a4:	e00d      	b.n	80011c2 <float_point_math_calculation+0x3e>
	{
		sum += num_arr[i];
 80011a6:	7cfb      	ldrb	r3, [r7, #19]
 80011a8:	009b      	lsls	r3, r3, #2
 80011aa:	687a      	ldr	r2, [r7, #4]
 80011ac:	4413      	add	r3, r2
 80011ae:	681b      	ldr	r3, [r3, #0]
 80011b0:	4619      	mov	r1, r3
 80011b2:	6978      	ldr	r0, [r7, #20]
 80011b4:	f7ff fd1e 	bl	8000bf4 <__addsf3>
 80011b8:	4603      	mov	r3, r0
 80011ba:	617b      	str	r3, [r7, #20]
	for(uint8_t i = 0; i < length; i++ )
 80011bc:	7cfb      	ldrb	r3, [r7, #19]
 80011be:	3301      	adds	r3, #1
 80011c0:	74fb      	strb	r3, [r7, #19]
 80011c2:	7cfa      	ldrb	r2, [r7, #19]
 80011c4:	78fb      	ldrb	r3, [r7, #3]
 80011c6:	429a      	cmp	r2, r3
 80011c8:	d3ed      	bcc.n	80011a6 <float_point_math_calculation+0x22>
	}
	average = sum/length;
 80011ca:	78fb      	ldrb	r3, [r7, #3]
 80011cc:	4618      	mov	r0, r3
 80011ce:	f7ff fdc5 	bl	8000d5c <__aeabi_i2f>
 80011d2:	4603      	mov	r3, r0
 80011d4:	4619      	mov	r1, r3
 80011d6:	6978      	ldr	r0, [r7, #20]
 80011d8:	f7ff fec8 	bl	8000f6c <__aeabi_fdiv>
 80011dc:	4603      	mov	r3, r0
 80011de:	60fb      	str	r3, [r7, #12]

	//stop timer and measure time in us
	record_time_stop_and_measure_elapsed();
 80011e0:	f000 f862 	bl	80012a8 <record_time_stop_and_measure_elapsed>
	printf("%f\n",average );
 80011e4:	68f8      	ldr	r0, [r7, #12]
 80011e6:	f7ff f9cf 	bl	8000588 <__aeabi_f2d>
 80011ea:	4603      	mov	r3, r0
 80011ec:	460c      	mov	r4, r1
 80011ee:	461a      	mov	r2, r3
 80011f0:	4623      	mov	r3, r4
 80011f2:	4803      	ldr	r0, [pc, #12]	; (8001200 <float_point_math_calculation+0x7c>)
 80011f4:	f001 f89e 	bl	8002334 <iprintf>

}
 80011f8:	bf00      	nop
 80011fa:	371c      	adds	r7, #28
 80011fc:	46bd      	mov	sp, r7
 80011fe:	bd90      	pop	{r4, r7, pc}
 8001200:	080040e8 	.word	0x080040e8

08001204 <fixed_point_math_calculation>:

void fixed_point_math_calculation(float num_arr[], uint8_t length)
{
 8001204:	b580      	push	{r7, lr}
 8001206:	b088      	sub	sp, #32
 8001208:	af00      	add	r7, sp, #0
 800120a:	6078      	str	r0, [r7, #4]
 800120c:	460b      	mov	r3, r1
 800120e:	70fb      	strb	r3, [r7, #3]
	//start timer
	record_time_start();
 8001210:	f000 f83e 	bl	8001290 <record_time_start>
	uint32_t sum = 0, average = 0;
 8001214:	2300      	movs	r3, #0
 8001216:	61fb      	str	r3, [r7, #28]
 8001218:	2300      	movs	r3, #0
 800121a:	617b      	str	r3, [r7, #20]
	for(uint8_t i = 0; i < length; i++ )
 800121c:	2300      	movs	r3, #0
 800121e:	76fb      	strb	r3, [r7, #27]
 8001220:	e015      	b.n	800124e <fixed_point_math_calculation+0x4a>
	{
		sum += FLOAT_TO_FIXP(num_arr[i]);
 8001222:	7efb      	ldrb	r3, [r7, #27]
 8001224:	009b      	lsls	r3, r3, #2
 8001226:	687a      	ldr	r2, [r7, #4]
 8001228:	4413      	add	r3, r2
 800122a:	681b      	ldr	r3, [r3, #0]
 800122c:	f04f 418f 	mov.w	r1, #1199570944	; 0x47800000
 8001230:	4618      	mov	r0, r3
 8001232:	f7ff fde7 	bl	8000e04 <__aeabi_fmul>
 8001236:	4603      	mov	r3, r0
 8001238:	4618      	mov	r0, r3
 800123a:	f7ff ff33 	bl	80010a4 <__aeabi_f2iz>
 800123e:	4603      	mov	r3, r0
 8001240:	461a      	mov	r2, r3
 8001242:	69fb      	ldr	r3, [r7, #28]
 8001244:	4413      	add	r3, r2
 8001246:	61fb      	str	r3, [r7, #28]
	for(uint8_t i = 0; i < length; i++ )
 8001248:	7efb      	ldrb	r3, [r7, #27]
 800124a:	3301      	adds	r3, #1
 800124c:	76fb      	strb	r3, [r7, #27]
 800124e:	7efa      	ldrb	r2, [r7, #27]
 8001250:	78fb      	ldrb	r3, [r7, #3]
 8001252:	429a      	cmp	r2, r3
 8001254:	d3e5      	bcc.n	8001222 <fixed_point_math_calculation+0x1e>
	}
	average = sum/length;
 8001256:	78fb      	ldrb	r3, [r7, #3]
 8001258:	69fa      	ldr	r2, [r7, #28]
 800125a:	fbb2 f3f3 	udiv	r3, r2, r3
 800125e:	617b      	str	r3, [r7, #20]
	uint32_t intergral_part = (uint32_t)FIXP_INT_PART(average);
 8001260:	697b      	ldr	r3, [r7, #20]
 8001262:	0c1b      	lsrs	r3, r3, #16
 8001264:	613b      	str	r3, [r7, #16]
	uint32_t decimal_part = (uint32_t)(100 * FIXP_DEC_PART(average) >>FP_SHIFT);
 8001266:	697b      	ldr	r3, [r7, #20]
 8001268:	b29b      	uxth	r3, r3
 800126a:	2264      	movs	r2, #100	; 0x64
 800126c:	fb02 f303 	mul.w	r3, r2, r3
 8001270:	0c1b      	lsrs	r3, r3, #16
 8001272:	60fb      	str	r3, [r7, #12]

	//stop timer and measure time in us
	record_time_stop_and_measure_elapsed();
 8001274:	f000 f818 	bl	80012a8 <record_time_stop_and_measure_elapsed>
	printf("%d.%d\n", intergral_part, decimal_part);
 8001278:	68fa      	ldr	r2, [r7, #12]
 800127a:	6939      	ldr	r1, [r7, #16]
 800127c:	4803      	ldr	r0, [pc, #12]	; (800128c <fixed_point_math_calculation+0x88>)
 800127e:	f001 f859 	bl	8002334 <iprintf>
}
 8001282:	bf00      	nop
 8001284:	3720      	adds	r7, #32
 8001286:	46bd      	mov	sp, r7
 8001288:	bd80      	pop	{r7, pc}
 800128a:	bf00      	nop
 800128c:	080040ec 	.word	0x080040ec

08001290 <record_time_start>:

void record_time_start(void)
{
 8001290:	b580      	push	{r7, lr}
 8001292:	af00      	add	r7, sp, #0
	HAL_TIM_Base_Start(&htimer6);
 8001294:	4802      	ldr	r0, [pc, #8]	; (80012a0 <record_time_start+0x10>)
 8001296:	f000 fb0b 	bl	80018b0 <HAL_TIM_Base_Start>
}
 800129a:	bf00      	nop
 800129c:	bd80      	pop	{r7, pc}
 800129e:	bf00      	nop
 80012a0:	20000204 	.word	0x20000204
 80012a4:	00000000 	.word	0x00000000

080012a8 <record_time_stop_and_measure_elapsed>:
void record_time_stop_and_measure_elapsed(void)
{
 80012a8:	b598      	push	{r3, r4, r7, lr}
 80012aa:	af00      	add	r7, sp, #0
	printf("%f us\n",( ( htimer6.Instance->CNT) * TIME_PERIOD_OF_CNT_CLK) );
 80012ac:	4b0e      	ldr	r3, [pc, #56]	; (80012e8 <record_time_stop_and_measure_elapsed+0x40>)
 80012ae:	681b      	ldr	r3, [r3, #0]
 80012b0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80012b2:	4618      	mov	r0, r3
 80012b4:	f7ff f946 	bl	8000544 <__aeabi_ui2d>
 80012b8:	a309      	add	r3, pc, #36	; (adr r3, 80012e0 <record_time_stop_and_measure_elapsed+0x38>)
 80012ba:	e9d3 2300 	ldrd	r2, r3, [r3]
 80012be:	f7ff f9bb 	bl	8000638 <__aeabi_dmul>
 80012c2:	4603      	mov	r3, r0
 80012c4:	460c      	mov	r4, r1
 80012c6:	461a      	mov	r2, r3
 80012c8:	4623      	mov	r3, r4
 80012ca:	4808      	ldr	r0, [pc, #32]	; (80012ec <record_time_stop_and_measure_elapsed+0x44>)
 80012cc:	f001 f832 	bl	8002334 <iprintf>
	HAL_TIM_Base_Start(&htimer6);
 80012d0:	4805      	ldr	r0, [pc, #20]	; (80012e8 <record_time_stop_and_measure_elapsed+0x40>)
 80012d2:	f000 faed 	bl	80018b0 <HAL_TIM_Base_Start>
}
 80012d6:	bf00      	nop
 80012d8:	bd98      	pop	{r3, r4, r7, pc}
 80012da:	bf00      	nop
 80012dc:	f3af 8000 	nop.w
 80012e0:	eb1c432d 	.word	0xeb1c432d
 80012e4:	3eba36e2 	.word	0x3eba36e2
 80012e8:	20000204 	.word	0x20000204
 80012ec:	080040f4 	.word	0x080040f4

080012f0 <Error_handler>:

void Error_handler(void)
{
 80012f0:	b480      	push	{r7}
 80012f2:	af00      	add	r7, sp, #0
	while(1);
 80012f4:	e7fe      	b.n	80012f4 <Error_handler+0x4>
	...

080012f8 <HAL_MspInit>:
 *      Author: Nvidia
 */
#include "main.h"

void HAL_MspInit(void)
{
 80012f8:	b580      	push	{r7, lr}
 80012fa:	af00      	add	r7, sp, #0
  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_MspInit could be implemented in the user file
   */
	//1. setup priority grouping of the arm cortex mx processor
	HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 80012fc:	2003      	movs	r0, #3
 80012fe:	f000 fa5f 	bl	80017c0 <HAL_NVIC_SetPriorityGrouping>

	//2. Enable required system exceptions of the arm cortex mx processor
	SCB->SHCSR |= 0x7 << 16; //usg fault mem fault bus fault system exception
 8001302:	4b0d      	ldr	r3, [pc, #52]	; (8001338 <HAL_MspInit+0x40>)
 8001304:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001306:	4a0c      	ldr	r2, [pc, #48]	; (8001338 <HAL_MspInit+0x40>)
 8001308:	f443 23e0 	orr.w	r3, r3, #458752	; 0x70000
 800130c:	6253      	str	r3, [r2, #36]	; 0x24

	//3. configure the priority for the system exception
	HAL_NVIC_SetPriority(MemoryManagement_IRQn,0,0);
 800130e:	2200      	movs	r2, #0
 8001310:	2100      	movs	r1, #0
 8001312:	f06f 000b 	mvn.w	r0, #11
 8001316:	f000 fa5e 	bl	80017d6 <HAL_NVIC_SetPriority>
	HAL_NVIC_SetPriority(BusFault_IRQn,0,0);
 800131a:	2200      	movs	r2, #0
 800131c:	2100      	movs	r1, #0
 800131e:	f06f 000a 	mvn.w	r0, #10
 8001322:	f000 fa58 	bl	80017d6 <HAL_NVIC_SetPriority>
	HAL_NVIC_SetPriority(UsageFault_IRQn,0,0);
 8001326:	2200      	movs	r2, #0
 8001328:	2100      	movs	r1, #0
 800132a:	f06f 0009 	mvn.w	r0, #9
 800132e:	f000 fa52 	bl	80017d6 <HAL_NVIC_SetPriority>
}
 8001332:	bf00      	nop
 8001334:	bd80      	pop	{r7, pc}
 8001336:	bf00      	nop
 8001338:	e000ed00 	.word	0xe000ed00

0800133c <HAL_TIM_Base_MspInit>:

void HAL_TIM_Base_MspInit(TIM_HandleTypeDef *htimer)
{
 800133c:	b580      	push	{r7, lr}
 800133e:	b084      	sub	sp, #16
 8001340:	af00      	add	r7, sp, #0
 8001342:	6078      	str	r0, [r7, #4]
	//1. enable the clock for the TIM6 peripheral
	__HAL_RCC_TIM6_CLK_ENABLE();
 8001344:	2300      	movs	r3, #0
 8001346:	60fb      	str	r3, [r7, #12]
 8001348:	4b0b      	ldr	r3, [pc, #44]	; (8001378 <HAL_TIM_Base_MspInit+0x3c>)
 800134a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800134c:	4a0a      	ldr	r2, [pc, #40]	; (8001378 <HAL_TIM_Base_MspInit+0x3c>)
 800134e:	f043 0310 	orr.w	r3, r3, #16
 8001352:	6413      	str	r3, [r2, #64]	; 0x40
 8001354:	4b08      	ldr	r3, [pc, #32]	; (8001378 <HAL_TIM_Base_MspInit+0x3c>)
 8001356:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001358:	f003 0310 	and.w	r3, r3, #16
 800135c:	60fb      	str	r3, [r7, #12]
 800135e:	68fb      	ldr	r3, [r7, #12]

	//2. enable the IRQ of TIM6
	HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 8001360:	2036      	movs	r0, #54	; 0x36
 8001362:	f000 fa54 	bl	800180e <HAL_NVIC_EnableIRQ>

	//3. setup periority for TIM6_DAC_IRQn
	HAL_NVIC_SetPriority(TIM6_DAC_IRQn, 15, 0);
 8001366:	2200      	movs	r2, #0
 8001368:	210f      	movs	r1, #15
 800136a:	2036      	movs	r0, #54	; 0x36
 800136c:	f000 fa33 	bl	80017d6 <HAL_NVIC_SetPriority>
}
 8001370:	bf00      	nop
 8001372:	3710      	adds	r7, #16
 8001374:	46bd      	mov	sp, r7
 8001376:	bd80      	pop	{r7, pc}
 8001378:	40023800 	.word	0x40023800

0800137c <ITM_SendChar>:
/* ITM register addresses */
#define ITM_STIMULUS_PORT0   	*((volatile uint32_t*) 0xE0000000 )
#define ITM_TRACE_EN          	*((volatile uint32_t*) 0xE0000E00 )

void ITM_SendChar(uint8_t ch)
{
 800137c:	b480      	push	{r7}
 800137e:	b083      	sub	sp, #12
 8001380:	af00      	add	r7, sp, #0
 8001382:	4603      	mov	r3, r0
 8001384:	71fb      	strb	r3, [r7, #7]

	//Enable TRCENA
	DEMCR |= ( 1 << 24);
 8001386:	4b0e      	ldr	r3, [pc, #56]	; (80013c0 <ITM_SendChar+0x44>)
 8001388:	681b      	ldr	r3, [r3, #0]
 800138a:	4a0d      	ldr	r2, [pc, #52]	; (80013c0 <ITM_SendChar+0x44>)
 800138c:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8001390:	6013      	str	r3, [r2, #0]

	//enable stimulus port 0
	ITM_TRACE_EN |= ( 1 << 0);
 8001392:	4b0c      	ldr	r3, [pc, #48]	; (80013c4 <ITM_SendChar+0x48>)
 8001394:	681b      	ldr	r3, [r3, #0]
 8001396:	4a0b      	ldr	r2, [pc, #44]	; (80013c4 <ITM_SendChar+0x48>)
 8001398:	f043 0301 	orr.w	r3, r3, #1
 800139c:	6013      	str	r3, [r2, #0]

	// read FIFO status in bit [0]:
	while(!(ITM_STIMULUS_PORT0 & 1));
 800139e:	bf00      	nop
 80013a0:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 80013a4:	681b      	ldr	r3, [r3, #0]
 80013a6:	f003 0301 	and.w	r3, r3, #1
 80013aa:	2b00      	cmp	r3, #0
 80013ac:	d0f8      	beq.n	80013a0 <ITM_SendChar+0x24>

	//Write to ITM stimulus port0
	ITM_STIMULUS_PORT0 = ch;
 80013ae:	f04f 4260 	mov.w	r2, #3758096384	; 0xe0000000
 80013b2:	79fb      	ldrb	r3, [r7, #7]
 80013b4:	6013      	str	r3, [r2, #0]
}
 80013b6:	bf00      	nop
 80013b8:	370c      	adds	r7, #12
 80013ba:	46bd      	mov	sp, r7
 80013bc:	bc80      	pop	{r7}
 80013be:	4770      	bx	lr
 80013c0:	e000edfc 	.word	0xe000edfc
 80013c4:	e0000e00 	.word	0xe0000e00

080013c8 <_read>:
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80013c8:	b580      	push	{r7, lr}
 80013ca:	b086      	sub	sp, #24
 80013cc:	af00      	add	r7, sp, #0
 80013ce:	60f8      	str	r0, [r7, #12]
 80013d0:	60b9      	str	r1, [r7, #8]
 80013d2:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80013d4:	2300      	movs	r3, #0
 80013d6:	617b      	str	r3, [r7, #20]
 80013d8:	e00a      	b.n	80013f0 <_read+0x28>
	{
		*ptr++ = __io_getchar();
 80013da:	f3af 8000 	nop.w
 80013de:	4601      	mov	r1, r0
 80013e0:	68bb      	ldr	r3, [r7, #8]
 80013e2:	1c5a      	adds	r2, r3, #1
 80013e4:	60ba      	str	r2, [r7, #8]
 80013e6:	b2ca      	uxtb	r2, r1
 80013e8:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80013ea:	697b      	ldr	r3, [r7, #20]
 80013ec:	3301      	adds	r3, #1
 80013ee:	617b      	str	r3, [r7, #20]
 80013f0:	697a      	ldr	r2, [r7, #20]
 80013f2:	687b      	ldr	r3, [r7, #4]
 80013f4:	429a      	cmp	r2, r3
 80013f6:	dbf0      	blt.n	80013da <_read+0x12>
	}

return len;
 80013f8:	687b      	ldr	r3, [r7, #4]
}
 80013fa:	4618      	mov	r0, r3
 80013fc:	3718      	adds	r7, #24
 80013fe:	46bd      	mov	sp, r7
 8001400:	bd80      	pop	{r7, pc}

08001402 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8001402:	b580      	push	{r7, lr}
 8001404:	b086      	sub	sp, #24
 8001406:	af00      	add	r7, sp, #0
 8001408:	60f8      	str	r0, [r7, #12]
 800140a:	60b9      	str	r1, [r7, #8]
 800140c:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800140e:	2300      	movs	r3, #0
 8001410:	617b      	str	r3, [r7, #20]
 8001412:	e009      	b.n	8001428 <_write+0x26>
	{
		//__io_putchar(*ptr++);
		ITM_SendChar(*ptr++);
 8001414:	68bb      	ldr	r3, [r7, #8]
 8001416:	1c5a      	adds	r2, r3, #1
 8001418:	60ba      	str	r2, [r7, #8]
 800141a:	781b      	ldrb	r3, [r3, #0]
 800141c:	4618      	mov	r0, r3
 800141e:	f7ff ffad 	bl	800137c <ITM_SendChar>
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001422:	697b      	ldr	r3, [r7, #20]
 8001424:	3301      	adds	r3, #1
 8001426:	617b      	str	r3, [r7, #20]
 8001428:	697a      	ldr	r2, [r7, #20]
 800142a:	687b      	ldr	r3, [r7, #4]
 800142c:	429a      	cmp	r2, r3
 800142e:	dbf1      	blt.n	8001414 <_write+0x12>
	}
	return len;
 8001430:	687b      	ldr	r3, [r7, #4]
}
 8001432:	4618      	mov	r0, r3
 8001434:	3718      	adds	r7, #24
 8001436:	46bd      	mov	sp, r7
 8001438:	bd80      	pop	{r7, pc}

0800143a <_close>:

int _close(int file)
{
 800143a:	b480      	push	{r7}
 800143c:	b083      	sub	sp, #12
 800143e:	af00      	add	r7, sp, #0
 8001440:	6078      	str	r0, [r7, #4]
	return -1;
 8001442:	f04f 33ff 	mov.w	r3, #4294967295
}
 8001446:	4618      	mov	r0, r3
 8001448:	370c      	adds	r7, #12
 800144a:	46bd      	mov	sp, r7
 800144c:	bc80      	pop	{r7}
 800144e:	4770      	bx	lr

08001450 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8001450:	b480      	push	{r7}
 8001452:	b083      	sub	sp, #12
 8001454:	af00      	add	r7, sp, #0
 8001456:	6078      	str	r0, [r7, #4]
 8001458:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 800145a:	683b      	ldr	r3, [r7, #0]
 800145c:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8001460:	605a      	str	r2, [r3, #4]
	return 0;
 8001462:	2300      	movs	r3, #0
}
 8001464:	4618      	mov	r0, r3
 8001466:	370c      	adds	r7, #12
 8001468:	46bd      	mov	sp, r7
 800146a:	bc80      	pop	{r7}
 800146c:	4770      	bx	lr

0800146e <_isatty>:

int _isatty(int file)
{
 800146e:	b480      	push	{r7}
 8001470:	b083      	sub	sp, #12
 8001472:	af00      	add	r7, sp, #0
 8001474:	6078      	str	r0, [r7, #4]
	return 1;
 8001476:	2301      	movs	r3, #1
}
 8001478:	4618      	mov	r0, r3
 800147a:	370c      	adds	r7, #12
 800147c:	46bd      	mov	sp, r7
 800147e:	bc80      	pop	{r7}
 8001480:	4770      	bx	lr

08001482 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8001482:	b480      	push	{r7}
 8001484:	b085      	sub	sp, #20
 8001486:	af00      	add	r7, sp, #0
 8001488:	60f8      	str	r0, [r7, #12]
 800148a:	60b9      	str	r1, [r7, #8]
 800148c:	607a      	str	r2, [r7, #4]
	return 0;
 800148e:	2300      	movs	r3, #0
}
 8001490:	4618      	mov	r0, r3
 8001492:	3714      	adds	r7, #20
 8001494:	46bd      	mov	sp, r7
 8001496:	bc80      	pop	{r7}
 8001498:	4770      	bx	lr
	...

0800149c <_sbrk>:
/**
 _sbrk
 Increase program data space. Malloc and related functions depend on this
**/
caddr_t _sbrk(int incr)
{
 800149c:	b580      	push	{r7, lr}
 800149e:	b084      	sub	sp, #16
 80014a0:	af00      	add	r7, sp, #0
 80014a2:	6078      	str	r0, [r7, #4]
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 80014a4:	4b11      	ldr	r3, [pc, #68]	; (80014ec <_sbrk+0x50>)
 80014a6:	681b      	ldr	r3, [r3, #0]
 80014a8:	2b00      	cmp	r3, #0
 80014aa:	d102      	bne.n	80014b2 <_sbrk+0x16>
		heap_end = &end;
 80014ac:	4b0f      	ldr	r3, [pc, #60]	; (80014ec <_sbrk+0x50>)
 80014ae:	4a10      	ldr	r2, [pc, #64]	; (80014f0 <_sbrk+0x54>)
 80014b0:	601a      	str	r2, [r3, #0]

	prev_heap_end = heap_end;
 80014b2:	4b0e      	ldr	r3, [pc, #56]	; (80014ec <_sbrk+0x50>)
 80014b4:	681b      	ldr	r3, [r3, #0]
 80014b6:	60fb      	str	r3, [r7, #12]
	if (heap_end + incr > stack_ptr)
 80014b8:	4b0c      	ldr	r3, [pc, #48]	; (80014ec <_sbrk+0x50>)
 80014ba:	681a      	ldr	r2, [r3, #0]
 80014bc:	687b      	ldr	r3, [r7, #4]
 80014be:	4413      	add	r3, r2
 80014c0:	466a      	mov	r2, sp
 80014c2:	4293      	cmp	r3, r2
 80014c4:	d907      	bls.n	80014d6 <_sbrk+0x3a>
	{
		errno = ENOMEM;
 80014c6:	f000 fab5 	bl	8001a34 <__errno>
 80014ca:	4602      	mov	r2, r0
 80014cc:	230c      	movs	r3, #12
 80014ce:	6013      	str	r3, [r2, #0]
		return (caddr_t) -1;
 80014d0:	f04f 33ff 	mov.w	r3, #4294967295
 80014d4:	e006      	b.n	80014e4 <_sbrk+0x48>
	}

	heap_end += incr;
 80014d6:	4b05      	ldr	r3, [pc, #20]	; (80014ec <_sbrk+0x50>)
 80014d8:	681a      	ldr	r2, [r3, #0]
 80014da:	687b      	ldr	r3, [r7, #4]
 80014dc:	4413      	add	r3, r2
 80014de:	4a03      	ldr	r2, [pc, #12]	; (80014ec <_sbrk+0x50>)
 80014e0:	6013      	str	r3, [r2, #0]

	return (caddr_t) prev_heap_end;
 80014e2:	68fb      	ldr	r3, [r7, #12]
}
 80014e4:	4618      	mov	r0, r3
 80014e6:	3710      	adds	r7, #16
 80014e8:	46bd      	mov	sp, r7
 80014ea:	bd80      	pop	{r7, pc}
 80014ec:	200001f8 	.word	0x200001f8
 80014f0:	20000250 	.word	0x20000250

080014f4 <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 80014f4:	b480      	push	{r7}
 80014f6:	af00      	add	r7, sp, #0

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 80014f8:	4b03      	ldr	r3, [pc, #12]	; (8001508 <SystemInit+0x14>)
 80014fa:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 80014fe:	609a      	str	r2, [r3, #8]
#endif
}
 8001500:	bf00      	nop
 8001502:	46bd      	mov	sp, r7
 8001504:	bc80      	pop	{r7}
 8001506:	4770      	bx	lr
 8001508:	e000ed00 	.word	0xe000ed00

0800150c <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack      /* set stack pointer */
 800150c:	f8df d034 	ldr.w	sp, [pc, #52]	; 8001544 <LoopFillZerobss+0x14>

/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 8001510:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 8001512:	e003      	b.n	800151c <LoopCopyDataInit>

08001514 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 8001514:	4b0c      	ldr	r3, [pc, #48]	; (8001548 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 8001516:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 8001518:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 800151a:	3104      	adds	r1, #4

0800151c <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 800151c:	480b      	ldr	r0, [pc, #44]	; (800154c <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 800151e:	4b0c      	ldr	r3, [pc, #48]	; (8001550 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 8001520:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 8001522:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 8001524:	d3f6      	bcc.n	8001514 <CopyDataInit>
  ldr  r2, =_sbss
 8001526:	4a0b      	ldr	r2, [pc, #44]	; (8001554 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 8001528:	e002      	b.n	8001530 <LoopFillZerobss>

0800152a <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 800152a:	2300      	movs	r3, #0
  str  r3, [r2], #4
 800152c:	f842 3b04 	str.w	r3, [r2], #4

08001530 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 8001530:	4b09      	ldr	r3, [pc, #36]	; (8001558 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 8001532:	429a      	cmp	r2, r3
  bcc  FillZerobss
 8001534:	d3f9      	bcc.n	800152a <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 8001536:	f7ff ffdd 	bl	80014f4 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 800153a:	f000 fa81 	bl	8001a40 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 800153e:	f7ff fddf 	bl	8001100 <main>
  bx  lr    
 8001542:	4770      	bx	lr
  ldr   sp, =_estack      /* set stack pointer */
 8001544:	20020000 	.word	0x20020000
  ldr  r3, =_sidata
 8001548:	080043c8 	.word	0x080043c8
  ldr  r0, =_sdata
 800154c:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 8001550:	200001dc 	.word	0x200001dc
  ldr  r2, =_sbss
 8001554:	200001dc 	.word	0x200001dc
  ldr  r3, = _ebss
 8001558:	2000024c 	.word	0x2000024c

0800155c <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 800155c:	e7fe      	b.n	800155c <ADC_IRQHandler>
	...

08001560 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8001560:	b580      	push	{r7, lr}
 8001562:	af00      	add	r7, sp, #0
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 8001564:	4b0e      	ldr	r3, [pc, #56]	; (80015a0 <HAL_Init+0x40>)
 8001566:	681b      	ldr	r3, [r3, #0]
 8001568:	4a0d      	ldr	r2, [pc, #52]	; (80015a0 <HAL_Init+0x40>)
 800156a:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800156e:	6013      	str	r3, [r2, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 8001570:	4b0b      	ldr	r3, [pc, #44]	; (80015a0 <HAL_Init+0x40>)
 8001572:	681b      	ldr	r3, [r3, #0]
 8001574:	4a0a      	ldr	r2, [pc, #40]	; (80015a0 <HAL_Init+0x40>)
 8001576:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800157a:	6013      	str	r3, [r2, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 800157c:	4b08      	ldr	r3, [pc, #32]	; (80015a0 <HAL_Init+0x40>)
 800157e:	681b      	ldr	r3, [r3, #0]
 8001580:	4a07      	ldr	r2, [pc, #28]	; (80015a0 <HAL_Init+0x40>)
 8001582:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8001586:	6013      	str	r3, [r2, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8001588:	2003      	movs	r0, #3
 800158a:	f000 f919 	bl	80017c0 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 800158e:	2000      	movs	r0, #0
 8001590:	f000 f808 	bl	80015a4 <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 8001594:	f7ff feb0 	bl	80012f8 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
 8001598:	2300      	movs	r3, #0
}
 800159a:	4618      	mov	r0, r3
 800159c:	bd80      	pop	{r7, pc}
 800159e:	bf00      	nop
 80015a0:	40023c00 	.word	0x40023c00

080015a4 <HAL_InitTick>:
  *       implementation  in user file.
  * @param TickPriority Tick interrupt priority.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 80015a4:	b580      	push	{r7, lr}
 80015a6:	b082      	sub	sp, #8
 80015a8:	af00      	add	r7, sp, #0
 80015aa:	6078      	str	r0, [r7, #4]
  /* Configure the SysTick to have interrupt in 1ms time basis*/
  if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 80015ac:	4b12      	ldr	r3, [pc, #72]	; (80015f8 <HAL_InitTick+0x54>)
 80015ae:	681a      	ldr	r2, [r3, #0]
 80015b0:	4b12      	ldr	r3, [pc, #72]	; (80015fc <HAL_InitTick+0x58>)
 80015b2:	781b      	ldrb	r3, [r3, #0]
 80015b4:	4619      	mov	r1, r3
 80015b6:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80015ba:	fbb3 f3f1 	udiv	r3, r3, r1
 80015be:	fbb2 f3f3 	udiv	r3, r2, r3
 80015c2:	4618      	mov	r0, r3
 80015c4:	f000 f931 	bl	800182a <HAL_SYSTICK_Config>
 80015c8:	4603      	mov	r3, r0
 80015ca:	2b00      	cmp	r3, #0
 80015cc:	d001      	beq.n	80015d2 <HAL_InitTick+0x2e>
  {
    return HAL_ERROR;
 80015ce:	2301      	movs	r3, #1
 80015d0:	e00e      	b.n	80015f0 <HAL_InitTick+0x4c>
  }

  /* Configure the SysTick IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 80015d2:	687b      	ldr	r3, [r7, #4]
 80015d4:	2b0f      	cmp	r3, #15
 80015d6:	d80a      	bhi.n	80015ee <HAL_InitTick+0x4a>
  {
    HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 80015d8:	2200      	movs	r2, #0
 80015da:	6879      	ldr	r1, [r7, #4]
 80015dc:	f04f 30ff 	mov.w	r0, #4294967295
 80015e0:	f000 f8f9 	bl	80017d6 <HAL_NVIC_SetPriority>
    uwTickPrio = TickPriority;
 80015e4:	4a06      	ldr	r2, [pc, #24]	; (8001600 <HAL_InitTick+0x5c>)
 80015e6:	687b      	ldr	r3, [r7, #4]
 80015e8:	6013      	str	r3, [r2, #0]
  {
    return HAL_ERROR;
  }

  /* Return function status */
  return HAL_OK;
 80015ea:	2300      	movs	r3, #0
 80015ec:	e000      	b.n	80015f0 <HAL_InitTick+0x4c>
    return HAL_ERROR;
 80015ee:	2301      	movs	r3, #1
}
 80015f0:	4618      	mov	r0, r3
 80015f2:	3708      	adds	r7, #8
 80015f4:	46bd      	mov	sp, r7
 80015f6:	bd80      	pop	{r7, pc}
 80015f8:	20000000 	.word	0x20000000
 80015fc:	20000008 	.word	0x20000008
 8001600:	20000004 	.word	0x20000004

08001604 <HAL_IncTick>:
 * @note This function is declared as __weak to be overwritten in case of other 
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
 8001604:	b480      	push	{r7}
 8001606:	af00      	add	r7, sp, #0
  uwTick += uwTickFreq;
 8001608:	4b05      	ldr	r3, [pc, #20]	; (8001620 <HAL_IncTick+0x1c>)
 800160a:	781b      	ldrb	r3, [r3, #0]
 800160c:	461a      	mov	r2, r3
 800160e:	4b05      	ldr	r3, [pc, #20]	; (8001624 <HAL_IncTick+0x20>)
 8001610:	681b      	ldr	r3, [r3, #0]
 8001612:	4413      	add	r3, r2
 8001614:	4a03      	ldr	r2, [pc, #12]	; (8001624 <HAL_IncTick+0x20>)
 8001616:	6013      	str	r3, [r2, #0]
}
 8001618:	bf00      	nop
 800161a:	46bd      	mov	sp, r7
 800161c:	bc80      	pop	{r7}
 800161e:	4770      	bx	lr
 8001620:	20000008 	.word	0x20000008
 8001624:	20000244 	.word	0x20000244

08001628 <__NVIC_SetPriorityGrouping>:
           In case of a conflict between priority grouping and available
           priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
  \param [in]      PriorityGroup  Priority grouping field.
 */
__STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 8001628:	b480      	push	{r7}
 800162a:	b085      	sub	sp, #20
 800162c:	af00      	add	r7, sp, #0
 800162e:	6078      	str	r0, [r7, #4]
  uint32_t reg_value;
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 are used          */
 8001630:	687b      	ldr	r3, [r7, #4]
 8001632:	f003 0307 	and.w	r3, r3, #7
 8001636:	60fb      	str	r3, [r7, #12]

  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8001638:	4b0c      	ldr	r3, [pc, #48]	; (800166c <__NVIC_SetPriorityGrouping+0x44>)
 800163a:	68db      	ldr	r3, [r3, #12]
 800163c:	60bb      	str	r3, [r7, #8]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 800163e:	68ba      	ldr	r2, [r7, #8]
 8001640:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 8001644:	4013      	ands	r3, r2
 8001646:	60bb      	str	r3, [r7, #8]
  reg_value  =  (reg_value                                   |
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8001648:	68fb      	ldr	r3, [r7, #12]
 800164a:	021a      	lsls	r2, r3, #8
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 800164c:	68bb      	ldr	r3, [r7, #8]
 800164e:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 8001650:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8001654:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8001658:	60bb      	str	r3, [r7, #8]
  SCB->AIRCR =  reg_value;
 800165a:	4a04      	ldr	r2, [pc, #16]	; (800166c <__NVIC_SetPriorityGrouping+0x44>)
 800165c:	68bb      	ldr	r3, [r7, #8]
 800165e:	60d3      	str	r3, [r2, #12]
}
 8001660:	bf00      	nop
 8001662:	3714      	adds	r7, #20
 8001664:	46bd      	mov	sp, r7
 8001666:	bc80      	pop	{r7}
 8001668:	4770      	bx	lr
 800166a:	bf00      	nop
 800166c:	e000ed00 	.word	0xe000ed00

08001670 <__NVIC_GetPriorityGrouping>:
  \brief   Get Priority Grouping
  \details Reads the priority grouping field from the NVIC Interrupt Controller.
  \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
 */
__STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
{
 8001670:	b480      	push	{r7}
 8001672:	af00      	add	r7, sp, #0
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8001674:	4b04      	ldr	r3, [pc, #16]	; (8001688 <__NVIC_GetPriorityGrouping+0x18>)
 8001676:	68db      	ldr	r3, [r3, #12]
 8001678:	0a1b      	lsrs	r3, r3, #8
 800167a:	f003 0307 	and.w	r3, r3, #7
}
 800167e:	4618      	mov	r0, r3
 8001680:	46bd      	mov	sp, r7
 8001682:	bc80      	pop	{r7}
 8001684:	4770      	bx	lr
 8001686:	bf00      	nop
 8001688:	e000ed00 	.word	0xe000ed00

0800168c <__NVIC_EnableIRQ>:
  \details Enables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
 800168c:	b480      	push	{r7}
 800168e:	b083      	sub	sp, #12
 8001690:	af00      	add	r7, sp, #0
 8001692:	4603      	mov	r3, r0
 8001694:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8001696:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800169a:	2b00      	cmp	r3, #0
 800169c:	db0b      	blt.n	80016b6 <__NVIC_EnableIRQ+0x2a>
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800169e:	79fb      	ldrb	r3, [r7, #7]
 80016a0:	f003 021f 	and.w	r2, r3, #31
 80016a4:	4906      	ldr	r1, [pc, #24]	; (80016c0 <__NVIC_EnableIRQ+0x34>)
 80016a6:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80016aa:	095b      	lsrs	r3, r3, #5
 80016ac:	2001      	movs	r0, #1
 80016ae:	fa00 f202 	lsl.w	r2, r0, r2
 80016b2:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  }
}
 80016b6:	bf00      	nop
 80016b8:	370c      	adds	r7, #12
 80016ba:	46bd      	mov	sp, r7
 80016bc:	bc80      	pop	{r7}
 80016be:	4770      	bx	lr
 80016c0:	e000e100 	.word	0xe000e100

080016c4 <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 80016c4:	b480      	push	{r7}
 80016c6:	b083      	sub	sp, #12
 80016c8:	af00      	add	r7, sp, #0
 80016ca:	4603      	mov	r3, r0
 80016cc:	6039      	str	r1, [r7, #0]
 80016ce:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 80016d0:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80016d4:	2b00      	cmp	r3, #0
 80016d6:	db0a      	blt.n	80016ee <__NVIC_SetPriority+0x2a>
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80016d8:	683b      	ldr	r3, [r7, #0]
 80016da:	b2da      	uxtb	r2, r3
 80016dc:	490c      	ldr	r1, [pc, #48]	; (8001710 <__NVIC_SetPriority+0x4c>)
 80016de:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80016e2:	0112      	lsls	r2, r2, #4
 80016e4:	b2d2      	uxtb	r2, r2
 80016e6:	440b      	add	r3, r1
 80016e8:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
  }
  else
  {
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  }
}
 80016ec:	e00a      	b.n	8001704 <__NVIC_SetPriority+0x40>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80016ee:	683b      	ldr	r3, [r7, #0]
 80016f0:	b2da      	uxtb	r2, r3
 80016f2:	4908      	ldr	r1, [pc, #32]	; (8001714 <__NVIC_SetPriority+0x50>)
 80016f4:	79fb      	ldrb	r3, [r7, #7]
 80016f6:	f003 030f 	and.w	r3, r3, #15
 80016fa:	3b04      	subs	r3, #4
 80016fc:	0112      	lsls	r2, r2, #4
 80016fe:	b2d2      	uxtb	r2, r2
 8001700:	440b      	add	r3, r1
 8001702:	761a      	strb	r2, [r3, #24]
}
 8001704:	bf00      	nop
 8001706:	370c      	adds	r7, #12
 8001708:	46bd      	mov	sp, r7
 800170a:	bc80      	pop	{r7}
 800170c:	4770      	bx	lr
 800170e:	bf00      	nop
 8001710:	e000e100 	.word	0xe000e100
 8001714:	e000ed00 	.word	0xe000ed00

08001718 <NVIC_EncodePriority>:
  \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
  \param [in]       SubPriority  Subpriority value (starting from 0).
  \return                        Encoded priority. Value can be used in the function \ref NVIC_SetPriority().
 */
__STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uint32_t SubPriority)
{
 8001718:	b480      	push	{r7}
 800171a:	b089      	sub	sp, #36	; 0x24
 800171c:	af00      	add	r7, sp, #0
 800171e:	60f8      	str	r0, [r7, #12]
 8001720:	60b9      	str	r1, [r7, #8]
 8001722:	607a      	str	r2, [r7, #4]
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
 8001724:	68fb      	ldr	r3, [r7, #12]
 8001726:	f003 0307 	and.w	r3, r3, #7
 800172a:	61fb      	str	r3, [r7, #28]
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 800172c:	69fb      	ldr	r3, [r7, #28]
 800172e:	f1c3 0307 	rsb	r3, r3, #7
 8001732:	2b04      	cmp	r3, #4
 8001734:	bf28      	it	cs
 8001736:	2304      	movcs	r3, #4
 8001738:	61bb      	str	r3, [r7, #24]
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800173a:	69fb      	ldr	r3, [r7, #28]
 800173c:	3304      	adds	r3, #4
 800173e:	2b06      	cmp	r3, #6
 8001740:	d902      	bls.n	8001748 <NVIC_EncodePriority+0x30>
 8001742:	69fb      	ldr	r3, [r7, #28]
 8001744:	3b03      	subs	r3, #3
 8001746:	e000      	b.n	800174a <NVIC_EncodePriority+0x32>
 8001748:	2300      	movs	r3, #0
 800174a:	617b      	str	r3, [r7, #20]

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 800174c:	f04f 32ff 	mov.w	r2, #4294967295
 8001750:	69bb      	ldr	r3, [r7, #24]
 8001752:	fa02 f303 	lsl.w	r3, r2, r3
 8001756:	43da      	mvns	r2, r3
 8001758:	68bb      	ldr	r3, [r7, #8]
 800175a:	401a      	ands	r2, r3
 800175c:	697b      	ldr	r3, [r7, #20]
 800175e:	409a      	lsls	r2, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8001760:	f04f 31ff 	mov.w	r1, #4294967295
 8001764:	697b      	ldr	r3, [r7, #20]
 8001766:	fa01 f303 	lsl.w	r3, r1, r3
 800176a:	43d9      	mvns	r1, r3
 800176c:	687b      	ldr	r3, [r7, #4]
 800176e:	400b      	ands	r3, r1
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8001770:	4313      	orrs	r3, r2
         );
}
 8001772:	4618      	mov	r0, r3
 8001774:	3724      	adds	r7, #36	; 0x24
 8001776:	46bd      	mov	sp, r7
 8001778:	bc80      	pop	{r7}
 800177a:	4770      	bx	lr

0800177c <SysTick_Config>:
  \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
 800177c:	b580      	push	{r7, lr}
 800177e:	b082      	sub	sp, #8
 8001780:	af00      	add	r7, sp, #0
 8001782:	6078      	str	r0, [r7, #4]
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 8001784:	687b      	ldr	r3, [r7, #4]
 8001786:	3b01      	subs	r3, #1
 8001788:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 800178c:	d301      	bcc.n	8001792 <SysTick_Config+0x16>
  {
    return (1UL);                                                   /* Reload value impossible */
 800178e:	2301      	movs	r3, #1
 8001790:	e00f      	b.n	80017b2 <SysTick_Config+0x36>
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 8001792:	4a0a      	ldr	r2, [pc, #40]	; (80017bc <SysTick_Config+0x40>)
 8001794:	687b      	ldr	r3, [r7, #4]
 8001796:	3b01      	subs	r3, #1
 8001798:	6053      	str	r3, [r2, #4]
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
 800179a:	210f      	movs	r1, #15
 800179c:	f04f 30ff 	mov.w	r0, #4294967295
 80017a0:	f7ff ff90 	bl	80016c4 <__NVIC_SetPriority>
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 80017a4:	4b05      	ldr	r3, [pc, #20]	; (80017bc <SysTick_Config+0x40>)
 80017a6:	2200      	movs	r2, #0
 80017a8:	609a      	str	r2, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 80017aa:	4b04      	ldr	r3, [pc, #16]	; (80017bc <SysTick_Config+0x40>)
 80017ac:	2207      	movs	r2, #7
 80017ae:	601a      	str	r2, [r3, #0]
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTick Timer */
  return (0UL);                                                     /* Function successful */
 80017b0:	2300      	movs	r3, #0
}
 80017b2:	4618      	mov	r0, r3
 80017b4:	3708      	adds	r7, #8
 80017b6:	46bd      	mov	sp, r7
 80017b8:	bd80      	pop	{r7, pc}
 80017ba:	bf00      	nop
 80017bc:	e000e010 	.word	0xe000e010

080017c0 <HAL_NVIC_SetPriorityGrouping>:
  * @note   When the NVIC_PriorityGroup_0 is selected, IRQ preemption is no more possible. 
  *         The pending IRQ priority will be managed only by the subpriority. 
  * @retval None
  */
void HAL_NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 80017c0:	b580      	push	{r7, lr}
 80017c2:	b082      	sub	sp, #8
 80017c4:	af00      	add	r7, sp, #0
 80017c6:	6078      	str	r0, [r7, #4]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
 80017c8:	6878      	ldr	r0, [r7, #4]
 80017ca:	f7ff ff2d 	bl	8001628 <__NVIC_SetPriorityGrouping>
}
 80017ce:	bf00      	nop
 80017d0:	3708      	adds	r7, #8
 80017d2:	46bd      	mov	sp, r7
 80017d4:	bd80      	pop	{r7, pc}

080017d6 <HAL_NVIC_SetPriority>:
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 80017d6:	b580      	push	{r7, lr}
 80017d8:	b086      	sub	sp, #24
 80017da:	af00      	add	r7, sp, #0
 80017dc:	4603      	mov	r3, r0
 80017de:	60b9      	str	r1, [r7, #8]
 80017e0:	607a      	str	r2, [r7, #4]
 80017e2:	73fb      	strb	r3, [r7, #15]
  uint32_t prioritygroup = 0x00U;
 80017e4:	2300      	movs	r3, #0
 80017e6:	617b      	str	r3, [r7, #20]
  
  /* Check the parameters */
  assert_param(IS_NVIC_SUB_PRIORITY(SubPriority));
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
 80017e8:	f7ff ff42 	bl	8001670 <__NVIC_GetPriorityGrouping>
 80017ec:	6178      	str	r0, [r7, #20]
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
 80017ee:	687a      	ldr	r2, [r7, #4]
 80017f0:	68b9      	ldr	r1, [r7, #8]
 80017f2:	6978      	ldr	r0, [r7, #20]
 80017f4:	f7ff ff90 	bl	8001718 <NVIC_EncodePriority>
 80017f8:	4602      	mov	r2, r0
 80017fa:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80017fe:	4611      	mov	r1, r2
 8001800:	4618      	mov	r0, r3
 8001802:	f7ff ff5f 	bl	80016c4 <__NVIC_SetPriority>
}
 8001806:	bf00      	nop
 8001808:	3718      	adds	r7, #24
 800180a:	46bd      	mov	sp, r7
 800180c:	bd80      	pop	{r7, pc}

0800180e <HAL_NVIC_EnableIRQ>:
  *         This parameter can be an enumerator of IRQn_Type enumeration
  *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSIS device file (stm32f4xxxx.h))
  * @retval None
  */
void HAL_NVIC_EnableIRQ(IRQn_Type IRQn)
{
 800180e:	b580      	push	{r7, lr}
 8001810:	b082      	sub	sp, #8
 8001812:	af00      	add	r7, sp, #0
 8001814:	4603      	mov	r3, r0
 8001816:	71fb      	strb	r3, [r7, #7]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
 8001818:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800181c:	4618      	mov	r0, r3
 800181e:	f7ff ff35 	bl	800168c <__NVIC_EnableIRQ>
}
 8001822:	bf00      	nop
 8001824:	3708      	adds	r7, #8
 8001826:	46bd      	mov	sp, r7
 8001828:	bd80      	pop	{r7, pc}

0800182a <HAL_SYSTICK_Config>:
  * @param  TicksNumb Specifies the ticks Number of ticks between two interrupts.
  * @retval status:  - 0  Function succeeded.
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
 800182a:	b580      	push	{r7, lr}
 800182c:	b082      	sub	sp, #8
 800182e:	af00      	add	r7, sp, #0
 8001830:	6078      	str	r0, [r7, #4]
   return SysTick_Config(TicksNumb);
 8001832:	6878      	ldr	r0, [r7, #4]
 8001834:	f7ff ffa2 	bl	800177c <SysTick_Config>
 8001838:	4603      	mov	r3, r0
}
 800183a:	4618      	mov	r0, r3
 800183c:	3708      	adds	r7, #8
 800183e:	46bd      	mov	sp, r7
 8001840:	bd80      	pop	{r7, pc}

08001842 <HAL_SYSTICK_IRQHandler>:
/**
  * @brief  This function handles SYSTICK interrupt request.
  * @retval None
  */
void HAL_SYSTICK_IRQHandler(void)
{
 8001842:	b580      	push	{r7, lr}
 8001844:	af00      	add	r7, sp, #0
  HAL_SYSTICK_Callback();
 8001846:	f000 f802 	bl	800184e <HAL_SYSTICK_Callback>
}
 800184a:	bf00      	nop
 800184c:	bd80      	pop	{r7, pc}

0800184e <HAL_SYSTICK_Callback>:
/**
  * @brief  SYSTICK callback.
  * @retval None
  */
__weak void HAL_SYSTICK_Callback(void)
{
 800184e:	b480      	push	{r7}
 8001850:	af00      	add	r7, sp, #0
  /* NOTE : This function Should not be modified, when the callback is needed,
            the HAL_SYSTICK_Callback could be implemented in the user file
   */
}
 8001852:	bf00      	nop
 8001854:	46bd      	mov	sp, r7
 8001856:	bc80      	pop	{r7}
 8001858:	4770      	bx	lr

0800185a <HAL_TIM_Base_Init>:
  *         Ex: call @ref HAL_TIM_Base_DeInit() before HAL_TIM_Base_Init()
  * @param  htim TIM Base handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_Base_Init(TIM_HandleTypeDef *htim)
{
 800185a:	b580      	push	{r7, lr}
 800185c:	b082      	sub	sp, #8
 800185e:	af00      	add	r7, sp, #0
 8001860:	6078      	str	r0, [r7, #4]
  /* Check the TIM handle allocation */
  if (htim == NULL)
 8001862:	687b      	ldr	r3, [r7, #4]
 8001864:	2b00      	cmp	r3, #0
 8001866:	d101      	bne.n	800186c <HAL_TIM_Base_Init+0x12>
  {
    return HAL_ERROR;
 8001868:	2301      	movs	r3, #1
 800186a:	e01d      	b.n	80018a8 <HAL_TIM_Base_Init+0x4e>
  assert_param(IS_TIM_INSTANCE(htim->Instance));
  assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
  assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
  assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));

  if (htim->State == HAL_TIM_STATE_RESET)
 800186c:	687b      	ldr	r3, [r7, #4]
 800186e:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8001872:	b2db      	uxtb	r3, r3
 8001874:	2b00      	cmp	r3, #0
 8001876:	d106      	bne.n	8001886 <HAL_TIM_Base_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    htim->Lock = HAL_UNLOCKED;
 8001878:	687b      	ldr	r3, [r7, #4]
 800187a:	2200      	movs	r2, #0
 800187c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
    }
    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    htim->Base_MspInitCallback(htim);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    HAL_TIM_Base_MspInit(htim);
 8001880:	6878      	ldr	r0, [r7, #4]
 8001882:	f7ff fd5b 	bl	800133c <HAL_TIM_Base_MspInit>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 8001886:	687b      	ldr	r3, [r7, #4]
 8001888:	2202      	movs	r2, #2
 800188a:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  /* Set the Time Base configuration */
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800188e:	687b      	ldr	r3, [r7, #4]
 8001890:	681a      	ldr	r2, [r3, #0]
 8001892:	687b      	ldr	r3, [r7, #4]
 8001894:	3304      	adds	r3, #4
 8001896:	4619      	mov	r1, r3
 8001898:	4610      	mov	r0, r2
 800189a:	f000 f82d 	bl	80018f8 <TIM_Base_SetConfig>

  /* Initialize the TIM state*/
  htim->State = HAL_TIM_STATE_READY;
 800189e:	687b      	ldr	r3, [r7, #4]
 80018a0:	2201      	movs	r2, #1
 80018a2:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  return HAL_OK;
 80018a6:	2300      	movs	r3, #0
}
 80018a8:	4618      	mov	r0, r3
 80018aa:	3708      	adds	r7, #8
 80018ac:	46bd      	mov	sp, r7
 80018ae:	bd80      	pop	{r7, pc}

080018b0 <HAL_TIM_Base_Start>:
  * @brief  Starts the TIM Base generation.
  * @param  htim TIM Base handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_Base_Start(TIM_HandleTypeDef *htim)
{
 80018b0:	b480      	push	{r7}
 80018b2:	b085      	sub	sp, #20
 80018b4:	af00      	add	r7, sp, #0
 80018b6:	6078      	str	r0, [r7, #4]

  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 80018b8:	687b      	ldr	r3, [r7, #4]
 80018ba:	2202      	movs	r2, #2
 80018bc:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 80018c0:	687b      	ldr	r3, [r7, #4]
 80018c2:	681b      	ldr	r3, [r3, #0]
 80018c4:	689b      	ldr	r3, [r3, #8]
 80018c6:	f003 0307 	and.w	r3, r3, #7
 80018ca:	60fb      	str	r3, [r7, #12]
  if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 80018cc:	68fb      	ldr	r3, [r7, #12]
 80018ce:	2b06      	cmp	r3, #6
 80018d0:	d007      	beq.n	80018e2 <HAL_TIM_Base_Start+0x32>
  {
    __HAL_TIM_ENABLE(htim);
 80018d2:	687b      	ldr	r3, [r7, #4]
 80018d4:	681b      	ldr	r3, [r3, #0]
 80018d6:	681a      	ldr	r2, [r3, #0]
 80018d8:	687b      	ldr	r3, [r7, #4]
 80018da:	681b      	ldr	r3, [r3, #0]
 80018dc:	f042 0201 	orr.w	r2, r2, #1
 80018e0:	601a      	str	r2, [r3, #0]
  }

  /* Change the TIM state*/
  htim->State = HAL_TIM_STATE_READY;
 80018e2:	687b      	ldr	r3, [r7, #4]
 80018e4:	2201      	movs	r2, #1
 80018e6:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  /* Return function status */
  return HAL_OK;
 80018ea:	2300      	movs	r3, #0
}
 80018ec:	4618      	mov	r0, r3
 80018ee:	3714      	adds	r7, #20
 80018f0:	46bd      	mov	sp, r7
 80018f2:	bc80      	pop	{r7}
 80018f4:	4770      	bx	lr
	...

080018f8 <TIM_Base_SetConfig>:
  * @param  TIMx TIM peripheral
  * @param  Structure TIM Base configuration structure
  * @retval None
  */
void TIM_Base_SetConfig(TIM_TypeDef *TIMx, TIM_Base_InitTypeDef *Structure)
{
 80018f8:	b480      	push	{r7}
 80018fa:	b085      	sub	sp, #20
 80018fc:	af00      	add	r7, sp, #0
 80018fe:	6078      	str	r0, [r7, #4]
 8001900:	6039      	str	r1, [r7, #0]
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;
 8001902:	687b      	ldr	r3, [r7, #4]
 8001904:	681b      	ldr	r3, [r3, #0]
 8001906:	60fb      	str	r3, [r7, #12]

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8001908:	687b      	ldr	r3, [r7, #4]
 800190a:	4a3f      	ldr	r2, [pc, #252]	; (8001a08 <TIM_Base_SetConfig+0x110>)
 800190c:	4293      	cmp	r3, r2
 800190e:	d013      	beq.n	8001938 <TIM_Base_SetConfig+0x40>
 8001910:	687b      	ldr	r3, [r7, #4]
 8001912:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8001916:	d00f      	beq.n	8001938 <TIM_Base_SetConfig+0x40>
 8001918:	687b      	ldr	r3, [r7, #4]
 800191a:	4a3c      	ldr	r2, [pc, #240]	; (8001a0c <TIM_Base_SetConfig+0x114>)
 800191c:	4293      	cmp	r3, r2
 800191e:	d00b      	beq.n	8001938 <TIM_Base_SetConfig+0x40>
 8001920:	687b      	ldr	r3, [r7, #4]
 8001922:	4a3b      	ldr	r2, [pc, #236]	; (8001a10 <TIM_Base_SetConfig+0x118>)
 8001924:	4293      	cmp	r3, r2
 8001926:	d007      	beq.n	8001938 <TIM_Base_SetConfig+0x40>
 8001928:	687b      	ldr	r3, [r7, #4]
 800192a:	4a3a      	ldr	r2, [pc, #232]	; (8001a14 <TIM_Base_SetConfig+0x11c>)
 800192c:	4293      	cmp	r3, r2
 800192e:	d003      	beq.n	8001938 <TIM_Base_SetConfig+0x40>
 8001930:	687b      	ldr	r3, [r7, #4]
 8001932:	4a39      	ldr	r2, [pc, #228]	; (8001a18 <TIM_Base_SetConfig+0x120>)
 8001934:	4293      	cmp	r3, r2
 8001936:	d108      	bne.n	800194a <TIM_Base_SetConfig+0x52>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 8001938:	68fb      	ldr	r3, [r7, #12]
 800193a:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800193e:	60fb      	str	r3, [r7, #12]
    tmpcr1 |= Structure->CounterMode;
 8001940:	683b      	ldr	r3, [r7, #0]
 8001942:	685b      	ldr	r3, [r3, #4]
 8001944:	68fa      	ldr	r2, [r7, #12]
 8001946:	4313      	orrs	r3, r2
 8001948:	60fb      	str	r3, [r7, #12]
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 800194a:	687b      	ldr	r3, [r7, #4]
 800194c:	4a2e      	ldr	r2, [pc, #184]	; (8001a08 <TIM_Base_SetConfig+0x110>)
 800194e:	4293      	cmp	r3, r2
 8001950:	d02b      	beq.n	80019aa <TIM_Base_SetConfig+0xb2>
 8001952:	687b      	ldr	r3, [r7, #4]
 8001954:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8001958:	d027      	beq.n	80019aa <TIM_Base_SetConfig+0xb2>
 800195a:	687b      	ldr	r3, [r7, #4]
 800195c:	4a2b      	ldr	r2, [pc, #172]	; (8001a0c <TIM_Base_SetConfig+0x114>)
 800195e:	4293      	cmp	r3, r2
 8001960:	d023      	beq.n	80019aa <TIM_Base_SetConfig+0xb2>
 8001962:	687b      	ldr	r3, [r7, #4]
 8001964:	4a2a      	ldr	r2, [pc, #168]	; (8001a10 <TIM_Base_SetConfig+0x118>)
 8001966:	4293      	cmp	r3, r2
 8001968:	d01f      	beq.n	80019aa <TIM_Base_SetConfig+0xb2>
 800196a:	687b      	ldr	r3, [r7, #4]
 800196c:	4a29      	ldr	r2, [pc, #164]	; (8001a14 <TIM_Base_SetConfig+0x11c>)
 800196e:	4293      	cmp	r3, r2
 8001970:	d01b      	beq.n	80019aa <TIM_Base_SetConfig+0xb2>
 8001972:	687b      	ldr	r3, [r7, #4]
 8001974:	4a28      	ldr	r2, [pc, #160]	; (8001a18 <TIM_Base_SetConfig+0x120>)
 8001976:	4293      	cmp	r3, r2
 8001978:	d017      	beq.n	80019aa <TIM_Base_SetConfig+0xb2>
 800197a:	687b      	ldr	r3, [r7, #4]
 800197c:	4a27      	ldr	r2, [pc, #156]	; (8001a1c <TIM_Base_SetConfig+0x124>)
 800197e:	4293      	cmp	r3, r2
 8001980:	d013      	beq.n	80019aa <TIM_Base_SetConfig+0xb2>
 8001982:	687b      	ldr	r3, [r7, #4]
 8001984:	4a26      	ldr	r2, [pc, #152]	; (8001a20 <TIM_Base_SetConfig+0x128>)
 8001986:	4293      	cmp	r3, r2
 8001988:	d00f      	beq.n	80019aa <TIM_Base_SetConfig+0xb2>
 800198a:	687b      	ldr	r3, [r7, #4]
 800198c:	4a25      	ldr	r2, [pc, #148]	; (8001a24 <TIM_Base_SetConfig+0x12c>)
 800198e:	4293      	cmp	r3, r2
 8001990:	d00b      	beq.n	80019aa <TIM_Base_SetConfig+0xb2>
 8001992:	687b      	ldr	r3, [r7, #4]
 8001994:	4a24      	ldr	r2, [pc, #144]	; (8001a28 <TIM_Base_SetConfig+0x130>)
 8001996:	4293      	cmp	r3, r2
 8001998:	d007      	beq.n	80019aa <TIM_Base_SetConfig+0xb2>
 800199a:	687b      	ldr	r3, [r7, #4]
 800199c:	4a23      	ldr	r2, [pc, #140]	; (8001a2c <TIM_Base_SetConfig+0x134>)
 800199e:	4293      	cmp	r3, r2
 80019a0:	d003      	beq.n	80019aa <TIM_Base_SetConfig+0xb2>
 80019a2:	687b      	ldr	r3, [r7, #4]
 80019a4:	4a22      	ldr	r2, [pc, #136]	; (8001a30 <TIM_Base_SetConfig+0x138>)
 80019a6:	4293      	cmp	r3, r2
 80019a8:	d108      	bne.n	80019bc <TIM_Base_SetConfig+0xc4>
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
 80019aa:	68fb      	ldr	r3, [r7, #12]
 80019ac:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80019b0:	60fb      	str	r3, [r7, #12]
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 80019b2:	683b      	ldr	r3, [r7, #0]
 80019b4:	68db      	ldr	r3, [r3, #12]
 80019b6:	68fa      	ldr	r2, [r7, #12]
 80019b8:	4313      	orrs	r3, r2
 80019ba:	60fb      	str	r3, [r7, #12]
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 80019bc:	68fb      	ldr	r3, [r7, #12]
 80019be:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 80019c2:	683b      	ldr	r3, [r7, #0]
 80019c4:	695b      	ldr	r3, [r3, #20]
 80019c6:	4313      	orrs	r3, r2
 80019c8:	60fb      	str	r3, [r7, #12]

  TIMx->CR1 = tmpcr1;
 80019ca:	687b      	ldr	r3, [r7, #4]
 80019cc:	68fa      	ldr	r2, [r7, #12]
 80019ce:	601a      	str	r2, [r3, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 80019d0:	683b      	ldr	r3, [r7, #0]
 80019d2:	689a      	ldr	r2, [r3, #8]
 80019d4:	687b      	ldr	r3, [r7, #4]
 80019d6:	62da      	str	r2, [r3, #44]	; 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 80019d8:	683b      	ldr	r3, [r7, #0]
 80019da:	681a      	ldr	r2, [r3, #0]
 80019dc:	687b      	ldr	r3, [r7, #4]
 80019de:	629a      	str	r2, [r3, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 80019e0:	687b      	ldr	r3, [r7, #4]
 80019e2:	4a09      	ldr	r2, [pc, #36]	; (8001a08 <TIM_Base_SetConfig+0x110>)
 80019e4:	4293      	cmp	r3, r2
 80019e6:	d003      	beq.n	80019f0 <TIM_Base_SetConfig+0xf8>
 80019e8:	687b      	ldr	r3, [r7, #4]
 80019ea:	4a0b      	ldr	r2, [pc, #44]	; (8001a18 <TIM_Base_SetConfig+0x120>)
 80019ec:	4293      	cmp	r3, r2
 80019ee:	d103      	bne.n	80019f8 <TIM_Base_SetConfig+0x100>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
 80019f0:	683b      	ldr	r3, [r7, #0]
 80019f2:	691a      	ldr	r2, [r3, #16]
 80019f4:	687b      	ldr	r3, [r7, #4]
 80019f6:	631a      	str	r2, [r3, #48]	; 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 80019f8:	687b      	ldr	r3, [r7, #4]
 80019fa:	2201      	movs	r2, #1
 80019fc:	615a      	str	r2, [r3, #20]
}
 80019fe:	bf00      	nop
 8001a00:	3714      	adds	r7, #20
 8001a02:	46bd      	mov	sp, r7
 8001a04:	bc80      	pop	{r7}
 8001a06:	4770      	bx	lr
 8001a08:	40010000 	.word	0x40010000
 8001a0c:	40000400 	.word	0x40000400
 8001a10:	40000800 	.word	0x40000800
 8001a14:	40000c00 	.word	0x40000c00
 8001a18:	40010400 	.word	0x40010400
 8001a1c:	40014000 	.word	0x40014000
 8001a20:	40014400 	.word	0x40014400
 8001a24:	40014800 	.word	0x40014800
 8001a28:	40001800 	.word	0x40001800
 8001a2c:	40001c00 	.word	0x40001c00
 8001a30:	40002000 	.word	0x40002000

08001a34 <__errno>:
 8001a34:	4b01      	ldr	r3, [pc, #4]	; (8001a3c <__errno+0x8>)
 8001a36:	6818      	ldr	r0, [r3, #0]
 8001a38:	4770      	bx	lr
 8001a3a:	bf00      	nop
 8001a3c:	2000000c 	.word	0x2000000c

08001a40 <__libc_init_array>:
 8001a40:	b570      	push	{r4, r5, r6, lr}
 8001a42:	4e0d      	ldr	r6, [pc, #52]	; (8001a78 <__libc_init_array+0x38>)
 8001a44:	4c0d      	ldr	r4, [pc, #52]	; (8001a7c <__libc_init_array+0x3c>)
 8001a46:	1ba4      	subs	r4, r4, r6
 8001a48:	10a4      	asrs	r4, r4, #2
 8001a4a:	2500      	movs	r5, #0
 8001a4c:	42a5      	cmp	r5, r4
 8001a4e:	d109      	bne.n	8001a64 <__libc_init_array+0x24>
 8001a50:	4e0b      	ldr	r6, [pc, #44]	; (8001a80 <__libc_init_array+0x40>)
 8001a52:	4c0c      	ldr	r4, [pc, #48]	; (8001a84 <__libc_init_array+0x44>)
 8001a54:	f002 fb3a 	bl	80040cc <_init>
 8001a58:	1ba4      	subs	r4, r4, r6
 8001a5a:	10a4      	asrs	r4, r4, #2
 8001a5c:	2500      	movs	r5, #0
 8001a5e:	42a5      	cmp	r5, r4
 8001a60:	d105      	bne.n	8001a6e <__libc_init_array+0x2e>
 8001a62:	bd70      	pop	{r4, r5, r6, pc}
 8001a64:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8001a68:	4798      	blx	r3
 8001a6a:	3501      	adds	r5, #1
 8001a6c:	e7ee      	b.n	8001a4c <__libc_init_array+0xc>
 8001a6e:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8001a72:	4798      	blx	r3
 8001a74:	3501      	adds	r5, #1
 8001a76:	e7f2      	b.n	8001a5e <__libc_init_array+0x1e>
 8001a78:	080043c0 	.word	0x080043c0
 8001a7c:	080043c0 	.word	0x080043c0
 8001a80:	080043c0 	.word	0x080043c0
 8001a84:	080043c4 	.word	0x080043c4

08001a88 <memset>:
 8001a88:	4402      	add	r2, r0
 8001a8a:	4603      	mov	r3, r0
 8001a8c:	4293      	cmp	r3, r2
 8001a8e:	d100      	bne.n	8001a92 <memset+0xa>
 8001a90:	4770      	bx	lr
 8001a92:	f803 1b01 	strb.w	r1, [r3], #1
 8001a96:	e7f9      	b.n	8001a8c <memset+0x4>

08001a98 <__cvt>:
 8001a98:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8001a9c:	b088      	sub	sp, #32
 8001a9e:	2b00      	cmp	r3, #0
 8001aa0:	9f14      	ldr	r7, [sp, #80]	; 0x50
 8001aa2:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8001aa4:	e9dd 1a12 	ldrd	r1, sl, [sp, #72]	; 0x48
 8001aa8:	461e      	mov	r6, r3
 8001aaa:	f027 0720 	bic.w	r7, r7, #32
 8001aae:	bfbb      	ittet	lt
 8001ab0:	f103 4300 	addlt.w	r3, r3, #2147483648	; 0x80000000
 8001ab4:	461e      	movlt	r6, r3
 8001ab6:	2300      	movge	r3, #0
 8001ab8:	232d      	movlt	r3, #45	; 0x2d
 8001aba:	2f46      	cmp	r7, #70	; 0x46
 8001abc:	4614      	mov	r4, r2
 8001abe:	700b      	strb	r3, [r1, #0]
 8001ac0:	d004      	beq.n	8001acc <__cvt+0x34>
 8001ac2:	2f45      	cmp	r7, #69	; 0x45
 8001ac4:	d100      	bne.n	8001ac8 <__cvt+0x30>
 8001ac6:	3501      	adds	r5, #1
 8001ac8:	2302      	movs	r3, #2
 8001aca:	e000      	b.n	8001ace <__cvt+0x36>
 8001acc:	2303      	movs	r3, #3
 8001ace:	aa07      	add	r2, sp, #28
 8001ad0:	9204      	str	r2, [sp, #16]
 8001ad2:	aa06      	add	r2, sp, #24
 8001ad4:	e9cd a202 	strd	sl, r2, [sp, #8]
 8001ad8:	e9cd 3500 	strd	r3, r5, [sp]
 8001adc:	4622      	mov	r2, r4
 8001ade:	4633      	mov	r3, r6
 8001ae0:	f000 fcce 	bl	8002480 <_dtoa_r>
 8001ae4:	2f47      	cmp	r7, #71	; 0x47
 8001ae6:	4680      	mov	r8, r0
 8001ae8:	d102      	bne.n	8001af0 <__cvt+0x58>
 8001aea:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8001aec:	07db      	lsls	r3, r3, #31
 8001aee:	d526      	bpl.n	8001b3e <__cvt+0xa6>
 8001af0:	2f46      	cmp	r7, #70	; 0x46
 8001af2:	eb08 0905 	add.w	r9, r8, r5
 8001af6:	d111      	bne.n	8001b1c <__cvt+0x84>
 8001af8:	f898 3000 	ldrb.w	r3, [r8]
 8001afc:	2b30      	cmp	r3, #48	; 0x30
 8001afe:	d10a      	bne.n	8001b16 <__cvt+0x7e>
 8001b00:	2200      	movs	r2, #0
 8001b02:	2300      	movs	r3, #0
 8001b04:	4620      	mov	r0, r4
 8001b06:	4631      	mov	r1, r6
 8001b08:	f7fe fffe 	bl	8000b08 <__aeabi_dcmpeq>
 8001b0c:	b918      	cbnz	r0, 8001b16 <__cvt+0x7e>
 8001b0e:	f1c5 0501 	rsb	r5, r5, #1
 8001b12:	f8ca 5000 	str.w	r5, [sl]
 8001b16:	f8da 3000 	ldr.w	r3, [sl]
 8001b1a:	4499      	add	r9, r3
 8001b1c:	2200      	movs	r2, #0
 8001b1e:	2300      	movs	r3, #0
 8001b20:	4620      	mov	r0, r4
 8001b22:	4631      	mov	r1, r6
 8001b24:	f7fe fff0 	bl	8000b08 <__aeabi_dcmpeq>
 8001b28:	b938      	cbnz	r0, 8001b3a <__cvt+0xa2>
 8001b2a:	2230      	movs	r2, #48	; 0x30
 8001b2c:	9b07      	ldr	r3, [sp, #28]
 8001b2e:	454b      	cmp	r3, r9
 8001b30:	d205      	bcs.n	8001b3e <__cvt+0xa6>
 8001b32:	1c59      	adds	r1, r3, #1
 8001b34:	9107      	str	r1, [sp, #28]
 8001b36:	701a      	strb	r2, [r3, #0]
 8001b38:	e7f8      	b.n	8001b2c <__cvt+0x94>
 8001b3a:	f8cd 901c 	str.w	r9, [sp, #28]
 8001b3e:	9b07      	ldr	r3, [sp, #28]
 8001b40:	9a15      	ldr	r2, [sp, #84]	; 0x54
 8001b42:	eba3 0308 	sub.w	r3, r3, r8
 8001b46:	4640      	mov	r0, r8
 8001b48:	6013      	str	r3, [r2, #0]
 8001b4a:	b008      	add	sp, #32
 8001b4c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08001b50 <__exponent>:
 8001b50:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8001b52:	2900      	cmp	r1, #0
 8001b54:	4604      	mov	r4, r0
 8001b56:	bfba      	itte	lt
 8001b58:	4249      	neglt	r1, r1
 8001b5a:	232d      	movlt	r3, #45	; 0x2d
 8001b5c:	232b      	movge	r3, #43	; 0x2b
 8001b5e:	2909      	cmp	r1, #9
 8001b60:	f804 2b02 	strb.w	r2, [r4], #2
 8001b64:	7043      	strb	r3, [r0, #1]
 8001b66:	dd20      	ble.n	8001baa <__exponent+0x5a>
 8001b68:	f10d 0307 	add.w	r3, sp, #7
 8001b6c:	461f      	mov	r7, r3
 8001b6e:	260a      	movs	r6, #10
 8001b70:	fb91 f5f6 	sdiv	r5, r1, r6
 8001b74:	fb06 1115 	mls	r1, r6, r5, r1
 8001b78:	3130      	adds	r1, #48	; 0x30
 8001b7a:	2d09      	cmp	r5, #9
 8001b7c:	f803 1c01 	strb.w	r1, [r3, #-1]
 8001b80:	f103 32ff 	add.w	r2, r3, #4294967295
 8001b84:	4629      	mov	r1, r5
 8001b86:	dc09      	bgt.n	8001b9c <__exponent+0x4c>
 8001b88:	3130      	adds	r1, #48	; 0x30
 8001b8a:	3b02      	subs	r3, #2
 8001b8c:	f802 1c01 	strb.w	r1, [r2, #-1]
 8001b90:	42bb      	cmp	r3, r7
 8001b92:	4622      	mov	r2, r4
 8001b94:	d304      	bcc.n	8001ba0 <__exponent+0x50>
 8001b96:	1a10      	subs	r0, r2, r0
 8001b98:	b003      	add	sp, #12
 8001b9a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001b9c:	4613      	mov	r3, r2
 8001b9e:	e7e7      	b.n	8001b70 <__exponent+0x20>
 8001ba0:	f813 2b01 	ldrb.w	r2, [r3], #1
 8001ba4:	f804 2b01 	strb.w	r2, [r4], #1
 8001ba8:	e7f2      	b.n	8001b90 <__exponent+0x40>
 8001baa:	2330      	movs	r3, #48	; 0x30
 8001bac:	4419      	add	r1, r3
 8001bae:	7083      	strb	r3, [r0, #2]
 8001bb0:	1d02      	adds	r2, r0, #4
 8001bb2:	70c1      	strb	r1, [r0, #3]
 8001bb4:	e7ef      	b.n	8001b96 <__exponent+0x46>
	...

08001bb8 <_printf_float>:
 8001bb8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001bbc:	b091      	sub	sp, #68	; 0x44
 8001bbe:	460c      	mov	r4, r1
 8001bc0:	9f1a      	ldr	r7, [sp, #104]	; 0x68
 8001bc2:	4693      	mov	fp, r2
 8001bc4:	461e      	mov	r6, r3
 8001bc6:	4605      	mov	r5, r0
 8001bc8:	f001 fade 	bl	8003188 <_localeconv_r>
 8001bcc:	6803      	ldr	r3, [r0, #0]
 8001bce:	9309      	str	r3, [sp, #36]	; 0x24
 8001bd0:	4618      	mov	r0, r3
 8001bd2:	f7fe fb1d 	bl	8000210 <strlen>
 8001bd6:	2300      	movs	r3, #0
 8001bd8:	930e      	str	r3, [sp, #56]	; 0x38
 8001bda:	683b      	ldr	r3, [r7, #0]
 8001bdc:	900a      	str	r0, [sp, #40]	; 0x28
 8001bde:	3307      	adds	r3, #7
 8001be0:	f023 0307 	bic.w	r3, r3, #7
 8001be4:	f103 0208 	add.w	r2, r3, #8
 8001be8:	f894 8018 	ldrb.w	r8, [r4, #24]
 8001bec:	f8d4 a000 	ldr.w	sl, [r4]
 8001bf0:	603a      	str	r2, [r7, #0]
 8001bf2:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001bf6:	e9c4 2312 	strd	r2, r3, [r4, #72]	; 0x48
 8001bfa:	e9d4 7912 	ldrd	r7, r9, [r4, #72]	; 0x48
 8001bfe:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 8001c02:	930b      	str	r3, [sp, #44]	; 0x2c
 8001c04:	f04f 32ff 	mov.w	r2, #4294967295
 8001c08:	4ba6      	ldr	r3, [pc, #664]	; (8001ea4 <_printf_float+0x2ec>)
 8001c0a:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8001c0c:	4638      	mov	r0, r7
 8001c0e:	f7fe ffad 	bl	8000b6c <__aeabi_dcmpun>
 8001c12:	bb68      	cbnz	r0, 8001c70 <_printf_float+0xb8>
 8001c14:	f04f 32ff 	mov.w	r2, #4294967295
 8001c18:	4ba2      	ldr	r3, [pc, #648]	; (8001ea4 <_printf_float+0x2ec>)
 8001c1a:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8001c1c:	4638      	mov	r0, r7
 8001c1e:	f7fe ff87 	bl	8000b30 <__aeabi_dcmple>
 8001c22:	bb28      	cbnz	r0, 8001c70 <_printf_float+0xb8>
 8001c24:	2200      	movs	r2, #0
 8001c26:	2300      	movs	r3, #0
 8001c28:	4638      	mov	r0, r7
 8001c2a:	4649      	mov	r1, r9
 8001c2c:	f7fe ff76 	bl	8000b1c <__aeabi_dcmplt>
 8001c30:	b110      	cbz	r0, 8001c38 <_printf_float+0x80>
 8001c32:	232d      	movs	r3, #45	; 0x2d
 8001c34:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8001c38:	4f9b      	ldr	r7, [pc, #620]	; (8001ea8 <_printf_float+0x2f0>)
 8001c3a:	4b9c      	ldr	r3, [pc, #624]	; (8001eac <_printf_float+0x2f4>)
 8001c3c:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
 8001c40:	bf98      	it	ls
 8001c42:	461f      	movls	r7, r3
 8001c44:	2303      	movs	r3, #3
 8001c46:	6123      	str	r3, [r4, #16]
 8001c48:	f02a 0304 	bic.w	r3, sl, #4
 8001c4c:	6023      	str	r3, [r4, #0]
 8001c4e:	f04f 0900 	mov.w	r9, #0
 8001c52:	9600      	str	r6, [sp, #0]
 8001c54:	465b      	mov	r3, fp
 8001c56:	aa0f      	add	r2, sp, #60	; 0x3c
 8001c58:	4621      	mov	r1, r4
 8001c5a:	4628      	mov	r0, r5
 8001c5c:	f000 f9e2 	bl	8002024 <_printf_common>
 8001c60:	3001      	adds	r0, #1
 8001c62:	f040 8090 	bne.w	8001d86 <_printf_float+0x1ce>
 8001c66:	f04f 30ff 	mov.w	r0, #4294967295
 8001c6a:	b011      	add	sp, #68	; 0x44
 8001c6c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8001c70:	463a      	mov	r2, r7
 8001c72:	464b      	mov	r3, r9
 8001c74:	4638      	mov	r0, r7
 8001c76:	4649      	mov	r1, r9
 8001c78:	f7fe ff78 	bl	8000b6c <__aeabi_dcmpun>
 8001c7c:	b110      	cbz	r0, 8001c84 <_printf_float+0xcc>
 8001c7e:	4f8c      	ldr	r7, [pc, #560]	; (8001eb0 <_printf_float+0x2f8>)
 8001c80:	4b8c      	ldr	r3, [pc, #560]	; (8001eb4 <_printf_float+0x2fc>)
 8001c82:	e7db      	b.n	8001c3c <_printf_float+0x84>
 8001c84:	6863      	ldr	r3, [r4, #4]
 8001c86:	1c59      	adds	r1, r3, #1
 8001c88:	f44a 6280 	orr.w	r2, sl, #1024	; 0x400
 8001c8c:	a90e      	add	r1, sp, #56	; 0x38
 8001c8e:	a80d      	add	r0, sp, #52	; 0x34
 8001c90:	d140      	bne.n	8001d14 <_printf_float+0x15c>
 8001c92:	2306      	movs	r3, #6
 8001c94:	6063      	str	r3, [r4, #4]
 8001c96:	f10d 0333 	add.w	r3, sp, #51	; 0x33
 8001c9a:	e9cd 2301 	strd	r2, r3, [sp, #4]
 8001c9e:	f04f 0c00 	mov.w	ip, #0
 8001ca2:	6863      	ldr	r3, [r4, #4]
 8001ca4:	6022      	str	r2, [r4, #0]
 8001ca6:	e9cd 0803 	strd	r0, r8, [sp, #12]
 8001caa:	9300      	str	r3, [sp, #0]
 8001cac:	463a      	mov	r2, r7
 8001cae:	464b      	mov	r3, r9
 8001cb0:	e9cd 1c05 	strd	r1, ip, [sp, #20]
 8001cb4:	4628      	mov	r0, r5
 8001cb6:	f7ff feef 	bl	8001a98 <__cvt>
 8001cba:	f008 03df 	and.w	r3, r8, #223	; 0xdf
 8001cbe:	2b47      	cmp	r3, #71	; 0x47
 8001cc0:	4607      	mov	r7, r0
 8001cc2:	d109      	bne.n	8001cd8 <_printf_float+0x120>
 8001cc4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8001cc6:	1cd8      	adds	r0, r3, #3
 8001cc8:	db02      	blt.n	8001cd0 <_printf_float+0x118>
 8001cca:	6862      	ldr	r2, [r4, #4]
 8001ccc:	4293      	cmp	r3, r2
 8001cce:	dd47      	ble.n	8001d60 <_printf_float+0x1a8>
 8001cd0:	f1a8 0802 	sub.w	r8, r8, #2
 8001cd4:	fa5f f888 	uxtb.w	r8, r8
 8001cd8:	f1b8 0f65 	cmp.w	r8, #101	; 0x65
 8001cdc:	990d      	ldr	r1, [sp, #52]	; 0x34
 8001cde:	d824      	bhi.n	8001d2a <_printf_float+0x172>
 8001ce0:	3901      	subs	r1, #1
 8001ce2:	4642      	mov	r2, r8
 8001ce4:	f104 0050 	add.w	r0, r4, #80	; 0x50
 8001ce8:	910d      	str	r1, [sp, #52]	; 0x34
 8001cea:	f7ff ff31 	bl	8001b50 <__exponent>
 8001cee:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8001cf0:	1813      	adds	r3, r2, r0
 8001cf2:	2a01      	cmp	r2, #1
 8001cf4:	4681      	mov	r9, r0
 8001cf6:	6123      	str	r3, [r4, #16]
 8001cf8:	dc02      	bgt.n	8001d00 <_printf_float+0x148>
 8001cfa:	6822      	ldr	r2, [r4, #0]
 8001cfc:	07d1      	lsls	r1, r2, #31
 8001cfe:	d501      	bpl.n	8001d04 <_printf_float+0x14c>
 8001d00:	3301      	adds	r3, #1
 8001d02:	6123      	str	r3, [r4, #16]
 8001d04:	f89d 3033 	ldrb.w	r3, [sp, #51]	; 0x33
 8001d08:	2b00      	cmp	r3, #0
 8001d0a:	d0a2      	beq.n	8001c52 <_printf_float+0x9a>
 8001d0c:	232d      	movs	r3, #45	; 0x2d
 8001d0e:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8001d12:	e79e      	b.n	8001c52 <_printf_float+0x9a>
 8001d14:	f1b8 0f67 	cmp.w	r8, #103	; 0x67
 8001d18:	f000 816e 	beq.w	8001ff8 <_printf_float+0x440>
 8001d1c:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
 8001d20:	d1b9      	bne.n	8001c96 <_printf_float+0xde>
 8001d22:	2b00      	cmp	r3, #0
 8001d24:	d1b7      	bne.n	8001c96 <_printf_float+0xde>
 8001d26:	2301      	movs	r3, #1
 8001d28:	e7b4      	b.n	8001c94 <_printf_float+0xdc>
 8001d2a:	f1b8 0f66 	cmp.w	r8, #102	; 0x66
 8001d2e:	d119      	bne.n	8001d64 <_printf_float+0x1ac>
 8001d30:	2900      	cmp	r1, #0
 8001d32:	6863      	ldr	r3, [r4, #4]
 8001d34:	dd0c      	ble.n	8001d50 <_printf_float+0x198>
 8001d36:	6121      	str	r1, [r4, #16]
 8001d38:	b913      	cbnz	r3, 8001d40 <_printf_float+0x188>
 8001d3a:	6822      	ldr	r2, [r4, #0]
 8001d3c:	07d2      	lsls	r2, r2, #31
 8001d3e:	d502      	bpl.n	8001d46 <_printf_float+0x18e>
 8001d40:	3301      	adds	r3, #1
 8001d42:	440b      	add	r3, r1
 8001d44:	6123      	str	r3, [r4, #16]
 8001d46:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8001d48:	65a3      	str	r3, [r4, #88]	; 0x58
 8001d4a:	f04f 0900 	mov.w	r9, #0
 8001d4e:	e7d9      	b.n	8001d04 <_printf_float+0x14c>
 8001d50:	b913      	cbnz	r3, 8001d58 <_printf_float+0x1a0>
 8001d52:	6822      	ldr	r2, [r4, #0]
 8001d54:	07d0      	lsls	r0, r2, #31
 8001d56:	d501      	bpl.n	8001d5c <_printf_float+0x1a4>
 8001d58:	3302      	adds	r3, #2
 8001d5a:	e7f3      	b.n	8001d44 <_printf_float+0x18c>
 8001d5c:	2301      	movs	r3, #1
 8001d5e:	e7f1      	b.n	8001d44 <_printf_float+0x18c>
 8001d60:	f04f 0867 	mov.w	r8, #103	; 0x67
 8001d64:	e9dd 320d 	ldrd	r3, r2, [sp, #52]	; 0x34
 8001d68:	4293      	cmp	r3, r2
 8001d6a:	db05      	blt.n	8001d78 <_printf_float+0x1c0>
 8001d6c:	6822      	ldr	r2, [r4, #0]
 8001d6e:	6123      	str	r3, [r4, #16]
 8001d70:	07d1      	lsls	r1, r2, #31
 8001d72:	d5e8      	bpl.n	8001d46 <_printf_float+0x18e>
 8001d74:	3301      	adds	r3, #1
 8001d76:	e7e5      	b.n	8001d44 <_printf_float+0x18c>
 8001d78:	2b00      	cmp	r3, #0
 8001d7a:	bfd4      	ite	le
 8001d7c:	f1c3 0302 	rsble	r3, r3, #2
 8001d80:	2301      	movgt	r3, #1
 8001d82:	4413      	add	r3, r2
 8001d84:	e7de      	b.n	8001d44 <_printf_float+0x18c>
 8001d86:	6823      	ldr	r3, [r4, #0]
 8001d88:	055a      	lsls	r2, r3, #21
 8001d8a:	d407      	bmi.n	8001d9c <_printf_float+0x1e4>
 8001d8c:	6923      	ldr	r3, [r4, #16]
 8001d8e:	463a      	mov	r2, r7
 8001d90:	4659      	mov	r1, fp
 8001d92:	4628      	mov	r0, r5
 8001d94:	47b0      	blx	r6
 8001d96:	3001      	adds	r0, #1
 8001d98:	d129      	bne.n	8001dee <_printf_float+0x236>
 8001d9a:	e764      	b.n	8001c66 <_printf_float+0xae>
 8001d9c:	f1b8 0f65 	cmp.w	r8, #101	; 0x65
 8001da0:	f240 80d7 	bls.w	8001f52 <_printf_float+0x39a>
 8001da4:	2200      	movs	r2, #0
 8001da6:	2300      	movs	r3, #0
 8001da8:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 8001dac:	f7fe feac 	bl	8000b08 <__aeabi_dcmpeq>
 8001db0:	b388      	cbz	r0, 8001e16 <_printf_float+0x25e>
 8001db2:	2301      	movs	r3, #1
 8001db4:	4a40      	ldr	r2, [pc, #256]	; (8001eb8 <_printf_float+0x300>)
 8001db6:	4659      	mov	r1, fp
 8001db8:	4628      	mov	r0, r5
 8001dba:	47b0      	blx	r6
 8001dbc:	3001      	adds	r0, #1
 8001dbe:	f43f af52 	beq.w	8001c66 <_printf_float+0xae>
 8001dc2:	e9dd 230d 	ldrd	r2, r3, [sp, #52]	; 0x34
 8001dc6:	429a      	cmp	r2, r3
 8001dc8:	db02      	blt.n	8001dd0 <_printf_float+0x218>
 8001dca:	6823      	ldr	r3, [r4, #0]
 8001dcc:	07d8      	lsls	r0, r3, #31
 8001dce:	d50e      	bpl.n	8001dee <_printf_float+0x236>
 8001dd0:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8001dd4:	4659      	mov	r1, fp
 8001dd6:	4628      	mov	r0, r5
 8001dd8:	47b0      	blx	r6
 8001dda:	3001      	adds	r0, #1
 8001ddc:	f43f af43 	beq.w	8001c66 <_printf_float+0xae>
 8001de0:	2700      	movs	r7, #0
 8001de2:	f104 081a 	add.w	r8, r4, #26
 8001de6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8001de8:	3b01      	subs	r3, #1
 8001dea:	42bb      	cmp	r3, r7
 8001dec:	dc09      	bgt.n	8001e02 <_printf_float+0x24a>
 8001dee:	6823      	ldr	r3, [r4, #0]
 8001df0:	079f      	lsls	r7, r3, #30
 8001df2:	f100 80fd 	bmi.w	8001ff0 <_printf_float+0x438>
 8001df6:	68e0      	ldr	r0, [r4, #12]
 8001df8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8001dfa:	4298      	cmp	r0, r3
 8001dfc:	bfb8      	it	lt
 8001dfe:	4618      	movlt	r0, r3
 8001e00:	e733      	b.n	8001c6a <_printf_float+0xb2>
 8001e02:	2301      	movs	r3, #1
 8001e04:	4642      	mov	r2, r8
 8001e06:	4659      	mov	r1, fp
 8001e08:	4628      	mov	r0, r5
 8001e0a:	47b0      	blx	r6
 8001e0c:	3001      	adds	r0, #1
 8001e0e:	f43f af2a 	beq.w	8001c66 <_printf_float+0xae>
 8001e12:	3701      	adds	r7, #1
 8001e14:	e7e7      	b.n	8001de6 <_printf_float+0x22e>
 8001e16:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8001e18:	2b00      	cmp	r3, #0
 8001e1a:	dc2b      	bgt.n	8001e74 <_printf_float+0x2bc>
 8001e1c:	2301      	movs	r3, #1
 8001e1e:	4a26      	ldr	r2, [pc, #152]	; (8001eb8 <_printf_float+0x300>)
 8001e20:	4659      	mov	r1, fp
 8001e22:	4628      	mov	r0, r5
 8001e24:	47b0      	blx	r6
 8001e26:	3001      	adds	r0, #1
 8001e28:	f43f af1d 	beq.w	8001c66 <_printf_float+0xae>
 8001e2c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8001e2e:	b923      	cbnz	r3, 8001e3a <_printf_float+0x282>
 8001e30:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8001e32:	b913      	cbnz	r3, 8001e3a <_printf_float+0x282>
 8001e34:	6823      	ldr	r3, [r4, #0]
 8001e36:	07d9      	lsls	r1, r3, #31
 8001e38:	d5d9      	bpl.n	8001dee <_printf_float+0x236>
 8001e3a:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8001e3e:	4659      	mov	r1, fp
 8001e40:	4628      	mov	r0, r5
 8001e42:	47b0      	blx	r6
 8001e44:	3001      	adds	r0, #1
 8001e46:	f43f af0e 	beq.w	8001c66 <_printf_float+0xae>
 8001e4a:	f04f 0800 	mov.w	r8, #0
 8001e4e:	f104 091a 	add.w	r9, r4, #26
 8001e52:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8001e54:	425b      	negs	r3, r3
 8001e56:	4543      	cmp	r3, r8
 8001e58:	dc01      	bgt.n	8001e5e <_printf_float+0x2a6>
 8001e5a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8001e5c:	e797      	b.n	8001d8e <_printf_float+0x1d6>
 8001e5e:	2301      	movs	r3, #1
 8001e60:	464a      	mov	r2, r9
 8001e62:	4659      	mov	r1, fp
 8001e64:	4628      	mov	r0, r5
 8001e66:	47b0      	blx	r6
 8001e68:	3001      	adds	r0, #1
 8001e6a:	f43f aefc 	beq.w	8001c66 <_printf_float+0xae>
 8001e6e:	f108 0801 	add.w	r8, r8, #1
 8001e72:	e7ee      	b.n	8001e52 <_printf_float+0x29a>
 8001e74:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8001e76:	6da3      	ldr	r3, [r4, #88]	; 0x58
 8001e78:	429a      	cmp	r2, r3
 8001e7a:	bfa8      	it	ge
 8001e7c:	461a      	movge	r2, r3
 8001e7e:	2a00      	cmp	r2, #0
 8001e80:	4690      	mov	r8, r2
 8001e82:	dd07      	ble.n	8001e94 <_printf_float+0x2dc>
 8001e84:	4613      	mov	r3, r2
 8001e86:	4659      	mov	r1, fp
 8001e88:	463a      	mov	r2, r7
 8001e8a:	4628      	mov	r0, r5
 8001e8c:	47b0      	blx	r6
 8001e8e:	3001      	adds	r0, #1
 8001e90:	f43f aee9 	beq.w	8001c66 <_printf_float+0xae>
 8001e94:	f104 031a 	add.w	r3, r4, #26
 8001e98:	f04f 0a00 	mov.w	sl, #0
 8001e9c:	ea28 78e8 	bic.w	r8, r8, r8, asr #31
 8001ea0:	930b      	str	r3, [sp, #44]	; 0x2c
 8001ea2:	e015      	b.n	8001ed0 <_printf_float+0x318>
 8001ea4:	7fefffff 	.word	0x7fefffff
 8001ea8:	08004104 	.word	0x08004104
 8001eac:	08004100 	.word	0x08004100
 8001eb0:	0800410c 	.word	0x0800410c
 8001eb4:	08004108 	.word	0x08004108
 8001eb8:	08004110 	.word	0x08004110
 8001ebc:	2301      	movs	r3, #1
 8001ebe:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8001ec0:	4659      	mov	r1, fp
 8001ec2:	4628      	mov	r0, r5
 8001ec4:	47b0      	blx	r6
 8001ec6:	3001      	adds	r0, #1
 8001ec8:	f43f aecd 	beq.w	8001c66 <_printf_float+0xae>
 8001ecc:	f10a 0a01 	add.w	sl, sl, #1
 8001ed0:	f8d4 9058 	ldr.w	r9, [r4, #88]	; 0x58
 8001ed4:	eba9 0308 	sub.w	r3, r9, r8
 8001ed8:	4553      	cmp	r3, sl
 8001eda:	dcef      	bgt.n	8001ebc <_printf_float+0x304>
 8001edc:	e9dd 230d 	ldrd	r2, r3, [sp, #52]	; 0x34
 8001ee0:	429a      	cmp	r2, r3
 8001ee2:	444f      	add	r7, r9
 8001ee4:	db14      	blt.n	8001f10 <_printf_float+0x358>
 8001ee6:	6823      	ldr	r3, [r4, #0]
 8001ee8:	07da      	lsls	r2, r3, #31
 8001eea:	d411      	bmi.n	8001f10 <_printf_float+0x358>
 8001eec:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8001eee:	990d      	ldr	r1, [sp, #52]	; 0x34
 8001ef0:	eba3 0209 	sub.w	r2, r3, r9
 8001ef4:	eba3 0901 	sub.w	r9, r3, r1
 8001ef8:	4591      	cmp	r9, r2
 8001efa:	bfa8      	it	ge
 8001efc:	4691      	movge	r9, r2
 8001efe:	f1b9 0f00 	cmp.w	r9, #0
 8001f02:	dc0d      	bgt.n	8001f20 <_printf_float+0x368>
 8001f04:	2700      	movs	r7, #0
 8001f06:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8001f0a:	f104 081a 	add.w	r8, r4, #26
 8001f0e:	e018      	b.n	8001f42 <_printf_float+0x38a>
 8001f10:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8001f14:	4659      	mov	r1, fp
 8001f16:	4628      	mov	r0, r5
 8001f18:	47b0      	blx	r6
 8001f1a:	3001      	adds	r0, #1
 8001f1c:	d1e6      	bne.n	8001eec <_printf_float+0x334>
 8001f1e:	e6a2      	b.n	8001c66 <_printf_float+0xae>
 8001f20:	464b      	mov	r3, r9
 8001f22:	463a      	mov	r2, r7
 8001f24:	4659      	mov	r1, fp
 8001f26:	4628      	mov	r0, r5
 8001f28:	47b0      	blx	r6
 8001f2a:	3001      	adds	r0, #1
 8001f2c:	d1ea      	bne.n	8001f04 <_printf_float+0x34c>
 8001f2e:	e69a      	b.n	8001c66 <_printf_float+0xae>
 8001f30:	2301      	movs	r3, #1
 8001f32:	4642      	mov	r2, r8
 8001f34:	4659      	mov	r1, fp
 8001f36:	4628      	mov	r0, r5
 8001f38:	47b0      	blx	r6
 8001f3a:	3001      	adds	r0, #1
 8001f3c:	f43f ae93 	beq.w	8001c66 <_printf_float+0xae>
 8001f40:	3701      	adds	r7, #1
 8001f42:	e9dd 230d 	ldrd	r2, r3, [sp, #52]	; 0x34
 8001f46:	1a9b      	subs	r3, r3, r2
 8001f48:	eba3 0309 	sub.w	r3, r3, r9
 8001f4c:	42bb      	cmp	r3, r7
 8001f4e:	dcef      	bgt.n	8001f30 <_printf_float+0x378>
 8001f50:	e74d      	b.n	8001dee <_printf_float+0x236>
 8001f52:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8001f54:	2a01      	cmp	r2, #1
 8001f56:	dc01      	bgt.n	8001f5c <_printf_float+0x3a4>
 8001f58:	07db      	lsls	r3, r3, #31
 8001f5a:	d538      	bpl.n	8001fce <_printf_float+0x416>
 8001f5c:	2301      	movs	r3, #1
 8001f5e:	463a      	mov	r2, r7
 8001f60:	4659      	mov	r1, fp
 8001f62:	4628      	mov	r0, r5
 8001f64:	47b0      	blx	r6
 8001f66:	3001      	adds	r0, #1
 8001f68:	f43f ae7d 	beq.w	8001c66 <_printf_float+0xae>
 8001f6c:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8001f70:	4659      	mov	r1, fp
 8001f72:	4628      	mov	r0, r5
 8001f74:	47b0      	blx	r6
 8001f76:	3001      	adds	r0, #1
 8001f78:	f107 0701 	add.w	r7, r7, #1
 8001f7c:	f43f ae73 	beq.w	8001c66 <_printf_float+0xae>
 8001f80:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8001f82:	2200      	movs	r2, #0
 8001f84:	f103 38ff 	add.w	r8, r3, #4294967295
 8001f88:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 8001f8c:	2300      	movs	r3, #0
 8001f8e:	f7fe fdbb 	bl	8000b08 <__aeabi_dcmpeq>
 8001f92:	b9c0      	cbnz	r0, 8001fc6 <_printf_float+0x40e>
 8001f94:	4643      	mov	r3, r8
 8001f96:	463a      	mov	r2, r7
 8001f98:	4659      	mov	r1, fp
 8001f9a:	4628      	mov	r0, r5
 8001f9c:	47b0      	blx	r6
 8001f9e:	3001      	adds	r0, #1
 8001fa0:	d10d      	bne.n	8001fbe <_printf_float+0x406>
 8001fa2:	e660      	b.n	8001c66 <_printf_float+0xae>
 8001fa4:	2301      	movs	r3, #1
 8001fa6:	4642      	mov	r2, r8
 8001fa8:	4659      	mov	r1, fp
 8001faa:	4628      	mov	r0, r5
 8001fac:	47b0      	blx	r6
 8001fae:	3001      	adds	r0, #1
 8001fb0:	f43f ae59 	beq.w	8001c66 <_printf_float+0xae>
 8001fb4:	3701      	adds	r7, #1
 8001fb6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8001fb8:	3b01      	subs	r3, #1
 8001fba:	42bb      	cmp	r3, r7
 8001fbc:	dcf2      	bgt.n	8001fa4 <_printf_float+0x3ec>
 8001fbe:	464b      	mov	r3, r9
 8001fc0:	f104 0250 	add.w	r2, r4, #80	; 0x50
 8001fc4:	e6e4      	b.n	8001d90 <_printf_float+0x1d8>
 8001fc6:	2700      	movs	r7, #0
 8001fc8:	f104 081a 	add.w	r8, r4, #26
 8001fcc:	e7f3      	b.n	8001fb6 <_printf_float+0x3fe>
 8001fce:	2301      	movs	r3, #1
 8001fd0:	e7e1      	b.n	8001f96 <_printf_float+0x3de>
 8001fd2:	2301      	movs	r3, #1
 8001fd4:	4642      	mov	r2, r8
 8001fd6:	4659      	mov	r1, fp
 8001fd8:	4628      	mov	r0, r5
 8001fda:	47b0      	blx	r6
 8001fdc:	3001      	adds	r0, #1
 8001fde:	f43f ae42 	beq.w	8001c66 <_printf_float+0xae>
 8001fe2:	3701      	adds	r7, #1
 8001fe4:	68e3      	ldr	r3, [r4, #12]
 8001fe6:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8001fe8:	1a9b      	subs	r3, r3, r2
 8001fea:	42bb      	cmp	r3, r7
 8001fec:	dcf1      	bgt.n	8001fd2 <_printf_float+0x41a>
 8001fee:	e702      	b.n	8001df6 <_printf_float+0x23e>
 8001ff0:	2700      	movs	r7, #0
 8001ff2:	f104 0819 	add.w	r8, r4, #25
 8001ff6:	e7f5      	b.n	8001fe4 <_printf_float+0x42c>
 8001ff8:	2b00      	cmp	r3, #0
 8001ffa:	f43f ae94 	beq.w	8001d26 <_printf_float+0x16e>
 8001ffe:	f04f 0c00 	mov.w	ip, #0
 8002002:	e9cd 1c05 	strd	r1, ip, [sp, #20]
 8002006:	f10d 0133 	add.w	r1, sp, #51	; 0x33
 800200a:	6022      	str	r2, [r4, #0]
 800200c:	e9cd 0803 	strd	r0, r8, [sp, #12]
 8002010:	e9cd 2101 	strd	r2, r1, [sp, #4]
 8002014:	9300      	str	r3, [sp, #0]
 8002016:	463a      	mov	r2, r7
 8002018:	464b      	mov	r3, r9
 800201a:	4628      	mov	r0, r5
 800201c:	f7ff fd3c 	bl	8001a98 <__cvt>
 8002020:	4607      	mov	r7, r0
 8002022:	e64f      	b.n	8001cc4 <_printf_float+0x10c>

08002024 <_printf_common>:
 8002024:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8002028:	4691      	mov	r9, r2
 800202a:	461f      	mov	r7, r3
 800202c:	688a      	ldr	r2, [r1, #8]
 800202e:	690b      	ldr	r3, [r1, #16]
 8002030:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8002034:	4293      	cmp	r3, r2
 8002036:	bfb8      	it	lt
 8002038:	4613      	movlt	r3, r2
 800203a:	f8c9 3000 	str.w	r3, [r9]
 800203e:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8002042:	4606      	mov	r6, r0
 8002044:	460c      	mov	r4, r1
 8002046:	b112      	cbz	r2, 800204e <_printf_common+0x2a>
 8002048:	3301      	adds	r3, #1
 800204a:	f8c9 3000 	str.w	r3, [r9]
 800204e:	6823      	ldr	r3, [r4, #0]
 8002050:	0699      	lsls	r1, r3, #26
 8002052:	bf42      	ittt	mi
 8002054:	f8d9 3000 	ldrmi.w	r3, [r9]
 8002058:	3302      	addmi	r3, #2
 800205a:	f8c9 3000 	strmi.w	r3, [r9]
 800205e:	6825      	ldr	r5, [r4, #0]
 8002060:	f015 0506 	ands.w	r5, r5, #6
 8002064:	d107      	bne.n	8002076 <_printf_common+0x52>
 8002066:	f104 0a19 	add.w	sl, r4, #25
 800206a:	68e3      	ldr	r3, [r4, #12]
 800206c:	f8d9 2000 	ldr.w	r2, [r9]
 8002070:	1a9b      	subs	r3, r3, r2
 8002072:	42ab      	cmp	r3, r5
 8002074:	dc28      	bgt.n	80020c8 <_printf_common+0xa4>
 8002076:	f894 3043 	ldrb.w	r3, [r4, #67]	; 0x43
 800207a:	6822      	ldr	r2, [r4, #0]
 800207c:	3300      	adds	r3, #0
 800207e:	bf18      	it	ne
 8002080:	2301      	movne	r3, #1
 8002082:	0692      	lsls	r2, r2, #26
 8002084:	d42d      	bmi.n	80020e2 <_printf_common+0xbe>
 8002086:	f104 0243 	add.w	r2, r4, #67	; 0x43
 800208a:	4639      	mov	r1, r7
 800208c:	4630      	mov	r0, r6
 800208e:	47c0      	blx	r8
 8002090:	3001      	adds	r0, #1
 8002092:	d020      	beq.n	80020d6 <_printf_common+0xb2>
 8002094:	6823      	ldr	r3, [r4, #0]
 8002096:	68e5      	ldr	r5, [r4, #12]
 8002098:	f8d9 2000 	ldr.w	r2, [r9]
 800209c:	f003 0306 	and.w	r3, r3, #6
 80020a0:	2b04      	cmp	r3, #4
 80020a2:	bf08      	it	eq
 80020a4:	1aad      	subeq	r5, r5, r2
 80020a6:	68a3      	ldr	r3, [r4, #8]
 80020a8:	6922      	ldr	r2, [r4, #16]
 80020aa:	bf0c      	ite	eq
 80020ac:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 80020b0:	2500      	movne	r5, #0
 80020b2:	4293      	cmp	r3, r2
 80020b4:	bfc4      	itt	gt
 80020b6:	1a9b      	subgt	r3, r3, r2
 80020b8:	18ed      	addgt	r5, r5, r3
 80020ba:	f04f 0900 	mov.w	r9, #0
 80020be:	341a      	adds	r4, #26
 80020c0:	454d      	cmp	r5, r9
 80020c2:	d11a      	bne.n	80020fa <_printf_common+0xd6>
 80020c4:	2000      	movs	r0, #0
 80020c6:	e008      	b.n	80020da <_printf_common+0xb6>
 80020c8:	2301      	movs	r3, #1
 80020ca:	4652      	mov	r2, sl
 80020cc:	4639      	mov	r1, r7
 80020ce:	4630      	mov	r0, r6
 80020d0:	47c0      	blx	r8
 80020d2:	3001      	adds	r0, #1
 80020d4:	d103      	bne.n	80020de <_printf_common+0xba>
 80020d6:	f04f 30ff 	mov.w	r0, #4294967295
 80020da:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80020de:	3501      	adds	r5, #1
 80020e0:	e7c3      	b.n	800206a <_printf_common+0x46>
 80020e2:	18e1      	adds	r1, r4, r3
 80020e4:	1c5a      	adds	r2, r3, #1
 80020e6:	2030      	movs	r0, #48	; 0x30
 80020e8:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 80020ec:	4422      	add	r2, r4
 80020ee:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 80020f2:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 80020f6:	3302      	adds	r3, #2
 80020f8:	e7c5      	b.n	8002086 <_printf_common+0x62>
 80020fa:	2301      	movs	r3, #1
 80020fc:	4622      	mov	r2, r4
 80020fe:	4639      	mov	r1, r7
 8002100:	4630      	mov	r0, r6
 8002102:	47c0      	blx	r8
 8002104:	3001      	adds	r0, #1
 8002106:	d0e6      	beq.n	80020d6 <_printf_common+0xb2>
 8002108:	f109 0901 	add.w	r9, r9, #1
 800210c:	e7d8      	b.n	80020c0 <_printf_common+0x9c>
	...

08002110 <_printf_i>:
 8002110:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8002114:	f101 0c43 	add.w	ip, r1, #67	; 0x43
 8002118:	460c      	mov	r4, r1
 800211a:	7e09      	ldrb	r1, [r1, #24]
 800211c:	b085      	sub	sp, #20
 800211e:	296e      	cmp	r1, #110	; 0x6e
 8002120:	4617      	mov	r7, r2
 8002122:	4606      	mov	r6, r0
 8002124:	4698      	mov	r8, r3
 8002126:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8002128:	f000 80b3 	beq.w	8002292 <_printf_i+0x182>
 800212c:	d822      	bhi.n	8002174 <_printf_i+0x64>
 800212e:	2963      	cmp	r1, #99	; 0x63
 8002130:	d036      	beq.n	80021a0 <_printf_i+0x90>
 8002132:	d80a      	bhi.n	800214a <_printf_i+0x3a>
 8002134:	2900      	cmp	r1, #0
 8002136:	f000 80b9 	beq.w	80022ac <_printf_i+0x19c>
 800213a:	2958      	cmp	r1, #88	; 0x58
 800213c:	f000 8083 	beq.w	8002246 <_printf_i+0x136>
 8002140:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8002144:	f884 1042 	strb.w	r1, [r4, #66]	; 0x42
 8002148:	e032      	b.n	80021b0 <_printf_i+0xa0>
 800214a:	2964      	cmp	r1, #100	; 0x64
 800214c:	d001      	beq.n	8002152 <_printf_i+0x42>
 800214e:	2969      	cmp	r1, #105	; 0x69
 8002150:	d1f6      	bne.n	8002140 <_printf_i+0x30>
 8002152:	6820      	ldr	r0, [r4, #0]
 8002154:	6813      	ldr	r3, [r2, #0]
 8002156:	0605      	lsls	r5, r0, #24
 8002158:	f103 0104 	add.w	r1, r3, #4
 800215c:	d52a      	bpl.n	80021b4 <_printf_i+0xa4>
 800215e:	681b      	ldr	r3, [r3, #0]
 8002160:	6011      	str	r1, [r2, #0]
 8002162:	2b00      	cmp	r3, #0
 8002164:	da03      	bge.n	800216e <_printf_i+0x5e>
 8002166:	222d      	movs	r2, #45	; 0x2d
 8002168:	425b      	negs	r3, r3
 800216a:	f884 2043 	strb.w	r2, [r4, #67]	; 0x43
 800216e:	486f      	ldr	r0, [pc, #444]	; (800232c <_printf_i+0x21c>)
 8002170:	220a      	movs	r2, #10
 8002172:	e039      	b.n	80021e8 <_printf_i+0xd8>
 8002174:	2973      	cmp	r1, #115	; 0x73
 8002176:	f000 809d 	beq.w	80022b4 <_printf_i+0x1a4>
 800217a:	d808      	bhi.n	800218e <_printf_i+0x7e>
 800217c:	296f      	cmp	r1, #111	; 0x6f
 800217e:	d020      	beq.n	80021c2 <_printf_i+0xb2>
 8002180:	2970      	cmp	r1, #112	; 0x70
 8002182:	d1dd      	bne.n	8002140 <_printf_i+0x30>
 8002184:	6823      	ldr	r3, [r4, #0]
 8002186:	f043 0320 	orr.w	r3, r3, #32
 800218a:	6023      	str	r3, [r4, #0]
 800218c:	e003      	b.n	8002196 <_printf_i+0x86>
 800218e:	2975      	cmp	r1, #117	; 0x75
 8002190:	d017      	beq.n	80021c2 <_printf_i+0xb2>
 8002192:	2978      	cmp	r1, #120	; 0x78
 8002194:	d1d4      	bne.n	8002140 <_printf_i+0x30>
 8002196:	2378      	movs	r3, #120	; 0x78
 8002198:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 800219c:	4864      	ldr	r0, [pc, #400]	; (8002330 <_printf_i+0x220>)
 800219e:	e055      	b.n	800224c <_printf_i+0x13c>
 80021a0:	6813      	ldr	r3, [r2, #0]
 80021a2:	1d19      	adds	r1, r3, #4
 80021a4:	681b      	ldr	r3, [r3, #0]
 80021a6:	6011      	str	r1, [r2, #0]
 80021a8:	f104 0542 	add.w	r5, r4, #66	; 0x42
 80021ac:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 80021b0:	2301      	movs	r3, #1
 80021b2:	e08c      	b.n	80022ce <_printf_i+0x1be>
 80021b4:	681b      	ldr	r3, [r3, #0]
 80021b6:	6011      	str	r1, [r2, #0]
 80021b8:	f010 0f40 	tst.w	r0, #64	; 0x40
 80021bc:	bf18      	it	ne
 80021be:	b21b      	sxthne	r3, r3
 80021c0:	e7cf      	b.n	8002162 <_printf_i+0x52>
 80021c2:	6813      	ldr	r3, [r2, #0]
 80021c4:	6825      	ldr	r5, [r4, #0]
 80021c6:	1d18      	adds	r0, r3, #4
 80021c8:	6010      	str	r0, [r2, #0]
 80021ca:	0628      	lsls	r0, r5, #24
 80021cc:	d501      	bpl.n	80021d2 <_printf_i+0xc2>
 80021ce:	681b      	ldr	r3, [r3, #0]
 80021d0:	e002      	b.n	80021d8 <_printf_i+0xc8>
 80021d2:	0668      	lsls	r0, r5, #25
 80021d4:	d5fb      	bpl.n	80021ce <_printf_i+0xbe>
 80021d6:	881b      	ldrh	r3, [r3, #0]
 80021d8:	4854      	ldr	r0, [pc, #336]	; (800232c <_printf_i+0x21c>)
 80021da:	296f      	cmp	r1, #111	; 0x6f
 80021dc:	bf14      	ite	ne
 80021de:	220a      	movne	r2, #10
 80021e0:	2208      	moveq	r2, #8
 80021e2:	2100      	movs	r1, #0
 80021e4:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 80021e8:	6865      	ldr	r5, [r4, #4]
 80021ea:	60a5      	str	r5, [r4, #8]
 80021ec:	2d00      	cmp	r5, #0
 80021ee:	f2c0 8095 	blt.w	800231c <_printf_i+0x20c>
 80021f2:	6821      	ldr	r1, [r4, #0]
 80021f4:	f021 0104 	bic.w	r1, r1, #4
 80021f8:	6021      	str	r1, [r4, #0]
 80021fa:	2b00      	cmp	r3, #0
 80021fc:	d13d      	bne.n	800227a <_printf_i+0x16a>
 80021fe:	2d00      	cmp	r5, #0
 8002200:	f040 808e 	bne.w	8002320 <_printf_i+0x210>
 8002204:	4665      	mov	r5, ip
 8002206:	2a08      	cmp	r2, #8
 8002208:	d10b      	bne.n	8002222 <_printf_i+0x112>
 800220a:	6823      	ldr	r3, [r4, #0]
 800220c:	07db      	lsls	r3, r3, #31
 800220e:	d508      	bpl.n	8002222 <_printf_i+0x112>
 8002210:	6923      	ldr	r3, [r4, #16]
 8002212:	6862      	ldr	r2, [r4, #4]
 8002214:	429a      	cmp	r2, r3
 8002216:	bfde      	ittt	le
 8002218:	2330      	movle	r3, #48	; 0x30
 800221a:	f805 3c01 	strble.w	r3, [r5, #-1]
 800221e:	f105 35ff 	addle.w	r5, r5, #4294967295
 8002222:	ebac 0305 	sub.w	r3, ip, r5
 8002226:	6123      	str	r3, [r4, #16]
 8002228:	f8cd 8000 	str.w	r8, [sp]
 800222c:	463b      	mov	r3, r7
 800222e:	aa03      	add	r2, sp, #12
 8002230:	4621      	mov	r1, r4
 8002232:	4630      	mov	r0, r6
 8002234:	f7ff fef6 	bl	8002024 <_printf_common>
 8002238:	3001      	adds	r0, #1
 800223a:	d14d      	bne.n	80022d8 <_printf_i+0x1c8>
 800223c:	f04f 30ff 	mov.w	r0, #4294967295
 8002240:	b005      	add	sp, #20
 8002242:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8002246:	4839      	ldr	r0, [pc, #228]	; (800232c <_printf_i+0x21c>)
 8002248:	f884 1045 	strb.w	r1, [r4, #69]	; 0x45
 800224c:	6813      	ldr	r3, [r2, #0]
 800224e:	6821      	ldr	r1, [r4, #0]
 8002250:	1d1d      	adds	r5, r3, #4
 8002252:	681b      	ldr	r3, [r3, #0]
 8002254:	6015      	str	r5, [r2, #0]
 8002256:	060a      	lsls	r2, r1, #24
 8002258:	d50b      	bpl.n	8002272 <_printf_i+0x162>
 800225a:	07ca      	lsls	r2, r1, #31
 800225c:	bf44      	itt	mi
 800225e:	f041 0120 	orrmi.w	r1, r1, #32
 8002262:	6021      	strmi	r1, [r4, #0]
 8002264:	b91b      	cbnz	r3, 800226e <_printf_i+0x15e>
 8002266:	6822      	ldr	r2, [r4, #0]
 8002268:	f022 0220 	bic.w	r2, r2, #32
 800226c:	6022      	str	r2, [r4, #0]
 800226e:	2210      	movs	r2, #16
 8002270:	e7b7      	b.n	80021e2 <_printf_i+0xd2>
 8002272:	064d      	lsls	r5, r1, #25
 8002274:	bf48      	it	mi
 8002276:	b29b      	uxthmi	r3, r3
 8002278:	e7ef      	b.n	800225a <_printf_i+0x14a>
 800227a:	4665      	mov	r5, ip
 800227c:	fbb3 f1f2 	udiv	r1, r3, r2
 8002280:	fb02 3311 	mls	r3, r2, r1, r3
 8002284:	5cc3      	ldrb	r3, [r0, r3]
 8002286:	f805 3d01 	strb.w	r3, [r5, #-1]!
 800228a:	460b      	mov	r3, r1
 800228c:	2900      	cmp	r1, #0
 800228e:	d1f5      	bne.n	800227c <_printf_i+0x16c>
 8002290:	e7b9      	b.n	8002206 <_printf_i+0xf6>
 8002292:	6813      	ldr	r3, [r2, #0]
 8002294:	6825      	ldr	r5, [r4, #0]
 8002296:	6961      	ldr	r1, [r4, #20]
 8002298:	1d18      	adds	r0, r3, #4
 800229a:	6010      	str	r0, [r2, #0]
 800229c:	0628      	lsls	r0, r5, #24
 800229e:	681b      	ldr	r3, [r3, #0]
 80022a0:	d501      	bpl.n	80022a6 <_printf_i+0x196>
 80022a2:	6019      	str	r1, [r3, #0]
 80022a4:	e002      	b.n	80022ac <_printf_i+0x19c>
 80022a6:	066a      	lsls	r2, r5, #25
 80022a8:	d5fb      	bpl.n	80022a2 <_printf_i+0x192>
 80022aa:	8019      	strh	r1, [r3, #0]
 80022ac:	2300      	movs	r3, #0
 80022ae:	6123      	str	r3, [r4, #16]
 80022b0:	4665      	mov	r5, ip
 80022b2:	e7b9      	b.n	8002228 <_printf_i+0x118>
 80022b4:	6813      	ldr	r3, [r2, #0]
 80022b6:	1d19      	adds	r1, r3, #4
 80022b8:	6011      	str	r1, [r2, #0]
 80022ba:	681d      	ldr	r5, [r3, #0]
 80022bc:	6862      	ldr	r2, [r4, #4]
 80022be:	2100      	movs	r1, #0
 80022c0:	4628      	mov	r0, r5
 80022c2:	f7fd ffad 	bl	8000220 <memchr>
 80022c6:	b108      	cbz	r0, 80022cc <_printf_i+0x1bc>
 80022c8:	1b40      	subs	r0, r0, r5
 80022ca:	6060      	str	r0, [r4, #4]
 80022cc:	6863      	ldr	r3, [r4, #4]
 80022ce:	6123      	str	r3, [r4, #16]
 80022d0:	2300      	movs	r3, #0
 80022d2:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80022d6:	e7a7      	b.n	8002228 <_printf_i+0x118>
 80022d8:	6923      	ldr	r3, [r4, #16]
 80022da:	462a      	mov	r2, r5
 80022dc:	4639      	mov	r1, r7
 80022de:	4630      	mov	r0, r6
 80022e0:	47c0      	blx	r8
 80022e2:	3001      	adds	r0, #1
 80022e4:	d0aa      	beq.n	800223c <_printf_i+0x12c>
 80022e6:	6823      	ldr	r3, [r4, #0]
 80022e8:	079b      	lsls	r3, r3, #30
 80022ea:	d413      	bmi.n	8002314 <_printf_i+0x204>
 80022ec:	68e0      	ldr	r0, [r4, #12]
 80022ee:	9b03      	ldr	r3, [sp, #12]
 80022f0:	4298      	cmp	r0, r3
 80022f2:	bfb8      	it	lt
 80022f4:	4618      	movlt	r0, r3
 80022f6:	e7a3      	b.n	8002240 <_printf_i+0x130>
 80022f8:	2301      	movs	r3, #1
 80022fa:	464a      	mov	r2, r9
 80022fc:	4639      	mov	r1, r7
 80022fe:	4630      	mov	r0, r6
 8002300:	47c0      	blx	r8
 8002302:	3001      	adds	r0, #1
 8002304:	d09a      	beq.n	800223c <_printf_i+0x12c>
 8002306:	3501      	adds	r5, #1
 8002308:	68e3      	ldr	r3, [r4, #12]
 800230a:	9a03      	ldr	r2, [sp, #12]
 800230c:	1a9b      	subs	r3, r3, r2
 800230e:	42ab      	cmp	r3, r5
 8002310:	dcf2      	bgt.n	80022f8 <_printf_i+0x1e8>
 8002312:	e7eb      	b.n	80022ec <_printf_i+0x1dc>
 8002314:	2500      	movs	r5, #0
 8002316:	f104 0919 	add.w	r9, r4, #25
 800231a:	e7f5      	b.n	8002308 <_printf_i+0x1f8>
 800231c:	2b00      	cmp	r3, #0
 800231e:	d1ac      	bne.n	800227a <_printf_i+0x16a>
 8002320:	7803      	ldrb	r3, [r0, #0]
 8002322:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8002326:	f104 0542 	add.w	r5, r4, #66	; 0x42
 800232a:	e76c      	b.n	8002206 <_printf_i+0xf6>
 800232c:	08004112 	.word	0x08004112
 8002330:	08004123 	.word	0x08004123

08002334 <iprintf>:
 8002334:	b40f      	push	{r0, r1, r2, r3}
 8002336:	4b0a      	ldr	r3, [pc, #40]	; (8002360 <iprintf+0x2c>)
 8002338:	b513      	push	{r0, r1, r4, lr}
 800233a:	681c      	ldr	r4, [r3, #0]
 800233c:	b124      	cbz	r4, 8002348 <iprintf+0x14>
 800233e:	69a3      	ldr	r3, [r4, #24]
 8002340:	b913      	cbnz	r3, 8002348 <iprintf+0x14>
 8002342:	4620      	mov	r0, r4
 8002344:	f000 fe96 	bl	8003074 <__sinit>
 8002348:	ab05      	add	r3, sp, #20
 800234a:	9a04      	ldr	r2, [sp, #16]
 800234c:	68a1      	ldr	r1, [r4, #8]
 800234e:	9301      	str	r3, [sp, #4]
 8002350:	4620      	mov	r0, r4
 8002352:	f001 faf3 	bl	800393c <_vfiprintf_r>
 8002356:	b002      	add	sp, #8
 8002358:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800235c:	b004      	add	sp, #16
 800235e:	4770      	bx	lr
 8002360:	2000000c 	.word	0x2000000c

08002364 <quorem>:
 8002364:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002368:	6903      	ldr	r3, [r0, #16]
 800236a:	690c      	ldr	r4, [r1, #16]
 800236c:	42a3      	cmp	r3, r4
 800236e:	4680      	mov	r8, r0
 8002370:	f2c0 8082 	blt.w	8002478 <quorem+0x114>
 8002374:	3c01      	subs	r4, #1
 8002376:	f101 0714 	add.w	r7, r1, #20
 800237a:	ea4f 0c84 	mov.w	ip, r4, lsl #2
 800237e:	f100 0614 	add.w	r6, r0, #20
 8002382:	f857 5024 	ldr.w	r5, [r7, r4, lsl #2]
 8002386:	f856 0024 	ldr.w	r0, [r6, r4, lsl #2]
 800238a:	eb06 030c 	add.w	r3, r6, ip
 800238e:	3501      	adds	r5, #1
 8002390:	eb07 090c 	add.w	r9, r7, ip
 8002394:	9301      	str	r3, [sp, #4]
 8002396:	fbb0 f5f5 	udiv	r5, r0, r5
 800239a:	b395      	cbz	r5, 8002402 <quorem+0x9e>
 800239c:	f04f 0a00 	mov.w	sl, #0
 80023a0:	4638      	mov	r0, r7
 80023a2:	46b6      	mov	lr, r6
 80023a4:	46d3      	mov	fp, sl
 80023a6:	f850 2b04 	ldr.w	r2, [r0], #4
 80023aa:	b293      	uxth	r3, r2
 80023ac:	fb05 a303 	mla	r3, r5, r3, sl
 80023b0:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 80023b4:	b29b      	uxth	r3, r3
 80023b6:	ebab 0303 	sub.w	r3, fp, r3
 80023ba:	0c12      	lsrs	r2, r2, #16
 80023bc:	f8de b000 	ldr.w	fp, [lr]
 80023c0:	fb05 a202 	mla	r2, r5, r2, sl
 80023c4:	fa13 f38b 	uxtah	r3, r3, fp
 80023c8:	ea4f 4a12 	mov.w	sl, r2, lsr #16
 80023cc:	fa1f fb82 	uxth.w	fp, r2
 80023d0:	f8de 2000 	ldr.w	r2, [lr]
 80023d4:	ebcb 4212 	rsb	r2, fp, r2, lsr #16
 80023d8:	eb02 4223 	add.w	r2, r2, r3, asr #16
 80023dc:	b29b      	uxth	r3, r3
 80023de:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80023e2:	4581      	cmp	r9, r0
 80023e4:	ea4f 4b22 	mov.w	fp, r2, asr #16
 80023e8:	f84e 3b04 	str.w	r3, [lr], #4
 80023ec:	d2db      	bcs.n	80023a6 <quorem+0x42>
 80023ee:	f856 300c 	ldr.w	r3, [r6, ip]
 80023f2:	b933      	cbnz	r3, 8002402 <quorem+0x9e>
 80023f4:	9b01      	ldr	r3, [sp, #4]
 80023f6:	3b04      	subs	r3, #4
 80023f8:	429e      	cmp	r6, r3
 80023fa:	461a      	mov	r2, r3
 80023fc:	d330      	bcc.n	8002460 <quorem+0xfc>
 80023fe:	f8c8 4010 	str.w	r4, [r8, #16]
 8002402:	4640      	mov	r0, r8
 8002404:	f001 f8f6 	bl	80035f4 <__mcmp>
 8002408:	2800      	cmp	r0, #0
 800240a:	db25      	blt.n	8002458 <quorem+0xf4>
 800240c:	3501      	adds	r5, #1
 800240e:	4630      	mov	r0, r6
 8002410:	f04f 0c00 	mov.w	ip, #0
 8002414:	f857 2b04 	ldr.w	r2, [r7], #4
 8002418:	f8d0 e000 	ldr.w	lr, [r0]
 800241c:	b293      	uxth	r3, r2
 800241e:	ebac 0303 	sub.w	r3, ip, r3
 8002422:	0c12      	lsrs	r2, r2, #16
 8002424:	fa13 f38e 	uxtah	r3, r3, lr
 8002428:	ebc2 421e 	rsb	r2, r2, lr, lsr #16
 800242c:	eb02 4223 	add.w	r2, r2, r3, asr #16
 8002430:	b29b      	uxth	r3, r3
 8002432:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8002436:	45b9      	cmp	r9, r7
 8002438:	ea4f 4c22 	mov.w	ip, r2, asr #16
 800243c:	f840 3b04 	str.w	r3, [r0], #4
 8002440:	d2e8      	bcs.n	8002414 <quorem+0xb0>
 8002442:	f856 2024 	ldr.w	r2, [r6, r4, lsl #2]
 8002446:	eb06 0384 	add.w	r3, r6, r4, lsl #2
 800244a:	b92a      	cbnz	r2, 8002458 <quorem+0xf4>
 800244c:	3b04      	subs	r3, #4
 800244e:	429e      	cmp	r6, r3
 8002450:	461a      	mov	r2, r3
 8002452:	d30b      	bcc.n	800246c <quorem+0x108>
 8002454:	f8c8 4010 	str.w	r4, [r8, #16]
 8002458:	4628      	mov	r0, r5
 800245a:	b003      	add	sp, #12
 800245c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002460:	6812      	ldr	r2, [r2, #0]
 8002462:	3b04      	subs	r3, #4
 8002464:	2a00      	cmp	r2, #0
 8002466:	d1ca      	bne.n	80023fe <quorem+0x9a>
 8002468:	3c01      	subs	r4, #1
 800246a:	e7c5      	b.n	80023f8 <quorem+0x94>
 800246c:	6812      	ldr	r2, [r2, #0]
 800246e:	3b04      	subs	r3, #4
 8002470:	2a00      	cmp	r2, #0
 8002472:	d1ef      	bne.n	8002454 <quorem+0xf0>
 8002474:	3c01      	subs	r4, #1
 8002476:	e7ea      	b.n	800244e <quorem+0xea>
 8002478:	2000      	movs	r0, #0
 800247a:	e7ee      	b.n	800245a <quorem+0xf6>
 800247c:	0000      	movs	r0, r0
	...

08002480 <_dtoa_r>:
 8002480:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002484:	6a45      	ldr	r5, [r0, #36]	; 0x24
 8002486:	b095      	sub	sp, #84	; 0x54
 8002488:	4616      	mov	r6, r2
 800248a:	461f      	mov	r7, r3
 800248c:	4604      	mov	r4, r0
 800248e:	f8dd 8084 	ldr.w	r8, [sp, #132]	; 0x84
 8002492:	e9cd 6702 	strd	r6, r7, [sp, #8]
 8002496:	b93d      	cbnz	r5, 80024a8 <_dtoa_r+0x28>
 8002498:	2010      	movs	r0, #16
 800249a:	f000 fe83 	bl	80031a4 <malloc>
 800249e:	6260      	str	r0, [r4, #36]	; 0x24
 80024a0:	e9c0 5501 	strd	r5, r5, [r0, #4]
 80024a4:	6005      	str	r5, [r0, #0]
 80024a6:	60c5      	str	r5, [r0, #12]
 80024a8:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80024aa:	6819      	ldr	r1, [r3, #0]
 80024ac:	b151      	cbz	r1, 80024c4 <_dtoa_r+0x44>
 80024ae:	685a      	ldr	r2, [r3, #4]
 80024b0:	604a      	str	r2, [r1, #4]
 80024b2:	2301      	movs	r3, #1
 80024b4:	4093      	lsls	r3, r2
 80024b6:	608b      	str	r3, [r1, #8]
 80024b8:	4620      	mov	r0, r4
 80024ba:	f000 feba 	bl	8003232 <_Bfree>
 80024be:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80024c0:	2200      	movs	r2, #0
 80024c2:	601a      	str	r2, [r3, #0]
 80024c4:	1e3b      	subs	r3, r7, #0
 80024c6:	bfbb      	ittet	lt
 80024c8:	f023 4300 	biclt.w	r3, r3, #2147483648	; 0x80000000
 80024cc:	9303      	strlt	r3, [sp, #12]
 80024ce:	2300      	movge	r3, #0
 80024d0:	2201      	movlt	r2, #1
 80024d2:	bfac      	ite	ge
 80024d4:	f8c8 3000 	strge.w	r3, [r8]
 80024d8:	f8c8 2000 	strlt.w	r2, [r8]
 80024dc:	4bae      	ldr	r3, [pc, #696]	; (8002798 <_dtoa_r+0x318>)
 80024de:	f8dd 800c 	ldr.w	r8, [sp, #12]
 80024e2:	ea33 0308 	bics.w	r3, r3, r8
 80024e6:	d11b      	bne.n	8002520 <_dtoa_r+0xa0>
 80024e8:	9a20      	ldr	r2, [sp, #128]	; 0x80
 80024ea:	f242 730f 	movw	r3, #9999	; 0x270f
 80024ee:	6013      	str	r3, [r2, #0]
 80024f0:	9b02      	ldr	r3, [sp, #8]
 80024f2:	b923      	cbnz	r3, 80024fe <_dtoa_r+0x7e>
 80024f4:	f3c8 0013 	ubfx	r0, r8, #0, #20
 80024f8:	2800      	cmp	r0, #0
 80024fa:	f000 854b 	beq.w	8002f94 <_dtoa_r+0xb14>
 80024fe:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8002500:	b953      	cbnz	r3, 8002518 <_dtoa_r+0x98>
 8002502:	4ba6      	ldr	r3, [pc, #664]	; (800279c <_dtoa_r+0x31c>)
 8002504:	e021      	b.n	800254a <_dtoa_r+0xca>
 8002506:	4ba6      	ldr	r3, [pc, #664]	; (80027a0 <_dtoa_r+0x320>)
 8002508:	9306      	str	r3, [sp, #24]
 800250a:	3308      	adds	r3, #8
 800250c:	9a22      	ldr	r2, [sp, #136]	; 0x88
 800250e:	6013      	str	r3, [r2, #0]
 8002510:	9806      	ldr	r0, [sp, #24]
 8002512:	b015      	add	sp, #84	; 0x54
 8002514:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002518:	4ba0      	ldr	r3, [pc, #640]	; (800279c <_dtoa_r+0x31c>)
 800251a:	9306      	str	r3, [sp, #24]
 800251c:	3303      	adds	r3, #3
 800251e:	e7f5      	b.n	800250c <_dtoa_r+0x8c>
 8002520:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
 8002524:	2200      	movs	r2, #0
 8002526:	2300      	movs	r3, #0
 8002528:	4630      	mov	r0, r6
 800252a:	4639      	mov	r1, r7
 800252c:	f7fe faec 	bl	8000b08 <__aeabi_dcmpeq>
 8002530:	4682      	mov	sl, r0
 8002532:	b160      	cbz	r0, 800254e <_dtoa_r+0xce>
 8002534:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8002536:	2301      	movs	r3, #1
 8002538:	6013      	str	r3, [r2, #0]
 800253a:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800253c:	2b00      	cmp	r3, #0
 800253e:	f000 8526 	beq.w	8002f8e <_dtoa_r+0xb0e>
 8002542:	4b98      	ldr	r3, [pc, #608]	; (80027a4 <_dtoa_r+0x324>)
 8002544:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8002546:	6013      	str	r3, [r2, #0]
 8002548:	3b01      	subs	r3, #1
 800254a:	9306      	str	r3, [sp, #24]
 800254c:	e7e0      	b.n	8002510 <_dtoa_r+0x90>
 800254e:	ab12      	add	r3, sp, #72	; 0x48
 8002550:	9301      	str	r3, [sp, #4]
 8002552:	ab13      	add	r3, sp, #76	; 0x4c
 8002554:	9300      	str	r3, [sp, #0]
 8002556:	4632      	mov	r2, r6
 8002558:	463b      	mov	r3, r7
 800255a:	4620      	mov	r0, r4
 800255c:	f001 f8c1 	bl	80036e2 <__d2b>
 8002560:	f3c8 550a 	ubfx	r5, r8, #20, #11
 8002564:	4683      	mov	fp, r0
 8002566:	2d00      	cmp	r5, #0
 8002568:	d07c      	beq.n	8002664 <_dtoa_r+0x1e4>
 800256a:	f3c7 0313 	ubfx	r3, r7, #0, #20
 800256e:	f043 597f 	orr.w	r9, r3, #1069547520	; 0x3fc00000
 8002572:	46b0      	mov	r8, r6
 8002574:	f449 1940 	orr.w	r9, r9, #3145728	; 0x300000
 8002578:	f2a5 35ff 	subw	r5, r5, #1023	; 0x3ff
 800257c:	f8cd a040 	str.w	sl, [sp, #64]	; 0x40
 8002580:	2200      	movs	r2, #0
 8002582:	4b89      	ldr	r3, [pc, #548]	; (80027a8 <_dtoa_r+0x328>)
 8002584:	4640      	mov	r0, r8
 8002586:	4649      	mov	r1, r9
 8002588:	f7fd fe9e 	bl	80002c8 <__aeabi_dsub>
 800258c:	a37c      	add	r3, pc, #496	; (adr r3, 8002780 <_dtoa_r+0x300>)
 800258e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002592:	f7fe f851 	bl	8000638 <__aeabi_dmul>
 8002596:	a37c      	add	r3, pc, #496	; (adr r3, 8002788 <_dtoa_r+0x308>)
 8002598:	e9d3 2300 	ldrd	r2, r3, [r3]
 800259c:	f7fd fe96 	bl	80002cc <__adddf3>
 80025a0:	4606      	mov	r6, r0
 80025a2:	4628      	mov	r0, r5
 80025a4:	460f      	mov	r7, r1
 80025a6:	f7fd ffdd 	bl	8000564 <__aeabi_i2d>
 80025aa:	a379      	add	r3, pc, #484	; (adr r3, 8002790 <_dtoa_r+0x310>)
 80025ac:	e9d3 2300 	ldrd	r2, r3, [r3]
 80025b0:	f7fe f842 	bl	8000638 <__aeabi_dmul>
 80025b4:	4602      	mov	r2, r0
 80025b6:	460b      	mov	r3, r1
 80025b8:	4630      	mov	r0, r6
 80025ba:	4639      	mov	r1, r7
 80025bc:	f7fd fe86 	bl	80002cc <__adddf3>
 80025c0:	4606      	mov	r6, r0
 80025c2:	460f      	mov	r7, r1
 80025c4:	f7fe fae8 	bl	8000b98 <__aeabi_d2iz>
 80025c8:	2200      	movs	r2, #0
 80025ca:	4682      	mov	sl, r0
 80025cc:	2300      	movs	r3, #0
 80025ce:	4630      	mov	r0, r6
 80025d0:	4639      	mov	r1, r7
 80025d2:	f7fe faa3 	bl	8000b1c <__aeabi_dcmplt>
 80025d6:	b148      	cbz	r0, 80025ec <_dtoa_r+0x16c>
 80025d8:	4650      	mov	r0, sl
 80025da:	f7fd ffc3 	bl	8000564 <__aeabi_i2d>
 80025de:	4632      	mov	r2, r6
 80025e0:	463b      	mov	r3, r7
 80025e2:	f7fe fa91 	bl	8000b08 <__aeabi_dcmpeq>
 80025e6:	b908      	cbnz	r0, 80025ec <_dtoa_r+0x16c>
 80025e8:	f10a 3aff 	add.w	sl, sl, #4294967295
 80025ec:	f1ba 0f16 	cmp.w	sl, #22
 80025f0:	d859      	bhi.n	80026a6 <_dtoa_r+0x226>
 80025f2:	496e      	ldr	r1, [pc, #440]	; (80027ac <_dtoa_r+0x32c>)
 80025f4:	eb01 01ca 	add.w	r1, r1, sl, lsl #3
 80025f8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80025fc:	e9d1 0100 	ldrd	r0, r1, [r1]
 8002600:	f7fe faaa 	bl	8000b58 <__aeabi_dcmpgt>
 8002604:	2800      	cmp	r0, #0
 8002606:	d050      	beq.n	80026aa <_dtoa_r+0x22a>
 8002608:	f10a 3aff 	add.w	sl, sl, #4294967295
 800260c:	2300      	movs	r3, #0
 800260e:	930d      	str	r3, [sp, #52]	; 0x34
 8002610:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8002612:	1b5d      	subs	r5, r3, r5
 8002614:	1e6b      	subs	r3, r5, #1
 8002616:	9307      	str	r3, [sp, #28]
 8002618:	bf43      	ittte	mi
 800261a:	2300      	movmi	r3, #0
 800261c:	f1c5 0901 	rsbmi	r9, r5, #1
 8002620:	9307      	strmi	r3, [sp, #28]
 8002622:	f04f 0900 	movpl.w	r9, #0
 8002626:	f1ba 0f00 	cmp.w	sl, #0
 800262a:	db40      	blt.n	80026ae <_dtoa_r+0x22e>
 800262c:	9b07      	ldr	r3, [sp, #28]
 800262e:	f8cd a030 	str.w	sl, [sp, #48]	; 0x30
 8002632:	4453      	add	r3, sl
 8002634:	9307      	str	r3, [sp, #28]
 8002636:	2300      	movs	r3, #0
 8002638:	9308      	str	r3, [sp, #32]
 800263a:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 800263c:	2b09      	cmp	r3, #9
 800263e:	f200 808e 	bhi.w	800275e <_dtoa_r+0x2de>
 8002642:	2b05      	cmp	r3, #5
 8002644:	bfc4      	itt	gt
 8002646:	3b04      	subgt	r3, #4
 8002648:	931e      	strgt	r3, [sp, #120]	; 0x78
 800264a:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 800264c:	f1a3 0302 	sub.w	r3, r3, #2
 8002650:	bfcc      	ite	gt
 8002652:	2500      	movgt	r5, #0
 8002654:	2501      	movle	r5, #1
 8002656:	2b03      	cmp	r3, #3
 8002658:	f200 808d 	bhi.w	8002776 <_dtoa_r+0x2f6>
 800265c:	e8df f003 	tbb	[pc, r3]
 8002660:	6f2f7d7b 	.word	0x6f2f7d7b
 8002664:	e9dd 5312 	ldrd	r5, r3, [sp, #72]	; 0x48
 8002668:	441d      	add	r5, r3
 800266a:	f205 4032 	addw	r0, r5, #1074	; 0x432
 800266e:	2820      	cmp	r0, #32
 8002670:	dd13      	ble.n	800269a <_dtoa_r+0x21a>
 8002672:	f1c0 0040 	rsb	r0, r0, #64	; 0x40
 8002676:	9b02      	ldr	r3, [sp, #8]
 8002678:	fa08 f800 	lsl.w	r8, r8, r0
 800267c:	f205 4012 	addw	r0, r5, #1042	; 0x412
 8002680:	fa23 f000 	lsr.w	r0, r3, r0
 8002684:	ea48 0000 	orr.w	r0, r8, r0
 8002688:	f7fd ff5c 	bl	8000544 <__aeabi_ui2d>
 800268c:	2301      	movs	r3, #1
 800268e:	4680      	mov	r8, r0
 8002690:	f1a1 79f8 	sub.w	r9, r1, #32505856	; 0x1f00000
 8002694:	3d01      	subs	r5, #1
 8002696:	9310      	str	r3, [sp, #64]	; 0x40
 8002698:	e772      	b.n	8002580 <_dtoa_r+0x100>
 800269a:	9b02      	ldr	r3, [sp, #8]
 800269c:	f1c0 0020 	rsb	r0, r0, #32
 80026a0:	fa03 f000 	lsl.w	r0, r3, r0
 80026a4:	e7f0      	b.n	8002688 <_dtoa_r+0x208>
 80026a6:	2301      	movs	r3, #1
 80026a8:	e7b1      	b.n	800260e <_dtoa_r+0x18e>
 80026aa:	900d      	str	r0, [sp, #52]	; 0x34
 80026ac:	e7b0      	b.n	8002610 <_dtoa_r+0x190>
 80026ae:	f1ca 0300 	rsb	r3, sl, #0
 80026b2:	9308      	str	r3, [sp, #32]
 80026b4:	2300      	movs	r3, #0
 80026b6:	eba9 090a 	sub.w	r9, r9, sl
 80026ba:	930c      	str	r3, [sp, #48]	; 0x30
 80026bc:	e7bd      	b.n	800263a <_dtoa_r+0x1ba>
 80026be:	2301      	movs	r3, #1
 80026c0:	9309      	str	r3, [sp, #36]	; 0x24
 80026c2:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80026c4:	2b00      	cmp	r3, #0
 80026c6:	dd75      	ble.n	80027b4 <_dtoa_r+0x334>
 80026c8:	9304      	str	r3, [sp, #16]
 80026ca:	4698      	mov	r8, r3
 80026cc:	6a66      	ldr	r6, [r4, #36]	; 0x24
 80026ce:	2200      	movs	r2, #0
 80026d0:	6072      	str	r2, [r6, #4]
 80026d2:	2204      	movs	r2, #4
 80026d4:	f102 0014 	add.w	r0, r2, #20
 80026d8:	4298      	cmp	r0, r3
 80026da:	6871      	ldr	r1, [r6, #4]
 80026dc:	d96f      	bls.n	80027be <_dtoa_r+0x33e>
 80026de:	4620      	mov	r0, r4
 80026e0:	f000 fd73 	bl	80031ca <_Balloc>
 80026e4:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80026e6:	6030      	str	r0, [r6, #0]
 80026e8:	681b      	ldr	r3, [r3, #0]
 80026ea:	9306      	str	r3, [sp, #24]
 80026ec:	f1b8 0f0e 	cmp.w	r8, #14
 80026f0:	f200 80ee 	bhi.w	80028d0 <_dtoa_r+0x450>
 80026f4:	2d00      	cmp	r5, #0
 80026f6:	f000 80eb 	beq.w	80028d0 <_dtoa_r+0x450>
 80026fa:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80026fe:	f1ba 0f00 	cmp.w	sl, #0
 8002702:	e9cd 230e 	strd	r2, r3, [sp, #56]	; 0x38
 8002706:	dd78      	ble.n	80027fa <_dtoa_r+0x37a>
 8002708:	4a28      	ldr	r2, [pc, #160]	; (80027ac <_dtoa_r+0x32c>)
 800270a:	f00a 030f 	and.w	r3, sl, #15
 800270e:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 8002712:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002716:	ea4f 162a 	mov.w	r6, sl, asr #4
 800271a:	06f0      	lsls	r0, r6, #27
 800271c:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
 8002720:	d569      	bpl.n	80027f6 <_dtoa_r+0x376>
 8002722:	4b23      	ldr	r3, [pc, #140]	; (80027b0 <_dtoa_r+0x330>)
 8002724:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
 8002728:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 800272c:	f7fe f8ae 	bl	800088c <__aeabi_ddiv>
 8002730:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8002734:	f006 060f 	and.w	r6, r6, #15
 8002738:	2503      	movs	r5, #3
 800273a:	4f1d      	ldr	r7, [pc, #116]	; (80027b0 <_dtoa_r+0x330>)
 800273c:	e050      	b.n	80027e0 <_dtoa_r+0x360>
 800273e:	2301      	movs	r3, #1
 8002740:	9309      	str	r3, [sp, #36]	; 0x24
 8002742:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8002744:	4453      	add	r3, sl
 8002746:	f103 0801 	add.w	r8, r3, #1
 800274a:	9304      	str	r3, [sp, #16]
 800274c:	4643      	mov	r3, r8
 800274e:	2b01      	cmp	r3, #1
 8002750:	bfb8      	it	lt
 8002752:	2301      	movlt	r3, #1
 8002754:	e7ba      	b.n	80026cc <_dtoa_r+0x24c>
 8002756:	2300      	movs	r3, #0
 8002758:	e7b2      	b.n	80026c0 <_dtoa_r+0x240>
 800275a:	2300      	movs	r3, #0
 800275c:	e7f0      	b.n	8002740 <_dtoa_r+0x2c0>
 800275e:	2501      	movs	r5, #1
 8002760:	2300      	movs	r3, #0
 8002762:	931e      	str	r3, [sp, #120]	; 0x78
 8002764:	9509      	str	r5, [sp, #36]	; 0x24
 8002766:	f04f 33ff 	mov.w	r3, #4294967295
 800276a:	9304      	str	r3, [sp, #16]
 800276c:	4698      	mov	r8, r3
 800276e:	2200      	movs	r2, #0
 8002770:	2312      	movs	r3, #18
 8002772:	921f      	str	r2, [sp, #124]	; 0x7c
 8002774:	e7aa      	b.n	80026cc <_dtoa_r+0x24c>
 8002776:	2301      	movs	r3, #1
 8002778:	9309      	str	r3, [sp, #36]	; 0x24
 800277a:	e7f4      	b.n	8002766 <_dtoa_r+0x2e6>
 800277c:	f3af 8000 	nop.w
 8002780:	636f4361 	.word	0x636f4361
 8002784:	3fd287a7 	.word	0x3fd287a7
 8002788:	8b60c8b3 	.word	0x8b60c8b3
 800278c:	3fc68a28 	.word	0x3fc68a28
 8002790:	509f79fb 	.word	0x509f79fb
 8002794:	3fd34413 	.word	0x3fd34413
 8002798:	7ff00000 	.word	0x7ff00000
 800279c:	0800413d 	.word	0x0800413d
 80027a0:	08004134 	.word	0x08004134
 80027a4:	08004111 	.word	0x08004111
 80027a8:	3ff80000 	.word	0x3ff80000
 80027ac:	080041d0 	.word	0x080041d0
 80027b0:	080041a8 	.word	0x080041a8
 80027b4:	2301      	movs	r3, #1
 80027b6:	9304      	str	r3, [sp, #16]
 80027b8:	4698      	mov	r8, r3
 80027ba:	461a      	mov	r2, r3
 80027bc:	e7d9      	b.n	8002772 <_dtoa_r+0x2f2>
 80027be:	3101      	adds	r1, #1
 80027c0:	6071      	str	r1, [r6, #4]
 80027c2:	0052      	lsls	r2, r2, #1
 80027c4:	e786      	b.n	80026d4 <_dtoa_r+0x254>
 80027c6:	07f1      	lsls	r1, r6, #31
 80027c8:	d508      	bpl.n	80027dc <_dtoa_r+0x35c>
 80027ca:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 80027ce:	e9d7 2300 	ldrd	r2, r3, [r7]
 80027d2:	f7fd ff31 	bl	8000638 <__aeabi_dmul>
 80027d6:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
 80027da:	3501      	adds	r5, #1
 80027dc:	1076      	asrs	r6, r6, #1
 80027de:	3708      	adds	r7, #8
 80027e0:	2e00      	cmp	r6, #0
 80027e2:	d1f0      	bne.n	80027c6 <_dtoa_r+0x346>
 80027e4:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 80027e8:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80027ec:	f7fe f84e 	bl	800088c <__aeabi_ddiv>
 80027f0:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80027f4:	e01b      	b.n	800282e <_dtoa_r+0x3ae>
 80027f6:	2502      	movs	r5, #2
 80027f8:	e79f      	b.n	800273a <_dtoa_r+0x2ba>
 80027fa:	f000 80a4 	beq.w	8002946 <_dtoa_r+0x4c6>
 80027fe:	f1ca 0600 	rsb	r6, sl, #0
 8002802:	4ba2      	ldr	r3, [pc, #648]	; (8002a8c <_dtoa_r+0x60c>)
 8002804:	4fa2      	ldr	r7, [pc, #648]	; (8002a90 <_dtoa_r+0x610>)
 8002806:	f006 020f 	and.w	r2, r6, #15
 800280a:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800280e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002812:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
 8002816:	f7fd ff0f 	bl	8000638 <__aeabi_dmul>
 800281a:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800281e:	1136      	asrs	r6, r6, #4
 8002820:	2300      	movs	r3, #0
 8002822:	2502      	movs	r5, #2
 8002824:	2e00      	cmp	r6, #0
 8002826:	f040 8083 	bne.w	8002930 <_dtoa_r+0x4b0>
 800282a:	2b00      	cmp	r3, #0
 800282c:	d1e0      	bne.n	80027f0 <_dtoa_r+0x370>
 800282e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8002830:	2b00      	cmp	r3, #0
 8002832:	f000 808a 	beq.w	800294a <_dtoa_r+0x4ca>
 8002836:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800283a:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
 800283e:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 8002842:	2200      	movs	r2, #0
 8002844:	4b93      	ldr	r3, [pc, #588]	; (8002a94 <_dtoa_r+0x614>)
 8002846:	f7fe f969 	bl	8000b1c <__aeabi_dcmplt>
 800284a:	2800      	cmp	r0, #0
 800284c:	d07d      	beq.n	800294a <_dtoa_r+0x4ca>
 800284e:	f1b8 0f00 	cmp.w	r8, #0
 8002852:	d07a      	beq.n	800294a <_dtoa_r+0x4ca>
 8002854:	9b04      	ldr	r3, [sp, #16]
 8002856:	2b00      	cmp	r3, #0
 8002858:	dd36      	ble.n	80028c8 <_dtoa_r+0x448>
 800285a:	2200      	movs	r2, #0
 800285c:	4b8e      	ldr	r3, [pc, #568]	; (8002a98 <_dtoa_r+0x618>)
 800285e:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 8002862:	f7fd fee9 	bl	8000638 <__aeabi_dmul>
 8002866:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800286a:	9e04      	ldr	r6, [sp, #16]
 800286c:	f10a 37ff 	add.w	r7, sl, #4294967295
 8002870:	3501      	adds	r5, #1
 8002872:	4628      	mov	r0, r5
 8002874:	f7fd fe76 	bl	8000564 <__aeabi_i2d>
 8002878:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800287c:	f7fd fedc 	bl	8000638 <__aeabi_dmul>
 8002880:	2200      	movs	r2, #0
 8002882:	4b86      	ldr	r3, [pc, #536]	; (8002a9c <_dtoa_r+0x61c>)
 8002884:	f7fd fd22 	bl	80002cc <__adddf3>
 8002888:	f1a1 7550 	sub.w	r5, r1, #54525952	; 0x3400000
 800288c:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
 8002890:	950b      	str	r5, [sp, #44]	; 0x2c
 8002892:	2e00      	cmp	r6, #0
 8002894:	d15c      	bne.n	8002950 <_dtoa_r+0x4d0>
 8002896:	2200      	movs	r2, #0
 8002898:	4b81      	ldr	r3, [pc, #516]	; (8002aa0 <_dtoa_r+0x620>)
 800289a:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800289e:	f7fd fd13 	bl	80002c8 <__aeabi_dsub>
 80028a2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80028a4:	462b      	mov	r3, r5
 80028a6:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80028aa:	f7fe f955 	bl	8000b58 <__aeabi_dcmpgt>
 80028ae:	2800      	cmp	r0, #0
 80028b0:	f040 8284 	bne.w	8002dbc <_dtoa_r+0x93c>
 80028b4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80028b6:	f105 4300 	add.w	r3, r5, #2147483648	; 0x80000000
 80028ba:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80028be:	f7fe f92d 	bl	8000b1c <__aeabi_dcmplt>
 80028c2:	2800      	cmp	r0, #0
 80028c4:	f040 8278 	bne.w	8002db8 <_dtoa_r+0x938>
 80028c8:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	; 0x38
 80028cc:	e9cd 2302 	strd	r2, r3, [sp, #8]
 80028d0:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80028d2:	2b00      	cmp	r3, #0
 80028d4:	f2c0 814e 	blt.w	8002b74 <_dtoa_r+0x6f4>
 80028d8:	f1ba 0f0e 	cmp.w	sl, #14
 80028dc:	f300 814a 	bgt.w	8002b74 <_dtoa_r+0x6f4>
 80028e0:	4b6a      	ldr	r3, [pc, #424]	; (8002a8c <_dtoa_r+0x60c>)
 80028e2:	eb03 03ca 	add.w	r3, r3, sl, lsl #3
 80028e6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80028ea:	e9cd 2304 	strd	r2, r3, [sp, #16]
 80028ee:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80028f0:	2b00      	cmp	r3, #0
 80028f2:	f280 80d9 	bge.w	8002aa8 <_dtoa_r+0x628>
 80028f6:	f1b8 0f00 	cmp.w	r8, #0
 80028fa:	f300 80d5 	bgt.w	8002aa8 <_dtoa_r+0x628>
 80028fe:	f040 825a 	bne.w	8002db6 <_dtoa_r+0x936>
 8002902:	2200      	movs	r2, #0
 8002904:	4b66      	ldr	r3, [pc, #408]	; (8002aa0 <_dtoa_r+0x620>)
 8002906:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800290a:	f7fd fe95 	bl	8000638 <__aeabi_dmul>
 800290e:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8002912:	f7fe f917 	bl	8000b44 <__aeabi_dcmpge>
 8002916:	4646      	mov	r6, r8
 8002918:	4647      	mov	r7, r8
 800291a:	2800      	cmp	r0, #0
 800291c:	f040 8230 	bne.w	8002d80 <_dtoa_r+0x900>
 8002920:	9b06      	ldr	r3, [sp, #24]
 8002922:	9a06      	ldr	r2, [sp, #24]
 8002924:	1c5d      	adds	r5, r3, #1
 8002926:	2331      	movs	r3, #49	; 0x31
 8002928:	7013      	strb	r3, [r2, #0]
 800292a:	f10a 0a01 	add.w	sl, sl, #1
 800292e:	e22b      	b.n	8002d88 <_dtoa_r+0x908>
 8002930:	07f2      	lsls	r2, r6, #31
 8002932:	d505      	bpl.n	8002940 <_dtoa_r+0x4c0>
 8002934:	e9d7 2300 	ldrd	r2, r3, [r7]
 8002938:	f7fd fe7e 	bl	8000638 <__aeabi_dmul>
 800293c:	3501      	adds	r5, #1
 800293e:	2301      	movs	r3, #1
 8002940:	1076      	asrs	r6, r6, #1
 8002942:	3708      	adds	r7, #8
 8002944:	e76e      	b.n	8002824 <_dtoa_r+0x3a4>
 8002946:	2502      	movs	r5, #2
 8002948:	e771      	b.n	800282e <_dtoa_r+0x3ae>
 800294a:	4657      	mov	r7, sl
 800294c:	4646      	mov	r6, r8
 800294e:	e790      	b.n	8002872 <_dtoa_r+0x3f2>
 8002950:	4b4e      	ldr	r3, [pc, #312]	; (8002a8c <_dtoa_r+0x60c>)
 8002952:	eb03 03c6 	add.w	r3, r3, r6, lsl #3
 8002956:	e953 0102 	ldrd	r0, r1, [r3, #-8]
 800295a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800295c:	2b00      	cmp	r3, #0
 800295e:	d048      	beq.n	80029f2 <_dtoa_r+0x572>
 8002960:	4602      	mov	r2, r0
 8002962:	460b      	mov	r3, r1
 8002964:	2000      	movs	r0, #0
 8002966:	494f      	ldr	r1, [pc, #316]	; (8002aa4 <_dtoa_r+0x624>)
 8002968:	f7fd ff90 	bl	800088c <__aeabi_ddiv>
 800296c:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 8002970:	f7fd fcaa 	bl	80002c8 <__aeabi_dsub>
 8002974:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
 8002978:	9d06      	ldr	r5, [sp, #24]
 800297a:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800297e:	f7fe f90b 	bl	8000b98 <__aeabi_d2iz>
 8002982:	9011      	str	r0, [sp, #68]	; 0x44
 8002984:	f7fd fdee 	bl	8000564 <__aeabi_i2d>
 8002988:	4602      	mov	r2, r0
 800298a:	460b      	mov	r3, r1
 800298c:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002990:	f7fd fc9a 	bl	80002c8 <__aeabi_dsub>
 8002994:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8002996:	3330      	adds	r3, #48	; 0x30
 8002998:	f805 3b01 	strb.w	r3, [r5], #1
 800299c:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 80029a0:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80029a4:	f7fe f8ba 	bl	8000b1c <__aeabi_dcmplt>
 80029a8:	2800      	cmp	r0, #0
 80029aa:	d164      	bne.n	8002a76 <_dtoa_r+0x5f6>
 80029ac:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80029b0:	2000      	movs	r0, #0
 80029b2:	4938      	ldr	r1, [pc, #224]	; (8002a94 <_dtoa_r+0x614>)
 80029b4:	f7fd fc88 	bl	80002c8 <__aeabi_dsub>
 80029b8:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 80029bc:	f7fe f8ae 	bl	8000b1c <__aeabi_dcmplt>
 80029c0:	2800      	cmp	r0, #0
 80029c2:	f040 80b7 	bne.w	8002b34 <_dtoa_r+0x6b4>
 80029c6:	9b06      	ldr	r3, [sp, #24]
 80029c8:	1aeb      	subs	r3, r5, r3
 80029ca:	429e      	cmp	r6, r3
 80029cc:	f77f af7c 	ble.w	80028c8 <_dtoa_r+0x448>
 80029d0:	2200      	movs	r2, #0
 80029d2:	4b31      	ldr	r3, [pc, #196]	; (8002a98 <_dtoa_r+0x618>)
 80029d4:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 80029d8:	f7fd fe2e 	bl	8000638 <__aeabi_dmul>
 80029dc:	2200      	movs	r2, #0
 80029de:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
 80029e2:	4b2d      	ldr	r3, [pc, #180]	; (8002a98 <_dtoa_r+0x618>)
 80029e4:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80029e8:	f7fd fe26 	bl	8000638 <__aeabi_dmul>
 80029ec:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80029f0:	e7c3      	b.n	800297a <_dtoa_r+0x4fa>
 80029f2:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 80029f6:	f7fd fe1f 	bl	8000638 <__aeabi_dmul>
 80029fa:	9b06      	ldr	r3, [sp, #24]
 80029fc:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
 8002a00:	199d      	adds	r5, r3, r6
 8002a02:	461e      	mov	r6, r3
 8002a04:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002a08:	f7fe f8c6 	bl	8000b98 <__aeabi_d2iz>
 8002a0c:	9011      	str	r0, [sp, #68]	; 0x44
 8002a0e:	f7fd fda9 	bl	8000564 <__aeabi_i2d>
 8002a12:	4602      	mov	r2, r0
 8002a14:	460b      	mov	r3, r1
 8002a16:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002a1a:	f7fd fc55 	bl	80002c8 <__aeabi_dsub>
 8002a1e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8002a20:	3330      	adds	r3, #48	; 0x30
 8002a22:	f806 3b01 	strb.w	r3, [r6], #1
 8002a26:	42ae      	cmp	r6, r5
 8002a28:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8002a2c:	f04f 0200 	mov.w	r2, #0
 8002a30:	d125      	bne.n	8002a7e <_dtoa_r+0x5fe>
 8002a32:	4b1c      	ldr	r3, [pc, #112]	; (8002aa4 <_dtoa_r+0x624>)
 8002a34:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 8002a38:	f7fd fc48 	bl	80002cc <__adddf3>
 8002a3c:	4602      	mov	r2, r0
 8002a3e:	460b      	mov	r3, r1
 8002a40:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002a44:	f7fe f888 	bl	8000b58 <__aeabi_dcmpgt>
 8002a48:	2800      	cmp	r0, #0
 8002a4a:	d173      	bne.n	8002b34 <_dtoa_r+0x6b4>
 8002a4c:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 8002a50:	2000      	movs	r0, #0
 8002a52:	4914      	ldr	r1, [pc, #80]	; (8002aa4 <_dtoa_r+0x624>)
 8002a54:	f7fd fc38 	bl	80002c8 <__aeabi_dsub>
 8002a58:	4602      	mov	r2, r0
 8002a5a:	460b      	mov	r3, r1
 8002a5c:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002a60:	f7fe f85c 	bl	8000b1c <__aeabi_dcmplt>
 8002a64:	2800      	cmp	r0, #0
 8002a66:	f43f af2f 	beq.w	80028c8 <_dtoa_r+0x448>
 8002a6a:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 8002a6e:	2b30      	cmp	r3, #48	; 0x30
 8002a70:	f105 32ff 	add.w	r2, r5, #4294967295
 8002a74:	d001      	beq.n	8002a7a <_dtoa_r+0x5fa>
 8002a76:	46ba      	mov	sl, r7
 8002a78:	e04b      	b.n	8002b12 <_dtoa_r+0x692>
 8002a7a:	4615      	mov	r5, r2
 8002a7c:	e7f5      	b.n	8002a6a <_dtoa_r+0x5ea>
 8002a7e:	4b06      	ldr	r3, [pc, #24]	; (8002a98 <_dtoa_r+0x618>)
 8002a80:	f7fd fdda 	bl	8000638 <__aeabi_dmul>
 8002a84:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8002a88:	e7bc      	b.n	8002a04 <_dtoa_r+0x584>
 8002a8a:	bf00      	nop
 8002a8c:	080041d0 	.word	0x080041d0
 8002a90:	080041a8 	.word	0x080041a8
 8002a94:	3ff00000 	.word	0x3ff00000
 8002a98:	40240000 	.word	0x40240000
 8002a9c:	401c0000 	.word	0x401c0000
 8002aa0:	40140000 	.word	0x40140000
 8002aa4:	3fe00000 	.word	0x3fe00000
 8002aa8:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
 8002aac:	9d06      	ldr	r5, [sp, #24]
 8002aae:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8002ab2:	4630      	mov	r0, r6
 8002ab4:	4639      	mov	r1, r7
 8002ab6:	f7fd fee9 	bl	800088c <__aeabi_ddiv>
 8002aba:	f7fe f86d 	bl	8000b98 <__aeabi_d2iz>
 8002abe:	4681      	mov	r9, r0
 8002ac0:	f7fd fd50 	bl	8000564 <__aeabi_i2d>
 8002ac4:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8002ac8:	f7fd fdb6 	bl	8000638 <__aeabi_dmul>
 8002acc:	4602      	mov	r2, r0
 8002ace:	460b      	mov	r3, r1
 8002ad0:	4630      	mov	r0, r6
 8002ad2:	4639      	mov	r1, r7
 8002ad4:	f109 0630 	add.w	r6, r9, #48	; 0x30
 8002ad8:	f7fd fbf6 	bl	80002c8 <__aeabi_dsub>
 8002adc:	f805 6b01 	strb.w	r6, [r5], #1
 8002ae0:	9e06      	ldr	r6, [sp, #24]
 8002ae2:	1bae      	subs	r6, r5, r6
 8002ae4:	45b0      	cmp	r8, r6
 8002ae6:	4602      	mov	r2, r0
 8002ae8:	460b      	mov	r3, r1
 8002aea:	d136      	bne.n	8002b5a <_dtoa_r+0x6da>
 8002aec:	f7fd fbee 	bl	80002cc <__adddf3>
 8002af0:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8002af4:	4606      	mov	r6, r0
 8002af6:	460f      	mov	r7, r1
 8002af8:	f7fe f82e 	bl	8000b58 <__aeabi_dcmpgt>
 8002afc:	b9c8      	cbnz	r0, 8002b32 <_dtoa_r+0x6b2>
 8002afe:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8002b02:	4630      	mov	r0, r6
 8002b04:	4639      	mov	r1, r7
 8002b06:	f7fd ffff 	bl	8000b08 <__aeabi_dcmpeq>
 8002b0a:	b110      	cbz	r0, 8002b12 <_dtoa_r+0x692>
 8002b0c:	f019 0f01 	tst.w	r9, #1
 8002b10:	d10f      	bne.n	8002b32 <_dtoa_r+0x6b2>
 8002b12:	4659      	mov	r1, fp
 8002b14:	4620      	mov	r0, r4
 8002b16:	f000 fb8c 	bl	8003232 <_Bfree>
 8002b1a:	2300      	movs	r3, #0
 8002b1c:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8002b1e:	702b      	strb	r3, [r5, #0]
 8002b20:	f10a 0301 	add.w	r3, sl, #1
 8002b24:	6013      	str	r3, [r2, #0]
 8002b26:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8002b28:	2b00      	cmp	r3, #0
 8002b2a:	f43f acf1 	beq.w	8002510 <_dtoa_r+0x90>
 8002b2e:	601d      	str	r5, [r3, #0]
 8002b30:	e4ee      	b.n	8002510 <_dtoa_r+0x90>
 8002b32:	4657      	mov	r7, sl
 8002b34:	f815 2c01 	ldrb.w	r2, [r5, #-1]
 8002b38:	2a39      	cmp	r2, #57	; 0x39
 8002b3a:	f105 33ff 	add.w	r3, r5, #4294967295
 8002b3e:	d106      	bne.n	8002b4e <_dtoa_r+0x6ce>
 8002b40:	9a06      	ldr	r2, [sp, #24]
 8002b42:	429a      	cmp	r2, r3
 8002b44:	d107      	bne.n	8002b56 <_dtoa_r+0x6d6>
 8002b46:	2330      	movs	r3, #48	; 0x30
 8002b48:	7013      	strb	r3, [r2, #0]
 8002b4a:	3701      	adds	r7, #1
 8002b4c:	4613      	mov	r3, r2
 8002b4e:	781a      	ldrb	r2, [r3, #0]
 8002b50:	3201      	adds	r2, #1
 8002b52:	701a      	strb	r2, [r3, #0]
 8002b54:	e78f      	b.n	8002a76 <_dtoa_r+0x5f6>
 8002b56:	461d      	mov	r5, r3
 8002b58:	e7ec      	b.n	8002b34 <_dtoa_r+0x6b4>
 8002b5a:	2200      	movs	r2, #0
 8002b5c:	4b99      	ldr	r3, [pc, #612]	; (8002dc4 <_dtoa_r+0x944>)
 8002b5e:	f7fd fd6b 	bl	8000638 <__aeabi_dmul>
 8002b62:	2200      	movs	r2, #0
 8002b64:	2300      	movs	r3, #0
 8002b66:	4606      	mov	r6, r0
 8002b68:	460f      	mov	r7, r1
 8002b6a:	f7fd ffcd 	bl	8000b08 <__aeabi_dcmpeq>
 8002b6e:	2800      	cmp	r0, #0
 8002b70:	d09d      	beq.n	8002aae <_dtoa_r+0x62e>
 8002b72:	e7ce      	b.n	8002b12 <_dtoa_r+0x692>
 8002b74:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8002b76:	2a00      	cmp	r2, #0
 8002b78:	f000 8088 	beq.w	8002c8c <_dtoa_r+0x80c>
 8002b7c:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 8002b7e:	2a01      	cmp	r2, #1
 8002b80:	dc6d      	bgt.n	8002c5e <_dtoa_r+0x7de>
 8002b82:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8002b84:	2a00      	cmp	r2, #0
 8002b86:	d066      	beq.n	8002c56 <_dtoa_r+0x7d6>
 8002b88:	f203 4333 	addw	r3, r3, #1075	; 0x433
 8002b8c:	9e08      	ldr	r6, [sp, #32]
 8002b8e:	464d      	mov	r5, r9
 8002b90:	9a07      	ldr	r2, [sp, #28]
 8002b92:	2101      	movs	r1, #1
 8002b94:	441a      	add	r2, r3
 8002b96:	4620      	mov	r0, r4
 8002b98:	4499      	add	r9, r3
 8002b9a:	9207      	str	r2, [sp, #28]
 8002b9c:	f000 fbe9 	bl	8003372 <__i2b>
 8002ba0:	4607      	mov	r7, r0
 8002ba2:	2d00      	cmp	r5, #0
 8002ba4:	dd0b      	ble.n	8002bbe <_dtoa_r+0x73e>
 8002ba6:	9b07      	ldr	r3, [sp, #28]
 8002ba8:	2b00      	cmp	r3, #0
 8002baa:	dd08      	ble.n	8002bbe <_dtoa_r+0x73e>
 8002bac:	42ab      	cmp	r3, r5
 8002bae:	9a07      	ldr	r2, [sp, #28]
 8002bb0:	bfa8      	it	ge
 8002bb2:	462b      	movge	r3, r5
 8002bb4:	eba9 0903 	sub.w	r9, r9, r3
 8002bb8:	1aed      	subs	r5, r5, r3
 8002bba:	1ad3      	subs	r3, r2, r3
 8002bbc:	9307      	str	r3, [sp, #28]
 8002bbe:	9b08      	ldr	r3, [sp, #32]
 8002bc0:	b1eb      	cbz	r3, 8002bfe <_dtoa_r+0x77e>
 8002bc2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8002bc4:	2b00      	cmp	r3, #0
 8002bc6:	d065      	beq.n	8002c94 <_dtoa_r+0x814>
 8002bc8:	b18e      	cbz	r6, 8002bee <_dtoa_r+0x76e>
 8002bca:	4639      	mov	r1, r7
 8002bcc:	4632      	mov	r2, r6
 8002bce:	4620      	mov	r0, r4
 8002bd0:	f000 fc6e 	bl	80034b0 <__pow5mult>
 8002bd4:	465a      	mov	r2, fp
 8002bd6:	4601      	mov	r1, r0
 8002bd8:	4607      	mov	r7, r0
 8002bda:	4620      	mov	r0, r4
 8002bdc:	f000 fbd2 	bl	8003384 <__multiply>
 8002be0:	4659      	mov	r1, fp
 8002be2:	900a      	str	r0, [sp, #40]	; 0x28
 8002be4:	4620      	mov	r0, r4
 8002be6:	f000 fb24 	bl	8003232 <_Bfree>
 8002bea:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8002bec:	469b      	mov	fp, r3
 8002bee:	9b08      	ldr	r3, [sp, #32]
 8002bf0:	1b9a      	subs	r2, r3, r6
 8002bf2:	d004      	beq.n	8002bfe <_dtoa_r+0x77e>
 8002bf4:	4659      	mov	r1, fp
 8002bf6:	4620      	mov	r0, r4
 8002bf8:	f000 fc5a 	bl	80034b0 <__pow5mult>
 8002bfc:	4683      	mov	fp, r0
 8002bfe:	2101      	movs	r1, #1
 8002c00:	4620      	mov	r0, r4
 8002c02:	f000 fbb6 	bl	8003372 <__i2b>
 8002c06:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8002c08:	4606      	mov	r6, r0
 8002c0a:	2b00      	cmp	r3, #0
 8002c0c:	f000 81c9 	beq.w	8002fa2 <_dtoa_r+0xb22>
 8002c10:	461a      	mov	r2, r3
 8002c12:	4601      	mov	r1, r0
 8002c14:	4620      	mov	r0, r4
 8002c16:	f000 fc4b 	bl	80034b0 <__pow5mult>
 8002c1a:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8002c1c:	2b01      	cmp	r3, #1
 8002c1e:	4606      	mov	r6, r0
 8002c20:	dc3e      	bgt.n	8002ca0 <_dtoa_r+0x820>
 8002c22:	9b02      	ldr	r3, [sp, #8]
 8002c24:	2b00      	cmp	r3, #0
 8002c26:	d137      	bne.n	8002c98 <_dtoa_r+0x818>
 8002c28:	9b03      	ldr	r3, [sp, #12]
 8002c2a:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8002c2e:	2b00      	cmp	r3, #0
 8002c30:	d134      	bne.n	8002c9c <_dtoa_r+0x81c>
 8002c32:	9b03      	ldr	r3, [sp, #12]
 8002c34:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8002c38:	0d1b      	lsrs	r3, r3, #20
 8002c3a:	051b      	lsls	r3, r3, #20
 8002c3c:	b12b      	cbz	r3, 8002c4a <_dtoa_r+0x7ca>
 8002c3e:	9b07      	ldr	r3, [sp, #28]
 8002c40:	3301      	adds	r3, #1
 8002c42:	9307      	str	r3, [sp, #28]
 8002c44:	f109 0901 	add.w	r9, r9, #1
 8002c48:	2301      	movs	r3, #1
 8002c4a:	9308      	str	r3, [sp, #32]
 8002c4c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8002c4e:	2b00      	cmp	r3, #0
 8002c50:	d128      	bne.n	8002ca4 <_dtoa_r+0x824>
 8002c52:	2001      	movs	r0, #1
 8002c54:	e02e      	b.n	8002cb4 <_dtoa_r+0x834>
 8002c56:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8002c58:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
 8002c5c:	e796      	b.n	8002b8c <_dtoa_r+0x70c>
 8002c5e:	9b08      	ldr	r3, [sp, #32]
 8002c60:	f108 36ff 	add.w	r6, r8, #4294967295
 8002c64:	42b3      	cmp	r3, r6
 8002c66:	bfbf      	itttt	lt
 8002c68:	9b08      	ldrlt	r3, [sp, #32]
 8002c6a:	9608      	strlt	r6, [sp, #32]
 8002c6c:	1af2      	sublt	r2, r6, r3
 8002c6e:	9b0c      	ldrlt	r3, [sp, #48]	; 0x30
 8002c70:	bfb7      	itett	lt
 8002c72:	189b      	addlt	r3, r3, r2
 8002c74:	1b9e      	subge	r6, r3, r6
 8002c76:	930c      	strlt	r3, [sp, #48]	; 0x30
 8002c78:	2600      	movlt	r6, #0
 8002c7a:	f1b8 0f00 	cmp.w	r8, #0
 8002c7e:	bfb9      	ittee	lt
 8002c80:	eba9 0508 	sublt.w	r5, r9, r8
 8002c84:	2300      	movlt	r3, #0
 8002c86:	464d      	movge	r5, r9
 8002c88:	4643      	movge	r3, r8
 8002c8a:	e781      	b.n	8002b90 <_dtoa_r+0x710>
 8002c8c:	9e08      	ldr	r6, [sp, #32]
 8002c8e:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8002c90:	464d      	mov	r5, r9
 8002c92:	e786      	b.n	8002ba2 <_dtoa_r+0x722>
 8002c94:	9a08      	ldr	r2, [sp, #32]
 8002c96:	e7ad      	b.n	8002bf4 <_dtoa_r+0x774>
 8002c98:	2300      	movs	r3, #0
 8002c9a:	e7d6      	b.n	8002c4a <_dtoa_r+0x7ca>
 8002c9c:	9b02      	ldr	r3, [sp, #8]
 8002c9e:	e7d4      	b.n	8002c4a <_dtoa_r+0x7ca>
 8002ca0:	2300      	movs	r3, #0
 8002ca2:	9308      	str	r3, [sp, #32]
 8002ca4:	6933      	ldr	r3, [r6, #16]
 8002ca6:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 8002caa:	6918      	ldr	r0, [r3, #16]
 8002cac:	f000 fb13 	bl	80032d6 <__hi0bits>
 8002cb0:	f1c0 0020 	rsb	r0, r0, #32
 8002cb4:	9b07      	ldr	r3, [sp, #28]
 8002cb6:	4418      	add	r0, r3
 8002cb8:	f010 001f 	ands.w	r0, r0, #31
 8002cbc:	d047      	beq.n	8002d4e <_dtoa_r+0x8ce>
 8002cbe:	f1c0 0320 	rsb	r3, r0, #32
 8002cc2:	2b04      	cmp	r3, #4
 8002cc4:	dd3b      	ble.n	8002d3e <_dtoa_r+0x8be>
 8002cc6:	9b07      	ldr	r3, [sp, #28]
 8002cc8:	f1c0 001c 	rsb	r0, r0, #28
 8002ccc:	4481      	add	r9, r0
 8002cce:	4405      	add	r5, r0
 8002cd0:	4403      	add	r3, r0
 8002cd2:	9307      	str	r3, [sp, #28]
 8002cd4:	f1b9 0f00 	cmp.w	r9, #0
 8002cd8:	dd05      	ble.n	8002ce6 <_dtoa_r+0x866>
 8002cda:	4659      	mov	r1, fp
 8002cdc:	464a      	mov	r2, r9
 8002cde:	4620      	mov	r0, r4
 8002ce0:	f000 fc34 	bl	800354c <__lshift>
 8002ce4:	4683      	mov	fp, r0
 8002ce6:	9b07      	ldr	r3, [sp, #28]
 8002ce8:	2b00      	cmp	r3, #0
 8002cea:	dd05      	ble.n	8002cf8 <_dtoa_r+0x878>
 8002cec:	4631      	mov	r1, r6
 8002cee:	461a      	mov	r2, r3
 8002cf0:	4620      	mov	r0, r4
 8002cf2:	f000 fc2b 	bl	800354c <__lshift>
 8002cf6:	4606      	mov	r6, r0
 8002cf8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8002cfa:	b353      	cbz	r3, 8002d52 <_dtoa_r+0x8d2>
 8002cfc:	4631      	mov	r1, r6
 8002cfe:	4658      	mov	r0, fp
 8002d00:	f000 fc78 	bl	80035f4 <__mcmp>
 8002d04:	2800      	cmp	r0, #0
 8002d06:	da24      	bge.n	8002d52 <_dtoa_r+0x8d2>
 8002d08:	2300      	movs	r3, #0
 8002d0a:	4659      	mov	r1, fp
 8002d0c:	220a      	movs	r2, #10
 8002d0e:	4620      	mov	r0, r4
 8002d10:	f000 faa6 	bl	8003260 <__multadd>
 8002d14:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8002d16:	f10a 3aff 	add.w	sl, sl, #4294967295
 8002d1a:	4683      	mov	fp, r0
 8002d1c:	2b00      	cmp	r3, #0
 8002d1e:	f000 8147 	beq.w	8002fb0 <_dtoa_r+0xb30>
 8002d22:	2300      	movs	r3, #0
 8002d24:	4639      	mov	r1, r7
 8002d26:	220a      	movs	r2, #10
 8002d28:	4620      	mov	r0, r4
 8002d2a:	f000 fa99 	bl	8003260 <__multadd>
 8002d2e:	9b04      	ldr	r3, [sp, #16]
 8002d30:	2b00      	cmp	r3, #0
 8002d32:	4607      	mov	r7, r0
 8002d34:	dc4e      	bgt.n	8002dd4 <_dtoa_r+0x954>
 8002d36:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8002d38:	2b02      	cmp	r3, #2
 8002d3a:	dd4b      	ble.n	8002dd4 <_dtoa_r+0x954>
 8002d3c:	e011      	b.n	8002d62 <_dtoa_r+0x8e2>
 8002d3e:	d0c9      	beq.n	8002cd4 <_dtoa_r+0x854>
 8002d40:	9a07      	ldr	r2, [sp, #28]
 8002d42:	331c      	adds	r3, #28
 8002d44:	441a      	add	r2, r3
 8002d46:	4499      	add	r9, r3
 8002d48:	441d      	add	r5, r3
 8002d4a:	4613      	mov	r3, r2
 8002d4c:	e7c1      	b.n	8002cd2 <_dtoa_r+0x852>
 8002d4e:	4603      	mov	r3, r0
 8002d50:	e7f6      	b.n	8002d40 <_dtoa_r+0x8c0>
 8002d52:	f1b8 0f00 	cmp.w	r8, #0
 8002d56:	dc37      	bgt.n	8002dc8 <_dtoa_r+0x948>
 8002d58:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8002d5a:	2b02      	cmp	r3, #2
 8002d5c:	dd34      	ble.n	8002dc8 <_dtoa_r+0x948>
 8002d5e:	f8cd 8010 	str.w	r8, [sp, #16]
 8002d62:	9b04      	ldr	r3, [sp, #16]
 8002d64:	b963      	cbnz	r3, 8002d80 <_dtoa_r+0x900>
 8002d66:	4631      	mov	r1, r6
 8002d68:	2205      	movs	r2, #5
 8002d6a:	4620      	mov	r0, r4
 8002d6c:	f000 fa78 	bl	8003260 <__multadd>
 8002d70:	4601      	mov	r1, r0
 8002d72:	4606      	mov	r6, r0
 8002d74:	4658      	mov	r0, fp
 8002d76:	f000 fc3d 	bl	80035f4 <__mcmp>
 8002d7a:	2800      	cmp	r0, #0
 8002d7c:	f73f add0 	bgt.w	8002920 <_dtoa_r+0x4a0>
 8002d80:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8002d82:	9d06      	ldr	r5, [sp, #24]
 8002d84:	ea6f 0a03 	mvn.w	sl, r3
 8002d88:	f04f 0900 	mov.w	r9, #0
 8002d8c:	4631      	mov	r1, r6
 8002d8e:	4620      	mov	r0, r4
 8002d90:	f000 fa4f 	bl	8003232 <_Bfree>
 8002d94:	2f00      	cmp	r7, #0
 8002d96:	f43f aebc 	beq.w	8002b12 <_dtoa_r+0x692>
 8002d9a:	f1b9 0f00 	cmp.w	r9, #0
 8002d9e:	d005      	beq.n	8002dac <_dtoa_r+0x92c>
 8002da0:	45b9      	cmp	r9, r7
 8002da2:	d003      	beq.n	8002dac <_dtoa_r+0x92c>
 8002da4:	4649      	mov	r1, r9
 8002da6:	4620      	mov	r0, r4
 8002da8:	f000 fa43 	bl	8003232 <_Bfree>
 8002dac:	4639      	mov	r1, r7
 8002dae:	4620      	mov	r0, r4
 8002db0:	f000 fa3f 	bl	8003232 <_Bfree>
 8002db4:	e6ad      	b.n	8002b12 <_dtoa_r+0x692>
 8002db6:	2600      	movs	r6, #0
 8002db8:	4637      	mov	r7, r6
 8002dba:	e7e1      	b.n	8002d80 <_dtoa_r+0x900>
 8002dbc:	46ba      	mov	sl, r7
 8002dbe:	4637      	mov	r7, r6
 8002dc0:	e5ae      	b.n	8002920 <_dtoa_r+0x4a0>
 8002dc2:	bf00      	nop
 8002dc4:	40240000 	.word	0x40240000
 8002dc8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8002dca:	f8cd 8010 	str.w	r8, [sp, #16]
 8002dce:	2b00      	cmp	r3, #0
 8002dd0:	f000 80f5 	beq.w	8002fbe <_dtoa_r+0xb3e>
 8002dd4:	2d00      	cmp	r5, #0
 8002dd6:	dd05      	ble.n	8002de4 <_dtoa_r+0x964>
 8002dd8:	4639      	mov	r1, r7
 8002dda:	462a      	mov	r2, r5
 8002ddc:	4620      	mov	r0, r4
 8002dde:	f000 fbb5 	bl	800354c <__lshift>
 8002de2:	4607      	mov	r7, r0
 8002de4:	9b08      	ldr	r3, [sp, #32]
 8002de6:	2b00      	cmp	r3, #0
 8002de8:	d04c      	beq.n	8002e84 <_dtoa_r+0xa04>
 8002dea:	6879      	ldr	r1, [r7, #4]
 8002dec:	4620      	mov	r0, r4
 8002dee:	f000 f9ec 	bl	80031ca <_Balloc>
 8002df2:	693a      	ldr	r2, [r7, #16]
 8002df4:	3202      	adds	r2, #2
 8002df6:	4605      	mov	r5, r0
 8002df8:	0092      	lsls	r2, r2, #2
 8002dfa:	f107 010c 	add.w	r1, r7, #12
 8002dfe:	300c      	adds	r0, #12
 8002e00:	f000 f9d8 	bl	80031b4 <memcpy>
 8002e04:	2201      	movs	r2, #1
 8002e06:	4629      	mov	r1, r5
 8002e08:	4620      	mov	r0, r4
 8002e0a:	f000 fb9f 	bl	800354c <__lshift>
 8002e0e:	9b06      	ldr	r3, [sp, #24]
 8002e10:	9307      	str	r3, [sp, #28]
 8002e12:	9b02      	ldr	r3, [sp, #8]
 8002e14:	f003 0301 	and.w	r3, r3, #1
 8002e18:	46b9      	mov	r9, r7
 8002e1a:	9308      	str	r3, [sp, #32]
 8002e1c:	4607      	mov	r7, r0
 8002e1e:	4631      	mov	r1, r6
 8002e20:	4658      	mov	r0, fp
 8002e22:	f7ff fa9f 	bl	8002364 <quorem>
 8002e26:	4649      	mov	r1, r9
 8002e28:	4605      	mov	r5, r0
 8002e2a:	f100 0830 	add.w	r8, r0, #48	; 0x30
 8002e2e:	4658      	mov	r0, fp
 8002e30:	f000 fbe0 	bl	80035f4 <__mcmp>
 8002e34:	463a      	mov	r2, r7
 8002e36:	9002      	str	r0, [sp, #8]
 8002e38:	4631      	mov	r1, r6
 8002e3a:	4620      	mov	r0, r4
 8002e3c:	f000 fbf4 	bl	8003628 <__mdiff>
 8002e40:	68c3      	ldr	r3, [r0, #12]
 8002e42:	4602      	mov	r2, r0
 8002e44:	bb03      	cbnz	r3, 8002e88 <_dtoa_r+0xa08>
 8002e46:	4601      	mov	r1, r0
 8002e48:	9009      	str	r0, [sp, #36]	; 0x24
 8002e4a:	4658      	mov	r0, fp
 8002e4c:	f000 fbd2 	bl	80035f4 <__mcmp>
 8002e50:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8002e52:	4603      	mov	r3, r0
 8002e54:	4611      	mov	r1, r2
 8002e56:	4620      	mov	r0, r4
 8002e58:	9309      	str	r3, [sp, #36]	; 0x24
 8002e5a:	f000 f9ea 	bl	8003232 <_Bfree>
 8002e5e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8002e60:	b9a3      	cbnz	r3, 8002e8c <_dtoa_r+0xa0c>
 8002e62:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 8002e64:	b992      	cbnz	r2, 8002e8c <_dtoa_r+0xa0c>
 8002e66:	9a08      	ldr	r2, [sp, #32]
 8002e68:	b982      	cbnz	r2, 8002e8c <_dtoa_r+0xa0c>
 8002e6a:	f1b8 0f39 	cmp.w	r8, #57	; 0x39
 8002e6e:	d029      	beq.n	8002ec4 <_dtoa_r+0xa44>
 8002e70:	9b02      	ldr	r3, [sp, #8]
 8002e72:	2b00      	cmp	r3, #0
 8002e74:	dd01      	ble.n	8002e7a <_dtoa_r+0x9fa>
 8002e76:	f105 0831 	add.w	r8, r5, #49	; 0x31
 8002e7a:	9b07      	ldr	r3, [sp, #28]
 8002e7c:	1c5d      	adds	r5, r3, #1
 8002e7e:	f883 8000 	strb.w	r8, [r3]
 8002e82:	e783      	b.n	8002d8c <_dtoa_r+0x90c>
 8002e84:	4638      	mov	r0, r7
 8002e86:	e7c2      	b.n	8002e0e <_dtoa_r+0x98e>
 8002e88:	2301      	movs	r3, #1
 8002e8a:	e7e3      	b.n	8002e54 <_dtoa_r+0x9d4>
 8002e8c:	9a02      	ldr	r2, [sp, #8]
 8002e8e:	2a00      	cmp	r2, #0
 8002e90:	db04      	blt.n	8002e9c <_dtoa_r+0xa1c>
 8002e92:	d124      	bne.n	8002ede <_dtoa_r+0xa5e>
 8002e94:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 8002e96:	bb12      	cbnz	r2, 8002ede <_dtoa_r+0xa5e>
 8002e98:	9a08      	ldr	r2, [sp, #32]
 8002e9a:	bb02      	cbnz	r2, 8002ede <_dtoa_r+0xa5e>
 8002e9c:	2b00      	cmp	r3, #0
 8002e9e:	ddec      	ble.n	8002e7a <_dtoa_r+0x9fa>
 8002ea0:	4659      	mov	r1, fp
 8002ea2:	2201      	movs	r2, #1
 8002ea4:	4620      	mov	r0, r4
 8002ea6:	f000 fb51 	bl	800354c <__lshift>
 8002eaa:	4631      	mov	r1, r6
 8002eac:	4683      	mov	fp, r0
 8002eae:	f000 fba1 	bl	80035f4 <__mcmp>
 8002eb2:	2800      	cmp	r0, #0
 8002eb4:	dc03      	bgt.n	8002ebe <_dtoa_r+0xa3e>
 8002eb6:	d1e0      	bne.n	8002e7a <_dtoa_r+0x9fa>
 8002eb8:	f018 0f01 	tst.w	r8, #1
 8002ebc:	d0dd      	beq.n	8002e7a <_dtoa_r+0x9fa>
 8002ebe:	f1b8 0f39 	cmp.w	r8, #57	; 0x39
 8002ec2:	d1d8      	bne.n	8002e76 <_dtoa_r+0x9f6>
 8002ec4:	9b07      	ldr	r3, [sp, #28]
 8002ec6:	9a07      	ldr	r2, [sp, #28]
 8002ec8:	1c5d      	adds	r5, r3, #1
 8002eca:	2339      	movs	r3, #57	; 0x39
 8002ecc:	7013      	strb	r3, [r2, #0]
 8002ece:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 8002ed2:	2b39      	cmp	r3, #57	; 0x39
 8002ed4:	f105 32ff 	add.w	r2, r5, #4294967295
 8002ed8:	d04e      	beq.n	8002f78 <_dtoa_r+0xaf8>
 8002eda:	3301      	adds	r3, #1
 8002edc:	e053      	b.n	8002f86 <_dtoa_r+0xb06>
 8002ede:	9a07      	ldr	r2, [sp, #28]
 8002ee0:	2b00      	cmp	r3, #0
 8002ee2:	f102 0501 	add.w	r5, r2, #1
 8002ee6:	dd06      	ble.n	8002ef6 <_dtoa_r+0xa76>
 8002ee8:	f1b8 0f39 	cmp.w	r8, #57	; 0x39
 8002eec:	d0ea      	beq.n	8002ec4 <_dtoa_r+0xa44>
 8002eee:	f108 0801 	add.w	r8, r8, #1
 8002ef2:	9b07      	ldr	r3, [sp, #28]
 8002ef4:	e7c3      	b.n	8002e7e <_dtoa_r+0x9fe>
 8002ef6:	9b06      	ldr	r3, [sp, #24]
 8002ef8:	9a04      	ldr	r2, [sp, #16]
 8002efa:	f805 8c01 	strb.w	r8, [r5, #-1]
 8002efe:	1aeb      	subs	r3, r5, r3
 8002f00:	4293      	cmp	r3, r2
 8002f02:	d021      	beq.n	8002f48 <_dtoa_r+0xac8>
 8002f04:	4659      	mov	r1, fp
 8002f06:	2300      	movs	r3, #0
 8002f08:	220a      	movs	r2, #10
 8002f0a:	4620      	mov	r0, r4
 8002f0c:	f000 f9a8 	bl	8003260 <__multadd>
 8002f10:	45b9      	cmp	r9, r7
 8002f12:	4683      	mov	fp, r0
 8002f14:	f04f 0300 	mov.w	r3, #0
 8002f18:	f04f 020a 	mov.w	r2, #10
 8002f1c:	4649      	mov	r1, r9
 8002f1e:	4620      	mov	r0, r4
 8002f20:	d105      	bne.n	8002f2e <_dtoa_r+0xaae>
 8002f22:	f000 f99d 	bl	8003260 <__multadd>
 8002f26:	4681      	mov	r9, r0
 8002f28:	4607      	mov	r7, r0
 8002f2a:	9507      	str	r5, [sp, #28]
 8002f2c:	e777      	b.n	8002e1e <_dtoa_r+0x99e>
 8002f2e:	f000 f997 	bl	8003260 <__multadd>
 8002f32:	4639      	mov	r1, r7
 8002f34:	4681      	mov	r9, r0
 8002f36:	2300      	movs	r3, #0
 8002f38:	220a      	movs	r2, #10
 8002f3a:	4620      	mov	r0, r4
 8002f3c:	f000 f990 	bl	8003260 <__multadd>
 8002f40:	4607      	mov	r7, r0
 8002f42:	e7f2      	b.n	8002f2a <_dtoa_r+0xaaa>
 8002f44:	f04f 0900 	mov.w	r9, #0
 8002f48:	4659      	mov	r1, fp
 8002f4a:	2201      	movs	r2, #1
 8002f4c:	4620      	mov	r0, r4
 8002f4e:	f000 fafd 	bl	800354c <__lshift>
 8002f52:	4631      	mov	r1, r6
 8002f54:	4683      	mov	fp, r0
 8002f56:	f000 fb4d 	bl	80035f4 <__mcmp>
 8002f5a:	2800      	cmp	r0, #0
 8002f5c:	dcb7      	bgt.n	8002ece <_dtoa_r+0xa4e>
 8002f5e:	d102      	bne.n	8002f66 <_dtoa_r+0xae6>
 8002f60:	f018 0f01 	tst.w	r8, #1
 8002f64:	d1b3      	bne.n	8002ece <_dtoa_r+0xa4e>
 8002f66:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 8002f6a:	2b30      	cmp	r3, #48	; 0x30
 8002f6c:	f105 32ff 	add.w	r2, r5, #4294967295
 8002f70:	f47f af0c 	bne.w	8002d8c <_dtoa_r+0x90c>
 8002f74:	4615      	mov	r5, r2
 8002f76:	e7f6      	b.n	8002f66 <_dtoa_r+0xae6>
 8002f78:	9b06      	ldr	r3, [sp, #24]
 8002f7a:	4293      	cmp	r3, r2
 8002f7c:	d105      	bne.n	8002f8a <_dtoa_r+0xb0a>
 8002f7e:	9a06      	ldr	r2, [sp, #24]
 8002f80:	f10a 0a01 	add.w	sl, sl, #1
 8002f84:	2331      	movs	r3, #49	; 0x31
 8002f86:	7013      	strb	r3, [r2, #0]
 8002f88:	e700      	b.n	8002d8c <_dtoa_r+0x90c>
 8002f8a:	4615      	mov	r5, r2
 8002f8c:	e79f      	b.n	8002ece <_dtoa_r+0xa4e>
 8002f8e:	4b17      	ldr	r3, [pc, #92]	; (8002fec <_dtoa_r+0xb6c>)
 8002f90:	f7ff badb 	b.w	800254a <_dtoa_r+0xca>
 8002f94:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8002f96:	2b00      	cmp	r3, #0
 8002f98:	f47f aab5 	bne.w	8002506 <_dtoa_r+0x86>
 8002f9c:	4b14      	ldr	r3, [pc, #80]	; (8002ff0 <_dtoa_r+0xb70>)
 8002f9e:	f7ff bad4 	b.w	800254a <_dtoa_r+0xca>
 8002fa2:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8002fa4:	2b01      	cmp	r3, #1
 8002fa6:	f77f ae3c 	ble.w	8002c22 <_dtoa_r+0x7a2>
 8002faa:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8002fac:	9308      	str	r3, [sp, #32]
 8002fae:	e650      	b.n	8002c52 <_dtoa_r+0x7d2>
 8002fb0:	9b04      	ldr	r3, [sp, #16]
 8002fb2:	2b00      	cmp	r3, #0
 8002fb4:	dc03      	bgt.n	8002fbe <_dtoa_r+0xb3e>
 8002fb6:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8002fb8:	2b02      	cmp	r3, #2
 8002fba:	f73f aed2 	bgt.w	8002d62 <_dtoa_r+0x8e2>
 8002fbe:	9d06      	ldr	r5, [sp, #24]
 8002fc0:	4631      	mov	r1, r6
 8002fc2:	4658      	mov	r0, fp
 8002fc4:	f7ff f9ce 	bl	8002364 <quorem>
 8002fc8:	f100 0830 	add.w	r8, r0, #48	; 0x30
 8002fcc:	f805 8b01 	strb.w	r8, [r5], #1
 8002fd0:	9b06      	ldr	r3, [sp, #24]
 8002fd2:	9a04      	ldr	r2, [sp, #16]
 8002fd4:	1aeb      	subs	r3, r5, r3
 8002fd6:	429a      	cmp	r2, r3
 8002fd8:	ddb4      	ble.n	8002f44 <_dtoa_r+0xac4>
 8002fda:	4659      	mov	r1, fp
 8002fdc:	2300      	movs	r3, #0
 8002fde:	220a      	movs	r2, #10
 8002fe0:	4620      	mov	r0, r4
 8002fe2:	f000 f93d 	bl	8003260 <__multadd>
 8002fe6:	4683      	mov	fp, r0
 8002fe8:	e7ea      	b.n	8002fc0 <_dtoa_r+0xb40>
 8002fea:	bf00      	nop
 8002fec:	08004110 	.word	0x08004110
 8002ff0:	08004134 	.word	0x08004134

08002ff4 <std>:
 8002ff4:	2300      	movs	r3, #0
 8002ff6:	b510      	push	{r4, lr}
 8002ff8:	4604      	mov	r4, r0
 8002ffa:	e9c0 3300 	strd	r3, r3, [r0]
 8002ffe:	6083      	str	r3, [r0, #8]
 8003000:	8181      	strh	r1, [r0, #12]
 8003002:	6643      	str	r3, [r0, #100]	; 0x64
 8003004:	81c2      	strh	r2, [r0, #14]
 8003006:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800300a:	6183      	str	r3, [r0, #24]
 800300c:	4619      	mov	r1, r3
 800300e:	2208      	movs	r2, #8
 8003010:	305c      	adds	r0, #92	; 0x5c
 8003012:	f7fe fd39 	bl	8001a88 <memset>
 8003016:	4b05      	ldr	r3, [pc, #20]	; (800302c <std+0x38>)
 8003018:	6263      	str	r3, [r4, #36]	; 0x24
 800301a:	4b05      	ldr	r3, [pc, #20]	; (8003030 <std+0x3c>)
 800301c:	62a3      	str	r3, [r4, #40]	; 0x28
 800301e:	4b05      	ldr	r3, [pc, #20]	; (8003034 <std+0x40>)
 8003020:	62e3      	str	r3, [r4, #44]	; 0x2c
 8003022:	4b05      	ldr	r3, [pc, #20]	; (8003038 <std+0x44>)
 8003024:	6224      	str	r4, [r4, #32]
 8003026:	6323      	str	r3, [r4, #48]	; 0x30
 8003028:	bd10      	pop	{r4, pc}
 800302a:	bf00      	nop
 800302c:	08003b89 	.word	0x08003b89
 8003030:	08003bab 	.word	0x08003bab
 8003034:	08003be3 	.word	0x08003be3
 8003038:	08003c07 	.word	0x08003c07

0800303c <_cleanup_r>:
 800303c:	4901      	ldr	r1, [pc, #4]	; (8003044 <_cleanup_r+0x8>)
 800303e:	f000 b885 	b.w	800314c <_fwalk_reent>
 8003042:	bf00      	nop
 8003044:	08003ee1 	.word	0x08003ee1

08003048 <__sfmoreglue>:
 8003048:	b570      	push	{r4, r5, r6, lr}
 800304a:	1e4a      	subs	r2, r1, #1
 800304c:	2568      	movs	r5, #104	; 0x68
 800304e:	4355      	muls	r5, r2
 8003050:	460e      	mov	r6, r1
 8003052:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8003056:	f000 fbef 	bl	8003838 <_malloc_r>
 800305a:	4604      	mov	r4, r0
 800305c:	b140      	cbz	r0, 8003070 <__sfmoreglue+0x28>
 800305e:	2100      	movs	r1, #0
 8003060:	e9c0 1600 	strd	r1, r6, [r0]
 8003064:	300c      	adds	r0, #12
 8003066:	60a0      	str	r0, [r4, #8]
 8003068:	f105 0268 	add.w	r2, r5, #104	; 0x68
 800306c:	f7fe fd0c 	bl	8001a88 <memset>
 8003070:	4620      	mov	r0, r4
 8003072:	bd70      	pop	{r4, r5, r6, pc}

08003074 <__sinit>:
 8003074:	6983      	ldr	r3, [r0, #24]
 8003076:	b510      	push	{r4, lr}
 8003078:	4604      	mov	r4, r0
 800307a:	bb33      	cbnz	r3, 80030ca <__sinit+0x56>
 800307c:	e9c0 3312 	strd	r3, r3, [r0, #72]	; 0x48
 8003080:	6503      	str	r3, [r0, #80]	; 0x50
 8003082:	4b12      	ldr	r3, [pc, #72]	; (80030cc <__sinit+0x58>)
 8003084:	4a12      	ldr	r2, [pc, #72]	; (80030d0 <__sinit+0x5c>)
 8003086:	681b      	ldr	r3, [r3, #0]
 8003088:	6282      	str	r2, [r0, #40]	; 0x28
 800308a:	4298      	cmp	r0, r3
 800308c:	bf04      	itt	eq
 800308e:	2301      	moveq	r3, #1
 8003090:	6183      	streq	r3, [r0, #24]
 8003092:	f000 f81f 	bl	80030d4 <__sfp>
 8003096:	6060      	str	r0, [r4, #4]
 8003098:	4620      	mov	r0, r4
 800309a:	f000 f81b 	bl	80030d4 <__sfp>
 800309e:	60a0      	str	r0, [r4, #8]
 80030a0:	4620      	mov	r0, r4
 80030a2:	f000 f817 	bl	80030d4 <__sfp>
 80030a6:	2200      	movs	r2, #0
 80030a8:	60e0      	str	r0, [r4, #12]
 80030aa:	2104      	movs	r1, #4
 80030ac:	6860      	ldr	r0, [r4, #4]
 80030ae:	f7ff ffa1 	bl	8002ff4 <std>
 80030b2:	2201      	movs	r2, #1
 80030b4:	2109      	movs	r1, #9
 80030b6:	68a0      	ldr	r0, [r4, #8]
 80030b8:	f7ff ff9c 	bl	8002ff4 <std>
 80030bc:	2202      	movs	r2, #2
 80030be:	2112      	movs	r1, #18
 80030c0:	68e0      	ldr	r0, [r4, #12]
 80030c2:	f7ff ff97 	bl	8002ff4 <std>
 80030c6:	2301      	movs	r3, #1
 80030c8:	61a3      	str	r3, [r4, #24]
 80030ca:	bd10      	pop	{r4, pc}
 80030cc:	080040fc 	.word	0x080040fc
 80030d0:	0800303d 	.word	0x0800303d

080030d4 <__sfp>:
 80030d4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80030d6:	4b1b      	ldr	r3, [pc, #108]	; (8003144 <__sfp+0x70>)
 80030d8:	681e      	ldr	r6, [r3, #0]
 80030da:	69b3      	ldr	r3, [r6, #24]
 80030dc:	4607      	mov	r7, r0
 80030de:	b913      	cbnz	r3, 80030e6 <__sfp+0x12>
 80030e0:	4630      	mov	r0, r6
 80030e2:	f7ff ffc7 	bl	8003074 <__sinit>
 80030e6:	3648      	adds	r6, #72	; 0x48
 80030e8:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 80030ec:	3b01      	subs	r3, #1
 80030ee:	d503      	bpl.n	80030f8 <__sfp+0x24>
 80030f0:	6833      	ldr	r3, [r6, #0]
 80030f2:	b133      	cbz	r3, 8003102 <__sfp+0x2e>
 80030f4:	6836      	ldr	r6, [r6, #0]
 80030f6:	e7f7      	b.n	80030e8 <__sfp+0x14>
 80030f8:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 80030fc:	b16d      	cbz	r5, 800311a <__sfp+0x46>
 80030fe:	3468      	adds	r4, #104	; 0x68
 8003100:	e7f4      	b.n	80030ec <__sfp+0x18>
 8003102:	2104      	movs	r1, #4
 8003104:	4638      	mov	r0, r7
 8003106:	f7ff ff9f 	bl	8003048 <__sfmoreglue>
 800310a:	6030      	str	r0, [r6, #0]
 800310c:	2800      	cmp	r0, #0
 800310e:	d1f1      	bne.n	80030f4 <__sfp+0x20>
 8003110:	230c      	movs	r3, #12
 8003112:	603b      	str	r3, [r7, #0]
 8003114:	4604      	mov	r4, r0
 8003116:	4620      	mov	r0, r4
 8003118:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800311a:	4b0b      	ldr	r3, [pc, #44]	; (8003148 <__sfp+0x74>)
 800311c:	6665      	str	r5, [r4, #100]	; 0x64
 800311e:	e9c4 5500 	strd	r5, r5, [r4]
 8003122:	60a5      	str	r5, [r4, #8]
 8003124:	e9c4 3503 	strd	r3, r5, [r4, #12]
 8003128:	e9c4 5505 	strd	r5, r5, [r4, #20]
 800312c:	2208      	movs	r2, #8
 800312e:	4629      	mov	r1, r5
 8003130:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8003134:	f7fe fca8 	bl	8001a88 <memset>
 8003138:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 800313c:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8003140:	e7e9      	b.n	8003116 <__sfp+0x42>
 8003142:	bf00      	nop
 8003144:	080040fc 	.word	0x080040fc
 8003148:	ffff0001 	.word	0xffff0001

0800314c <_fwalk_reent>:
 800314c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8003150:	4680      	mov	r8, r0
 8003152:	4689      	mov	r9, r1
 8003154:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8003158:	2600      	movs	r6, #0
 800315a:	b914      	cbnz	r4, 8003162 <_fwalk_reent+0x16>
 800315c:	4630      	mov	r0, r6
 800315e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8003162:	e9d4 7501 	ldrd	r7, r5, [r4, #4]
 8003166:	3f01      	subs	r7, #1
 8003168:	d501      	bpl.n	800316e <_fwalk_reent+0x22>
 800316a:	6824      	ldr	r4, [r4, #0]
 800316c:	e7f5      	b.n	800315a <_fwalk_reent+0xe>
 800316e:	89ab      	ldrh	r3, [r5, #12]
 8003170:	2b01      	cmp	r3, #1
 8003172:	d907      	bls.n	8003184 <_fwalk_reent+0x38>
 8003174:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8003178:	3301      	adds	r3, #1
 800317a:	d003      	beq.n	8003184 <_fwalk_reent+0x38>
 800317c:	4629      	mov	r1, r5
 800317e:	4640      	mov	r0, r8
 8003180:	47c8      	blx	r9
 8003182:	4306      	orrs	r6, r0
 8003184:	3568      	adds	r5, #104	; 0x68
 8003186:	e7ee      	b.n	8003166 <_fwalk_reent+0x1a>

08003188 <_localeconv_r>:
 8003188:	4b04      	ldr	r3, [pc, #16]	; (800319c <_localeconv_r+0x14>)
 800318a:	681b      	ldr	r3, [r3, #0]
 800318c:	6a18      	ldr	r0, [r3, #32]
 800318e:	4b04      	ldr	r3, [pc, #16]	; (80031a0 <_localeconv_r+0x18>)
 8003190:	2800      	cmp	r0, #0
 8003192:	bf08      	it	eq
 8003194:	4618      	moveq	r0, r3
 8003196:	30f0      	adds	r0, #240	; 0xf0
 8003198:	4770      	bx	lr
 800319a:	bf00      	nop
 800319c:	2000000c 	.word	0x2000000c
 80031a0:	20000070 	.word	0x20000070

080031a4 <malloc>:
 80031a4:	4b02      	ldr	r3, [pc, #8]	; (80031b0 <malloc+0xc>)
 80031a6:	4601      	mov	r1, r0
 80031a8:	6818      	ldr	r0, [r3, #0]
 80031aa:	f000 bb45 	b.w	8003838 <_malloc_r>
 80031ae:	bf00      	nop
 80031b0:	2000000c 	.word	0x2000000c

080031b4 <memcpy>:
 80031b4:	b510      	push	{r4, lr}
 80031b6:	1e43      	subs	r3, r0, #1
 80031b8:	440a      	add	r2, r1
 80031ba:	4291      	cmp	r1, r2
 80031bc:	d100      	bne.n	80031c0 <memcpy+0xc>
 80031be:	bd10      	pop	{r4, pc}
 80031c0:	f811 4b01 	ldrb.w	r4, [r1], #1
 80031c4:	f803 4f01 	strb.w	r4, [r3, #1]!
 80031c8:	e7f7      	b.n	80031ba <memcpy+0x6>

080031ca <_Balloc>:
 80031ca:	b570      	push	{r4, r5, r6, lr}
 80031cc:	6a45      	ldr	r5, [r0, #36]	; 0x24
 80031ce:	4604      	mov	r4, r0
 80031d0:	460e      	mov	r6, r1
 80031d2:	b93d      	cbnz	r5, 80031e4 <_Balloc+0x1a>
 80031d4:	2010      	movs	r0, #16
 80031d6:	f7ff ffe5 	bl	80031a4 <malloc>
 80031da:	6260      	str	r0, [r4, #36]	; 0x24
 80031dc:	e9c0 5501 	strd	r5, r5, [r0, #4]
 80031e0:	6005      	str	r5, [r0, #0]
 80031e2:	60c5      	str	r5, [r0, #12]
 80031e4:	6a65      	ldr	r5, [r4, #36]	; 0x24
 80031e6:	68eb      	ldr	r3, [r5, #12]
 80031e8:	b183      	cbz	r3, 800320c <_Balloc+0x42>
 80031ea:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80031ec:	68db      	ldr	r3, [r3, #12]
 80031ee:	f853 0026 	ldr.w	r0, [r3, r6, lsl #2]
 80031f2:	b9b8      	cbnz	r0, 8003224 <_Balloc+0x5a>
 80031f4:	2101      	movs	r1, #1
 80031f6:	fa01 f506 	lsl.w	r5, r1, r6
 80031fa:	1d6a      	adds	r2, r5, #5
 80031fc:	0092      	lsls	r2, r2, #2
 80031fe:	4620      	mov	r0, r4
 8003200:	f000 fabe 	bl	8003780 <_calloc_r>
 8003204:	b160      	cbz	r0, 8003220 <_Balloc+0x56>
 8003206:	e9c0 6501 	strd	r6, r5, [r0, #4]
 800320a:	e00e      	b.n	800322a <_Balloc+0x60>
 800320c:	2221      	movs	r2, #33	; 0x21
 800320e:	2104      	movs	r1, #4
 8003210:	4620      	mov	r0, r4
 8003212:	f000 fab5 	bl	8003780 <_calloc_r>
 8003216:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8003218:	60e8      	str	r0, [r5, #12]
 800321a:	68db      	ldr	r3, [r3, #12]
 800321c:	2b00      	cmp	r3, #0
 800321e:	d1e4      	bne.n	80031ea <_Balloc+0x20>
 8003220:	2000      	movs	r0, #0
 8003222:	bd70      	pop	{r4, r5, r6, pc}
 8003224:	6802      	ldr	r2, [r0, #0]
 8003226:	f843 2026 	str.w	r2, [r3, r6, lsl #2]
 800322a:	2300      	movs	r3, #0
 800322c:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8003230:	e7f7      	b.n	8003222 <_Balloc+0x58>

08003232 <_Bfree>:
 8003232:	b570      	push	{r4, r5, r6, lr}
 8003234:	6a44      	ldr	r4, [r0, #36]	; 0x24
 8003236:	4606      	mov	r6, r0
 8003238:	460d      	mov	r5, r1
 800323a:	b93c      	cbnz	r4, 800324c <_Bfree+0x1a>
 800323c:	2010      	movs	r0, #16
 800323e:	f7ff ffb1 	bl	80031a4 <malloc>
 8003242:	6270      	str	r0, [r6, #36]	; 0x24
 8003244:	e9c0 4401 	strd	r4, r4, [r0, #4]
 8003248:	6004      	str	r4, [r0, #0]
 800324a:	60c4      	str	r4, [r0, #12]
 800324c:	b13d      	cbz	r5, 800325e <_Bfree+0x2c>
 800324e:	6a73      	ldr	r3, [r6, #36]	; 0x24
 8003250:	686a      	ldr	r2, [r5, #4]
 8003252:	68db      	ldr	r3, [r3, #12]
 8003254:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8003258:	6029      	str	r1, [r5, #0]
 800325a:	f843 5022 	str.w	r5, [r3, r2, lsl #2]
 800325e:	bd70      	pop	{r4, r5, r6, pc}

08003260 <__multadd>:
 8003260:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003264:	690d      	ldr	r5, [r1, #16]
 8003266:	461f      	mov	r7, r3
 8003268:	4606      	mov	r6, r0
 800326a:	460c      	mov	r4, r1
 800326c:	f101 0c14 	add.w	ip, r1, #20
 8003270:	2300      	movs	r3, #0
 8003272:	f8dc 0000 	ldr.w	r0, [ip]
 8003276:	b281      	uxth	r1, r0
 8003278:	fb02 7101 	mla	r1, r2, r1, r7
 800327c:	0c0f      	lsrs	r7, r1, #16
 800327e:	0c00      	lsrs	r0, r0, #16
 8003280:	fb02 7000 	mla	r0, r2, r0, r7
 8003284:	b289      	uxth	r1, r1
 8003286:	3301      	adds	r3, #1
 8003288:	eb01 4100 	add.w	r1, r1, r0, lsl #16
 800328c:	429d      	cmp	r5, r3
 800328e:	ea4f 4710 	mov.w	r7, r0, lsr #16
 8003292:	f84c 1b04 	str.w	r1, [ip], #4
 8003296:	dcec      	bgt.n	8003272 <__multadd+0x12>
 8003298:	b1d7      	cbz	r7, 80032d0 <__multadd+0x70>
 800329a:	68a3      	ldr	r3, [r4, #8]
 800329c:	42ab      	cmp	r3, r5
 800329e:	dc12      	bgt.n	80032c6 <__multadd+0x66>
 80032a0:	6861      	ldr	r1, [r4, #4]
 80032a2:	4630      	mov	r0, r6
 80032a4:	3101      	adds	r1, #1
 80032a6:	f7ff ff90 	bl	80031ca <_Balloc>
 80032aa:	6922      	ldr	r2, [r4, #16]
 80032ac:	3202      	adds	r2, #2
 80032ae:	f104 010c 	add.w	r1, r4, #12
 80032b2:	4680      	mov	r8, r0
 80032b4:	0092      	lsls	r2, r2, #2
 80032b6:	300c      	adds	r0, #12
 80032b8:	f7ff ff7c 	bl	80031b4 <memcpy>
 80032bc:	4621      	mov	r1, r4
 80032be:	4630      	mov	r0, r6
 80032c0:	f7ff ffb7 	bl	8003232 <_Bfree>
 80032c4:	4644      	mov	r4, r8
 80032c6:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 80032ca:	3501      	adds	r5, #1
 80032cc:	615f      	str	r7, [r3, #20]
 80032ce:	6125      	str	r5, [r4, #16]
 80032d0:	4620      	mov	r0, r4
 80032d2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080032d6 <__hi0bits>:
 80032d6:	0c02      	lsrs	r2, r0, #16
 80032d8:	0412      	lsls	r2, r2, #16
 80032da:	4603      	mov	r3, r0
 80032dc:	b9b2      	cbnz	r2, 800330c <__hi0bits+0x36>
 80032de:	0403      	lsls	r3, r0, #16
 80032e0:	2010      	movs	r0, #16
 80032e2:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 80032e6:	bf04      	itt	eq
 80032e8:	021b      	lsleq	r3, r3, #8
 80032ea:	3008      	addeq	r0, #8
 80032ec:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 80032f0:	bf04      	itt	eq
 80032f2:	011b      	lsleq	r3, r3, #4
 80032f4:	3004      	addeq	r0, #4
 80032f6:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 80032fa:	bf04      	itt	eq
 80032fc:	009b      	lsleq	r3, r3, #2
 80032fe:	3002      	addeq	r0, #2
 8003300:	2b00      	cmp	r3, #0
 8003302:	db06      	blt.n	8003312 <__hi0bits+0x3c>
 8003304:	005b      	lsls	r3, r3, #1
 8003306:	d503      	bpl.n	8003310 <__hi0bits+0x3a>
 8003308:	3001      	adds	r0, #1
 800330a:	4770      	bx	lr
 800330c:	2000      	movs	r0, #0
 800330e:	e7e8      	b.n	80032e2 <__hi0bits+0xc>
 8003310:	2020      	movs	r0, #32
 8003312:	4770      	bx	lr

08003314 <__lo0bits>:
 8003314:	6803      	ldr	r3, [r0, #0]
 8003316:	f013 0207 	ands.w	r2, r3, #7
 800331a:	4601      	mov	r1, r0
 800331c:	d00b      	beq.n	8003336 <__lo0bits+0x22>
 800331e:	07da      	lsls	r2, r3, #31
 8003320:	d423      	bmi.n	800336a <__lo0bits+0x56>
 8003322:	0798      	lsls	r0, r3, #30
 8003324:	bf49      	itett	mi
 8003326:	085b      	lsrmi	r3, r3, #1
 8003328:	089b      	lsrpl	r3, r3, #2
 800332a:	2001      	movmi	r0, #1
 800332c:	600b      	strmi	r3, [r1, #0]
 800332e:	bf5c      	itt	pl
 8003330:	600b      	strpl	r3, [r1, #0]
 8003332:	2002      	movpl	r0, #2
 8003334:	4770      	bx	lr
 8003336:	b298      	uxth	r0, r3
 8003338:	b9a8      	cbnz	r0, 8003366 <__lo0bits+0x52>
 800333a:	0c1b      	lsrs	r3, r3, #16
 800333c:	2010      	movs	r0, #16
 800333e:	f013 0fff 	tst.w	r3, #255	; 0xff
 8003342:	bf04      	itt	eq
 8003344:	0a1b      	lsreq	r3, r3, #8
 8003346:	3008      	addeq	r0, #8
 8003348:	071a      	lsls	r2, r3, #28
 800334a:	bf04      	itt	eq
 800334c:	091b      	lsreq	r3, r3, #4
 800334e:	3004      	addeq	r0, #4
 8003350:	079a      	lsls	r2, r3, #30
 8003352:	bf04      	itt	eq
 8003354:	089b      	lsreq	r3, r3, #2
 8003356:	3002      	addeq	r0, #2
 8003358:	07da      	lsls	r2, r3, #31
 800335a:	d402      	bmi.n	8003362 <__lo0bits+0x4e>
 800335c:	085b      	lsrs	r3, r3, #1
 800335e:	d006      	beq.n	800336e <__lo0bits+0x5a>
 8003360:	3001      	adds	r0, #1
 8003362:	600b      	str	r3, [r1, #0]
 8003364:	4770      	bx	lr
 8003366:	4610      	mov	r0, r2
 8003368:	e7e9      	b.n	800333e <__lo0bits+0x2a>
 800336a:	2000      	movs	r0, #0
 800336c:	4770      	bx	lr
 800336e:	2020      	movs	r0, #32
 8003370:	4770      	bx	lr

08003372 <__i2b>:
 8003372:	b510      	push	{r4, lr}
 8003374:	460c      	mov	r4, r1
 8003376:	2101      	movs	r1, #1
 8003378:	f7ff ff27 	bl	80031ca <_Balloc>
 800337c:	2201      	movs	r2, #1
 800337e:	6144      	str	r4, [r0, #20]
 8003380:	6102      	str	r2, [r0, #16]
 8003382:	bd10      	pop	{r4, pc}

08003384 <__multiply>:
 8003384:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003388:	4614      	mov	r4, r2
 800338a:	690a      	ldr	r2, [r1, #16]
 800338c:	6923      	ldr	r3, [r4, #16]
 800338e:	429a      	cmp	r2, r3
 8003390:	bfb8      	it	lt
 8003392:	460b      	movlt	r3, r1
 8003394:	4688      	mov	r8, r1
 8003396:	bfbc      	itt	lt
 8003398:	46a0      	movlt	r8, r4
 800339a:	461c      	movlt	r4, r3
 800339c:	f8d8 7010 	ldr.w	r7, [r8, #16]
 80033a0:	f8d4 9010 	ldr.w	r9, [r4, #16]
 80033a4:	f8d8 3008 	ldr.w	r3, [r8, #8]
 80033a8:	f8d8 1004 	ldr.w	r1, [r8, #4]
 80033ac:	eb07 0609 	add.w	r6, r7, r9
 80033b0:	42b3      	cmp	r3, r6
 80033b2:	bfb8      	it	lt
 80033b4:	3101      	addlt	r1, #1
 80033b6:	f7ff ff08 	bl	80031ca <_Balloc>
 80033ba:	f100 0514 	add.w	r5, r0, #20
 80033be:	eb05 0e86 	add.w	lr, r5, r6, lsl #2
 80033c2:	462b      	mov	r3, r5
 80033c4:	2200      	movs	r2, #0
 80033c6:	4573      	cmp	r3, lr
 80033c8:	d316      	bcc.n	80033f8 <__multiply+0x74>
 80033ca:	f104 0214 	add.w	r2, r4, #20
 80033ce:	f108 0114 	add.w	r1, r8, #20
 80033d2:	eb02 0389 	add.w	r3, r2, r9, lsl #2
 80033d6:	eb01 0787 	add.w	r7, r1, r7, lsl #2
 80033da:	9300      	str	r3, [sp, #0]
 80033dc:	9b00      	ldr	r3, [sp, #0]
 80033de:	9201      	str	r2, [sp, #4]
 80033e0:	4293      	cmp	r3, r2
 80033e2:	d80c      	bhi.n	80033fe <__multiply+0x7a>
 80033e4:	2e00      	cmp	r6, #0
 80033e6:	dd03      	ble.n	80033f0 <__multiply+0x6c>
 80033e8:	f85e 3d04 	ldr.w	r3, [lr, #-4]!
 80033ec:	2b00      	cmp	r3, #0
 80033ee:	d05d      	beq.n	80034ac <__multiply+0x128>
 80033f0:	6106      	str	r6, [r0, #16]
 80033f2:	b003      	add	sp, #12
 80033f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80033f8:	f843 2b04 	str.w	r2, [r3], #4
 80033fc:	e7e3      	b.n	80033c6 <__multiply+0x42>
 80033fe:	f8b2 b000 	ldrh.w	fp, [r2]
 8003402:	f1bb 0f00 	cmp.w	fp, #0
 8003406:	d023      	beq.n	8003450 <__multiply+0xcc>
 8003408:	4689      	mov	r9, r1
 800340a:	46ac      	mov	ip, r5
 800340c:	f04f 0800 	mov.w	r8, #0
 8003410:	f859 4b04 	ldr.w	r4, [r9], #4
 8003414:	f8dc a000 	ldr.w	sl, [ip]
 8003418:	b2a3      	uxth	r3, r4
 800341a:	fa1f fa8a 	uxth.w	sl, sl
 800341e:	fb0b a303 	mla	r3, fp, r3, sl
 8003422:	ea4f 4a14 	mov.w	sl, r4, lsr #16
 8003426:	f8dc 4000 	ldr.w	r4, [ip]
 800342a:	4443      	add	r3, r8
 800342c:	ea4f 4814 	mov.w	r8, r4, lsr #16
 8003430:	fb0b 840a 	mla	r4, fp, sl, r8
 8003434:	eb04 4413 	add.w	r4, r4, r3, lsr #16
 8003438:	46e2      	mov	sl, ip
 800343a:	b29b      	uxth	r3, r3
 800343c:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 8003440:	454f      	cmp	r7, r9
 8003442:	ea4f 4814 	mov.w	r8, r4, lsr #16
 8003446:	f84a 3b04 	str.w	r3, [sl], #4
 800344a:	d82b      	bhi.n	80034a4 <__multiply+0x120>
 800344c:	f8cc 8004 	str.w	r8, [ip, #4]
 8003450:	9b01      	ldr	r3, [sp, #4]
 8003452:	f8b3 a002 	ldrh.w	sl, [r3, #2]
 8003456:	3204      	adds	r2, #4
 8003458:	f1ba 0f00 	cmp.w	sl, #0
 800345c:	d020      	beq.n	80034a0 <__multiply+0x11c>
 800345e:	682b      	ldr	r3, [r5, #0]
 8003460:	4689      	mov	r9, r1
 8003462:	46a8      	mov	r8, r5
 8003464:	f04f 0b00 	mov.w	fp, #0
 8003468:	f8b9 c000 	ldrh.w	ip, [r9]
 800346c:	f8b8 4002 	ldrh.w	r4, [r8, #2]
 8003470:	fb0a 440c 	mla	r4, sl, ip, r4
 8003474:	445c      	add	r4, fp
 8003476:	46c4      	mov	ip, r8
 8003478:	b29b      	uxth	r3, r3
 800347a:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 800347e:	f84c 3b04 	str.w	r3, [ip], #4
 8003482:	f859 3b04 	ldr.w	r3, [r9], #4
 8003486:	f8b8 b004 	ldrh.w	fp, [r8, #4]
 800348a:	0c1b      	lsrs	r3, r3, #16
 800348c:	fb0a b303 	mla	r3, sl, r3, fp
 8003490:	eb03 4314 	add.w	r3, r3, r4, lsr #16
 8003494:	454f      	cmp	r7, r9
 8003496:	ea4f 4b13 	mov.w	fp, r3, lsr #16
 800349a:	d805      	bhi.n	80034a8 <__multiply+0x124>
 800349c:	f8c8 3004 	str.w	r3, [r8, #4]
 80034a0:	3504      	adds	r5, #4
 80034a2:	e79b      	b.n	80033dc <__multiply+0x58>
 80034a4:	46d4      	mov	ip, sl
 80034a6:	e7b3      	b.n	8003410 <__multiply+0x8c>
 80034a8:	46e0      	mov	r8, ip
 80034aa:	e7dd      	b.n	8003468 <__multiply+0xe4>
 80034ac:	3e01      	subs	r6, #1
 80034ae:	e799      	b.n	80033e4 <__multiply+0x60>

080034b0 <__pow5mult>:
 80034b0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80034b4:	4615      	mov	r5, r2
 80034b6:	f012 0203 	ands.w	r2, r2, #3
 80034ba:	4606      	mov	r6, r0
 80034bc:	460f      	mov	r7, r1
 80034be:	d007      	beq.n	80034d0 <__pow5mult+0x20>
 80034c0:	3a01      	subs	r2, #1
 80034c2:	4c21      	ldr	r4, [pc, #132]	; (8003548 <__pow5mult+0x98>)
 80034c4:	2300      	movs	r3, #0
 80034c6:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 80034ca:	f7ff fec9 	bl	8003260 <__multadd>
 80034ce:	4607      	mov	r7, r0
 80034d0:	10ad      	asrs	r5, r5, #2
 80034d2:	d035      	beq.n	8003540 <__pow5mult+0x90>
 80034d4:	6a74      	ldr	r4, [r6, #36]	; 0x24
 80034d6:	b93c      	cbnz	r4, 80034e8 <__pow5mult+0x38>
 80034d8:	2010      	movs	r0, #16
 80034da:	f7ff fe63 	bl	80031a4 <malloc>
 80034de:	6270      	str	r0, [r6, #36]	; 0x24
 80034e0:	e9c0 4401 	strd	r4, r4, [r0, #4]
 80034e4:	6004      	str	r4, [r0, #0]
 80034e6:	60c4      	str	r4, [r0, #12]
 80034e8:	f8d6 8024 	ldr.w	r8, [r6, #36]	; 0x24
 80034ec:	f8d8 4008 	ldr.w	r4, [r8, #8]
 80034f0:	b94c      	cbnz	r4, 8003506 <__pow5mult+0x56>
 80034f2:	f240 2171 	movw	r1, #625	; 0x271
 80034f6:	4630      	mov	r0, r6
 80034f8:	f7ff ff3b 	bl	8003372 <__i2b>
 80034fc:	2300      	movs	r3, #0
 80034fe:	f8c8 0008 	str.w	r0, [r8, #8]
 8003502:	4604      	mov	r4, r0
 8003504:	6003      	str	r3, [r0, #0]
 8003506:	f04f 0800 	mov.w	r8, #0
 800350a:	07eb      	lsls	r3, r5, #31
 800350c:	d50a      	bpl.n	8003524 <__pow5mult+0x74>
 800350e:	4639      	mov	r1, r7
 8003510:	4622      	mov	r2, r4
 8003512:	4630      	mov	r0, r6
 8003514:	f7ff ff36 	bl	8003384 <__multiply>
 8003518:	4639      	mov	r1, r7
 800351a:	4681      	mov	r9, r0
 800351c:	4630      	mov	r0, r6
 800351e:	f7ff fe88 	bl	8003232 <_Bfree>
 8003522:	464f      	mov	r7, r9
 8003524:	106d      	asrs	r5, r5, #1
 8003526:	d00b      	beq.n	8003540 <__pow5mult+0x90>
 8003528:	6820      	ldr	r0, [r4, #0]
 800352a:	b938      	cbnz	r0, 800353c <__pow5mult+0x8c>
 800352c:	4622      	mov	r2, r4
 800352e:	4621      	mov	r1, r4
 8003530:	4630      	mov	r0, r6
 8003532:	f7ff ff27 	bl	8003384 <__multiply>
 8003536:	6020      	str	r0, [r4, #0]
 8003538:	f8c0 8000 	str.w	r8, [r0]
 800353c:	4604      	mov	r4, r0
 800353e:	e7e4      	b.n	800350a <__pow5mult+0x5a>
 8003540:	4638      	mov	r0, r7
 8003542:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8003546:	bf00      	nop
 8003548:	08004298 	.word	0x08004298

0800354c <__lshift>:
 800354c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003550:	460c      	mov	r4, r1
 8003552:	ea4f 1a62 	mov.w	sl, r2, asr #5
 8003556:	6923      	ldr	r3, [r4, #16]
 8003558:	6849      	ldr	r1, [r1, #4]
 800355a:	eb0a 0903 	add.w	r9, sl, r3
 800355e:	68a3      	ldr	r3, [r4, #8]
 8003560:	4607      	mov	r7, r0
 8003562:	4616      	mov	r6, r2
 8003564:	f109 0501 	add.w	r5, r9, #1
 8003568:	42ab      	cmp	r3, r5
 800356a:	db32      	blt.n	80035d2 <__lshift+0x86>
 800356c:	4638      	mov	r0, r7
 800356e:	f7ff fe2c 	bl	80031ca <_Balloc>
 8003572:	2300      	movs	r3, #0
 8003574:	4680      	mov	r8, r0
 8003576:	f100 0114 	add.w	r1, r0, #20
 800357a:	461a      	mov	r2, r3
 800357c:	4553      	cmp	r3, sl
 800357e:	db2b      	blt.n	80035d8 <__lshift+0x8c>
 8003580:	6920      	ldr	r0, [r4, #16]
 8003582:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 8003586:	f104 0314 	add.w	r3, r4, #20
 800358a:	f016 021f 	ands.w	r2, r6, #31
 800358e:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 8003592:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 8003596:	d025      	beq.n	80035e4 <__lshift+0x98>
 8003598:	f1c2 0e20 	rsb	lr, r2, #32
 800359c:	2000      	movs	r0, #0
 800359e:	681e      	ldr	r6, [r3, #0]
 80035a0:	468a      	mov	sl, r1
 80035a2:	4096      	lsls	r6, r2
 80035a4:	4330      	orrs	r0, r6
 80035a6:	f84a 0b04 	str.w	r0, [sl], #4
 80035aa:	f853 0b04 	ldr.w	r0, [r3], #4
 80035ae:	459c      	cmp	ip, r3
 80035b0:	fa20 f00e 	lsr.w	r0, r0, lr
 80035b4:	d814      	bhi.n	80035e0 <__lshift+0x94>
 80035b6:	6048      	str	r0, [r1, #4]
 80035b8:	b108      	cbz	r0, 80035be <__lshift+0x72>
 80035ba:	f109 0502 	add.w	r5, r9, #2
 80035be:	3d01      	subs	r5, #1
 80035c0:	4638      	mov	r0, r7
 80035c2:	f8c8 5010 	str.w	r5, [r8, #16]
 80035c6:	4621      	mov	r1, r4
 80035c8:	f7ff fe33 	bl	8003232 <_Bfree>
 80035cc:	4640      	mov	r0, r8
 80035ce:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80035d2:	3101      	adds	r1, #1
 80035d4:	005b      	lsls	r3, r3, #1
 80035d6:	e7c7      	b.n	8003568 <__lshift+0x1c>
 80035d8:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 80035dc:	3301      	adds	r3, #1
 80035de:	e7cd      	b.n	800357c <__lshift+0x30>
 80035e0:	4651      	mov	r1, sl
 80035e2:	e7dc      	b.n	800359e <__lshift+0x52>
 80035e4:	3904      	subs	r1, #4
 80035e6:	f853 2b04 	ldr.w	r2, [r3], #4
 80035ea:	f841 2f04 	str.w	r2, [r1, #4]!
 80035ee:	459c      	cmp	ip, r3
 80035f0:	d8f9      	bhi.n	80035e6 <__lshift+0x9a>
 80035f2:	e7e4      	b.n	80035be <__lshift+0x72>

080035f4 <__mcmp>:
 80035f4:	6903      	ldr	r3, [r0, #16]
 80035f6:	690a      	ldr	r2, [r1, #16]
 80035f8:	1a9b      	subs	r3, r3, r2
 80035fa:	b530      	push	{r4, r5, lr}
 80035fc:	d10c      	bne.n	8003618 <__mcmp+0x24>
 80035fe:	0092      	lsls	r2, r2, #2
 8003600:	3014      	adds	r0, #20
 8003602:	3114      	adds	r1, #20
 8003604:	1884      	adds	r4, r0, r2
 8003606:	4411      	add	r1, r2
 8003608:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 800360c:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 8003610:	4295      	cmp	r5, r2
 8003612:	d003      	beq.n	800361c <__mcmp+0x28>
 8003614:	d305      	bcc.n	8003622 <__mcmp+0x2e>
 8003616:	2301      	movs	r3, #1
 8003618:	4618      	mov	r0, r3
 800361a:	bd30      	pop	{r4, r5, pc}
 800361c:	42a0      	cmp	r0, r4
 800361e:	d3f3      	bcc.n	8003608 <__mcmp+0x14>
 8003620:	e7fa      	b.n	8003618 <__mcmp+0x24>
 8003622:	f04f 33ff 	mov.w	r3, #4294967295
 8003626:	e7f7      	b.n	8003618 <__mcmp+0x24>

08003628 <__mdiff>:
 8003628:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800362c:	460d      	mov	r5, r1
 800362e:	4607      	mov	r7, r0
 8003630:	4611      	mov	r1, r2
 8003632:	4628      	mov	r0, r5
 8003634:	4614      	mov	r4, r2
 8003636:	f7ff ffdd 	bl	80035f4 <__mcmp>
 800363a:	1e06      	subs	r6, r0, #0
 800363c:	d108      	bne.n	8003650 <__mdiff+0x28>
 800363e:	4631      	mov	r1, r6
 8003640:	4638      	mov	r0, r7
 8003642:	f7ff fdc2 	bl	80031ca <_Balloc>
 8003646:	2301      	movs	r3, #1
 8003648:	e9c0 3604 	strd	r3, r6, [r0, #16]
 800364c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003650:	bfa4      	itt	ge
 8003652:	4623      	movge	r3, r4
 8003654:	462c      	movge	r4, r5
 8003656:	4638      	mov	r0, r7
 8003658:	6861      	ldr	r1, [r4, #4]
 800365a:	bfa6      	itte	ge
 800365c:	461d      	movge	r5, r3
 800365e:	2600      	movge	r6, #0
 8003660:	2601      	movlt	r6, #1
 8003662:	f7ff fdb2 	bl	80031ca <_Balloc>
 8003666:	692b      	ldr	r3, [r5, #16]
 8003668:	60c6      	str	r6, [r0, #12]
 800366a:	6926      	ldr	r6, [r4, #16]
 800366c:	f105 0914 	add.w	r9, r5, #20
 8003670:	f104 0214 	add.w	r2, r4, #20
 8003674:	eb02 0786 	add.w	r7, r2, r6, lsl #2
 8003678:	eb09 0883 	add.w	r8, r9, r3, lsl #2
 800367c:	f100 0514 	add.w	r5, r0, #20
 8003680:	f04f 0e00 	mov.w	lr, #0
 8003684:	f852 ab04 	ldr.w	sl, [r2], #4
 8003688:	f859 4b04 	ldr.w	r4, [r9], #4
 800368c:	fa1e f18a 	uxtah	r1, lr, sl
 8003690:	b2a3      	uxth	r3, r4
 8003692:	1ac9      	subs	r1, r1, r3
 8003694:	0c23      	lsrs	r3, r4, #16
 8003696:	ebc3 431a 	rsb	r3, r3, sl, lsr #16
 800369a:	eb03 4321 	add.w	r3, r3, r1, asr #16
 800369e:	b289      	uxth	r1, r1
 80036a0:	ea4f 4e23 	mov.w	lr, r3, asr #16
 80036a4:	45c8      	cmp	r8, r9
 80036a6:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
 80036aa:	4694      	mov	ip, r2
 80036ac:	f845 3b04 	str.w	r3, [r5], #4
 80036b0:	d8e8      	bhi.n	8003684 <__mdiff+0x5c>
 80036b2:	45bc      	cmp	ip, r7
 80036b4:	d304      	bcc.n	80036c0 <__mdiff+0x98>
 80036b6:	f855 3d04 	ldr.w	r3, [r5, #-4]!
 80036ba:	b183      	cbz	r3, 80036de <__mdiff+0xb6>
 80036bc:	6106      	str	r6, [r0, #16]
 80036be:	e7c5      	b.n	800364c <__mdiff+0x24>
 80036c0:	f85c 1b04 	ldr.w	r1, [ip], #4
 80036c4:	fa1e f381 	uxtah	r3, lr, r1
 80036c8:	141a      	asrs	r2, r3, #16
 80036ca:	eb02 4211 	add.w	r2, r2, r1, lsr #16
 80036ce:	b29b      	uxth	r3, r3
 80036d0:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80036d4:	ea4f 4e22 	mov.w	lr, r2, asr #16
 80036d8:	f845 3b04 	str.w	r3, [r5], #4
 80036dc:	e7e9      	b.n	80036b2 <__mdiff+0x8a>
 80036de:	3e01      	subs	r6, #1
 80036e0:	e7e9      	b.n	80036b6 <__mdiff+0x8e>

080036e2 <__d2b>:
 80036e2:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80036e6:	2101      	movs	r1, #1
 80036e8:	461c      	mov	r4, r3
 80036ea:	4690      	mov	r8, r2
 80036ec:	e9dd 6508 	ldrd	r6, r5, [sp, #32]
 80036f0:	f7ff fd6b 	bl	80031ca <_Balloc>
 80036f4:	f3c4 0213 	ubfx	r2, r4, #0, #20
 80036f8:	f3c4 540a 	ubfx	r4, r4, #20, #11
 80036fc:	4607      	mov	r7, r0
 80036fe:	bb34      	cbnz	r4, 800374e <__d2b+0x6c>
 8003700:	9201      	str	r2, [sp, #4]
 8003702:	f1b8 0200 	subs.w	r2, r8, #0
 8003706:	d027      	beq.n	8003758 <__d2b+0x76>
 8003708:	a802      	add	r0, sp, #8
 800370a:	f840 2d08 	str.w	r2, [r0, #-8]!
 800370e:	f7ff fe01 	bl	8003314 <__lo0bits>
 8003712:	9900      	ldr	r1, [sp, #0]
 8003714:	b1f0      	cbz	r0, 8003754 <__d2b+0x72>
 8003716:	9a01      	ldr	r2, [sp, #4]
 8003718:	f1c0 0320 	rsb	r3, r0, #32
 800371c:	fa02 f303 	lsl.w	r3, r2, r3
 8003720:	430b      	orrs	r3, r1
 8003722:	40c2      	lsrs	r2, r0
 8003724:	617b      	str	r3, [r7, #20]
 8003726:	9201      	str	r2, [sp, #4]
 8003728:	9b01      	ldr	r3, [sp, #4]
 800372a:	61bb      	str	r3, [r7, #24]
 800372c:	2b00      	cmp	r3, #0
 800372e:	bf14      	ite	ne
 8003730:	2102      	movne	r1, #2
 8003732:	2101      	moveq	r1, #1
 8003734:	6139      	str	r1, [r7, #16]
 8003736:	b1c4      	cbz	r4, 800376a <__d2b+0x88>
 8003738:	f2a4 4433 	subw	r4, r4, #1075	; 0x433
 800373c:	4404      	add	r4, r0
 800373e:	6034      	str	r4, [r6, #0]
 8003740:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 8003744:	6028      	str	r0, [r5, #0]
 8003746:	4638      	mov	r0, r7
 8003748:	b002      	add	sp, #8
 800374a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800374e:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 8003752:	e7d5      	b.n	8003700 <__d2b+0x1e>
 8003754:	6179      	str	r1, [r7, #20]
 8003756:	e7e7      	b.n	8003728 <__d2b+0x46>
 8003758:	a801      	add	r0, sp, #4
 800375a:	f7ff fddb 	bl	8003314 <__lo0bits>
 800375e:	9b01      	ldr	r3, [sp, #4]
 8003760:	617b      	str	r3, [r7, #20]
 8003762:	2101      	movs	r1, #1
 8003764:	6139      	str	r1, [r7, #16]
 8003766:	3020      	adds	r0, #32
 8003768:	e7e5      	b.n	8003736 <__d2b+0x54>
 800376a:	eb07 0381 	add.w	r3, r7, r1, lsl #2
 800376e:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 8003772:	6030      	str	r0, [r6, #0]
 8003774:	6918      	ldr	r0, [r3, #16]
 8003776:	f7ff fdae 	bl	80032d6 <__hi0bits>
 800377a:	ebc0 1041 	rsb	r0, r0, r1, lsl #5
 800377e:	e7e1      	b.n	8003744 <__d2b+0x62>

08003780 <_calloc_r>:
 8003780:	b538      	push	{r3, r4, r5, lr}
 8003782:	fb02 f401 	mul.w	r4, r2, r1
 8003786:	4621      	mov	r1, r4
 8003788:	f000 f856 	bl	8003838 <_malloc_r>
 800378c:	4605      	mov	r5, r0
 800378e:	b118      	cbz	r0, 8003798 <_calloc_r+0x18>
 8003790:	4622      	mov	r2, r4
 8003792:	2100      	movs	r1, #0
 8003794:	f7fe f978 	bl	8001a88 <memset>
 8003798:	4628      	mov	r0, r5
 800379a:	bd38      	pop	{r3, r4, r5, pc}

0800379c <_free_r>:
 800379c:	b538      	push	{r3, r4, r5, lr}
 800379e:	4605      	mov	r5, r0
 80037a0:	2900      	cmp	r1, #0
 80037a2:	d045      	beq.n	8003830 <_free_r+0x94>
 80037a4:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80037a8:	1f0c      	subs	r4, r1, #4
 80037aa:	2b00      	cmp	r3, #0
 80037ac:	bfb8      	it	lt
 80037ae:	18e4      	addlt	r4, r4, r3
 80037b0:	f000 fc48 	bl	8004044 <__malloc_lock>
 80037b4:	4a1f      	ldr	r2, [pc, #124]	; (8003834 <_free_r+0x98>)
 80037b6:	6813      	ldr	r3, [r2, #0]
 80037b8:	4610      	mov	r0, r2
 80037ba:	b933      	cbnz	r3, 80037ca <_free_r+0x2e>
 80037bc:	6063      	str	r3, [r4, #4]
 80037be:	6014      	str	r4, [r2, #0]
 80037c0:	4628      	mov	r0, r5
 80037c2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80037c6:	f000 bc3e 	b.w	8004046 <__malloc_unlock>
 80037ca:	42a3      	cmp	r3, r4
 80037cc:	d90c      	bls.n	80037e8 <_free_r+0x4c>
 80037ce:	6821      	ldr	r1, [r4, #0]
 80037d0:	1862      	adds	r2, r4, r1
 80037d2:	4293      	cmp	r3, r2
 80037d4:	bf04      	itt	eq
 80037d6:	681a      	ldreq	r2, [r3, #0]
 80037d8:	685b      	ldreq	r3, [r3, #4]
 80037da:	6063      	str	r3, [r4, #4]
 80037dc:	bf04      	itt	eq
 80037de:	1852      	addeq	r2, r2, r1
 80037e0:	6022      	streq	r2, [r4, #0]
 80037e2:	6004      	str	r4, [r0, #0]
 80037e4:	e7ec      	b.n	80037c0 <_free_r+0x24>
 80037e6:	4613      	mov	r3, r2
 80037e8:	685a      	ldr	r2, [r3, #4]
 80037ea:	b10a      	cbz	r2, 80037f0 <_free_r+0x54>
 80037ec:	42a2      	cmp	r2, r4
 80037ee:	d9fa      	bls.n	80037e6 <_free_r+0x4a>
 80037f0:	6819      	ldr	r1, [r3, #0]
 80037f2:	1858      	adds	r0, r3, r1
 80037f4:	42a0      	cmp	r0, r4
 80037f6:	d10b      	bne.n	8003810 <_free_r+0x74>
 80037f8:	6820      	ldr	r0, [r4, #0]
 80037fa:	4401      	add	r1, r0
 80037fc:	1858      	adds	r0, r3, r1
 80037fe:	4282      	cmp	r2, r0
 8003800:	6019      	str	r1, [r3, #0]
 8003802:	d1dd      	bne.n	80037c0 <_free_r+0x24>
 8003804:	6810      	ldr	r0, [r2, #0]
 8003806:	6852      	ldr	r2, [r2, #4]
 8003808:	605a      	str	r2, [r3, #4]
 800380a:	4401      	add	r1, r0
 800380c:	6019      	str	r1, [r3, #0]
 800380e:	e7d7      	b.n	80037c0 <_free_r+0x24>
 8003810:	d902      	bls.n	8003818 <_free_r+0x7c>
 8003812:	230c      	movs	r3, #12
 8003814:	602b      	str	r3, [r5, #0]
 8003816:	e7d3      	b.n	80037c0 <_free_r+0x24>
 8003818:	6820      	ldr	r0, [r4, #0]
 800381a:	1821      	adds	r1, r4, r0
 800381c:	428a      	cmp	r2, r1
 800381e:	bf04      	itt	eq
 8003820:	6811      	ldreq	r1, [r2, #0]
 8003822:	6852      	ldreq	r2, [r2, #4]
 8003824:	6062      	str	r2, [r4, #4]
 8003826:	bf04      	itt	eq
 8003828:	1809      	addeq	r1, r1, r0
 800382a:	6021      	streq	r1, [r4, #0]
 800382c:	605c      	str	r4, [r3, #4]
 800382e:	e7c7      	b.n	80037c0 <_free_r+0x24>
 8003830:	bd38      	pop	{r3, r4, r5, pc}
 8003832:	bf00      	nop
 8003834:	200001fc 	.word	0x200001fc

08003838 <_malloc_r>:
 8003838:	b570      	push	{r4, r5, r6, lr}
 800383a:	1ccd      	adds	r5, r1, #3
 800383c:	f025 0503 	bic.w	r5, r5, #3
 8003840:	3508      	adds	r5, #8
 8003842:	2d0c      	cmp	r5, #12
 8003844:	bf38      	it	cc
 8003846:	250c      	movcc	r5, #12
 8003848:	2d00      	cmp	r5, #0
 800384a:	4606      	mov	r6, r0
 800384c:	db01      	blt.n	8003852 <_malloc_r+0x1a>
 800384e:	42a9      	cmp	r1, r5
 8003850:	d903      	bls.n	800385a <_malloc_r+0x22>
 8003852:	230c      	movs	r3, #12
 8003854:	6033      	str	r3, [r6, #0]
 8003856:	2000      	movs	r0, #0
 8003858:	bd70      	pop	{r4, r5, r6, pc}
 800385a:	f000 fbf3 	bl	8004044 <__malloc_lock>
 800385e:	4a21      	ldr	r2, [pc, #132]	; (80038e4 <_malloc_r+0xac>)
 8003860:	6814      	ldr	r4, [r2, #0]
 8003862:	4621      	mov	r1, r4
 8003864:	b991      	cbnz	r1, 800388c <_malloc_r+0x54>
 8003866:	4c20      	ldr	r4, [pc, #128]	; (80038e8 <_malloc_r+0xb0>)
 8003868:	6823      	ldr	r3, [r4, #0]
 800386a:	b91b      	cbnz	r3, 8003874 <_malloc_r+0x3c>
 800386c:	4630      	mov	r0, r6
 800386e:	f000 f97b 	bl	8003b68 <_sbrk_r>
 8003872:	6020      	str	r0, [r4, #0]
 8003874:	4629      	mov	r1, r5
 8003876:	4630      	mov	r0, r6
 8003878:	f000 f976 	bl	8003b68 <_sbrk_r>
 800387c:	1c43      	adds	r3, r0, #1
 800387e:	d124      	bne.n	80038ca <_malloc_r+0x92>
 8003880:	230c      	movs	r3, #12
 8003882:	6033      	str	r3, [r6, #0]
 8003884:	4630      	mov	r0, r6
 8003886:	f000 fbde 	bl	8004046 <__malloc_unlock>
 800388a:	e7e4      	b.n	8003856 <_malloc_r+0x1e>
 800388c:	680b      	ldr	r3, [r1, #0]
 800388e:	1b5b      	subs	r3, r3, r5
 8003890:	d418      	bmi.n	80038c4 <_malloc_r+0x8c>
 8003892:	2b0b      	cmp	r3, #11
 8003894:	d90f      	bls.n	80038b6 <_malloc_r+0x7e>
 8003896:	600b      	str	r3, [r1, #0]
 8003898:	50cd      	str	r5, [r1, r3]
 800389a:	18cc      	adds	r4, r1, r3
 800389c:	4630      	mov	r0, r6
 800389e:	f000 fbd2 	bl	8004046 <__malloc_unlock>
 80038a2:	f104 000b 	add.w	r0, r4, #11
 80038a6:	1d23      	adds	r3, r4, #4
 80038a8:	f020 0007 	bic.w	r0, r0, #7
 80038ac:	1ac3      	subs	r3, r0, r3
 80038ae:	d0d3      	beq.n	8003858 <_malloc_r+0x20>
 80038b0:	425a      	negs	r2, r3
 80038b2:	50e2      	str	r2, [r4, r3]
 80038b4:	e7d0      	b.n	8003858 <_malloc_r+0x20>
 80038b6:	428c      	cmp	r4, r1
 80038b8:	684b      	ldr	r3, [r1, #4]
 80038ba:	bf16      	itet	ne
 80038bc:	6063      	strne	r3, [r4, #4]
 80038be:	6013      	streq	r3, [r2, #0]
 80038c0:	460c      	movne	r4, r1
 80038c2:	e7eb      	b.n	800389c <_malloc_r+0x64>
 80038c4:	460c      	mov	r4, r1
 80038c6:	6849      	ldr	r1, [r1, #4]
 80038c8:	e7cc      	b.n	8003864 <_malloc_r+0x2c>
 80038ca:	1cc4      	adds	r4, r0, #3
 80038cc:	f024 0403 	bic.w	r4, r4, #3
 80038d0:	42a0      	cmp	r0, r4
 80038d2:	d005      	beq.n	80038e0 <_malloc_r+0xa8>
 80038d4:	1a21      	subs	r1, r4, r0
 80038d6:	4630      	mov	r0, r6
 80038d8:	f000 f946 	bl	8003b68 <_sbrk_r>
 80038dc:	3001      	adds	r0, #1
 80038de:	d0cf      	beq.n	8003880 <_malloc_r+0x48>
 80038e0:	6025      	str	r5, [r4, #0]
 80038e2:	e7db      	b.n	800389c <_malloc_r+0x64>
 80038e4:	200001fc 	.word	0x200001fc
 80038e8:	20000200 	.word	0x20000200

080038ec <__sfputc_r>:
 80038ec:	6893      	ldr	r3, [r2, #8]
 80038ee:	3b01      	subs	r3, #1
 80038f0:	2b00      	cmp	r3, #0
 80038f2:	b410      	push	{r4}
 80038f4:	6093      	str	r3, [r2, #8]
 80038f6:	da07      	bge.n	8003908 <__sfputc_r+0x1c>
 80038f8:	6994      	ldr	r4, [r2, #24]
 80038fa:	42a3      	cmp	r3, r4
 80038fc:	db01      	blt.n	8003902 <__sfputc_r+0x16>
 80038fe:	290a      	cmp	r1, #10
 8003900:	d102      	bne.n	8003908 <__sfputc_r+0x1c>
 8003902:	bc10      	pop	{r4}
 8003904:	f000 b984 	b.w	8003c10 <__swbuf_r>
 8003908:	6813      	ldr	r3, [r2, #0]
 800390a:	1c58      	adds	r0, r3, #1
 800390c:	6010      	str	r0, [r2, #0]
 800390e:	7019      	strb	r1, [r3, #0]
 8003910:	4608      	mov	r0, r1
 8003912:	bc10      	pop	{r4}
 8003914:	4770      	bx	lr

08003916 <__sfputs_r>:
 8003916:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003918:	4606      	mov	r6, r0
 800391a:	460f      	mov	r7, r1
 800391c:	4614      	mov	r4, r2
 800391e:	18d5      	adds	r5, r2, r3
 8003920:	42ac      	cmp	r4, r5
 8003922:	d101      	bne.n	8003928 <__sfputs_r+0x12>
 8003924:	2000      	movs	r0, #0
 8003926:	e007      	b.n	8003938 <__sfputs_r+0x22>
 8003928:	463a      	mov	r2, r7
 800392a:	f814 1b01 	ldrb.w	r1, [r4], #1
 800392e:	4630      	mov	r0, r6
 8003930:	f7ff ffdc 	bl	80038ec <__sfputc_r>
 8003934:	1c43      	adds	r3, r0, #1
 8003936:	d1f3      	bne.n	8003920 <__sfputs_r+0xa>
 8003938:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0800393c <_vfiprintf_r>:
 800393c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003940:	460c      	mov	r4, r1
 8003942:	b09d      	sub	sp, #116	; 0x74
 8003944:	4617      	mov	r7, r2
 8003946:	461d      	mov	r5, r3
 8003948:	4606      	mov	r6, r0
 800394a:	b118      	cbz	r0, 8003954 <_vfiprintf_r+0x18>
 800394c:	6983      	ldr	r3, [r0, #24]
 800394e:	b90b      	cbnz	r3, 8003954 <_vfiprintf_r+0x18>
 8003950:	f7ff fb90 	bl	8003074 <__sinit>
 8003954:	4b7c      	ldr	r3, [pc, #496]	; (8003b48 <_vfiprintf_r+0x20c>)
 8003956:	429c      	cmp	r4, r3
 8003958:	d158      	bne.n	8003a0c <_vfiprintf_r+0xd0>
 800395a:	6874      	ldr	r4, [r6, #4]
 800395c:	89a3      	ldrh	r3, [r4, #12]
 800395e:	0718      	lsls	r0, r3, #28
 8003960:	d55e      	bpl.n	8003a20 <_vfiprintf_r+0xe4>
 8003962:	6923      	ldr	r3, [r4, #16]
 8003964:	2b00      	cmp	r3, #0
 8003966:	d05b      	beq.n	8003a20 <_vfiprintf_r+0xe4>
 8003968:	2300      	movs	r3, #0
 800396a:	9309      	str	r3, [sp, #36]	; 0x24
 800396c:	2320      	movs	r3, #32
 800396e:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8003972:	2330      	movs	r3, #48	; 0x30
 8003974:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8003978:	9503      	str	r5, [sp, #12]
 800397a:	f04f 0b01 	mov.w	fp, #1
 800397e:	46b8      	mov	r8, r7
 8003980:	4645      	mov	r5, r8
 8003982:	f815 3b01 	ldrb.w	r3, [r5], #1
 8003986:	b10b      	cbz	r3, 800398c <_vfiprintf_r+0x50>
 8003988:	2b25      	cmp	r3, #37	; 0x25
 800398a:	d154      	bne.n	8003a36 <_vfiprintf_r+0xfa>
 800398c:	ebb8 0a07 	subs.w	sl, r8, r7
 8003990:	d00b      	beq.n	80039aa <_vfiprintf_r+0x6e>
 8003992:	4653      	mov	r3, sl
 8003994:	463a      	mov	r2, r7
 8003996:	4621      	mov	r1, r4
 8003998:	4630      	mov	r0, r6
 800399a:	f7ff ffbc 	bl	8003916 <__sfputs_r>
 800399e:	3001      	adds	r0, #1
 80039a0:	f000 80c2 	beq.w	8003b28 <_vfiprintf_r+0x1ec>
 80039a4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80039a6:	4453      	add	r3, sl
 80039a8:	9309      	str	r3, [sp, #36]	; 0x24
 80039aa:	f898 3000 	ldrb.w	r3, [r8]
 80039ae:	2b00      	cmp	r3, #0
 80039b0:	f000 80ba 	beq.w	8003b28 <_vfiprintf_r+0x1ec>
 80039b4:	2300      	movs	r3, #0
 80039b6:	f04f 32ff 	mov.w	r2, #4294967295
 80039ba:	e9cd 2305 	strd	r2, r3, [sp, #20]
 80039be:	9304      	str	r3, [sp, #16]
 80039c0:	9307      	str	r3, [sp, #28]
 80039c2:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 80039c6:	931a      	str	r3, [sp, #104]	; 0x68
 80039c8:	46a8      	mov	r8, r5
 80039ca:	2205      	movs	r2, #5
 80039cc:	f818 1b01 	ldrb.w	r1, [r8], #1
 80039d0:	485e      	ldr	r0, [pc, #376]	; (8003b4c <_vfiprintf_r+0x210>)
 80039d2:	f7fc fc25 	bl	8000220 <memchr>
 80039d6:	9b04      	ldr	r3, [sp, #16]
 80039d8:	bb78      	cbnz	r0, 8003a3a <_vfiprintf_r+0xfe>
 80039da:	06d9      	lsls	r1, r3, #27
 80039dc:	bf44      	itt	mi
 80039de:	2220      	movmi	r2, #32
 80039e0:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 80039e4:	071a      	lsls	r2, r3, #28
 80039e6:	bf44      	itt	mi
 80039e8:	222b      	movmi	r2, #43	; 0x2b
 80039ea:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 80039ee:	782a      	ldrb	r2, [r5, #0]
 80039f0:	2a2a      	cmp	r2, #42	; 0x2a
 80039f2:	d02a      	beq.n	8003a4a <_vfiprintf_r+0x10e>
 80039f4:	9a07      	ldr	r2, [sp, #28]
 80039f6:	46a8      	mov	r8, r5
 80039f8:	2000      	movs	r0, #0
 80039fa:	250a      	movs	r5, #10
 80039fc:	4641      	mov	r1, r8
 80039fe:	f811 3b01 	ldrb.w	r3, [r1], #1
 8003a02:	3b30      	subs	r3, #48	; 0x30
 8003a04:	2b09      	cmp	r3, #9
 8003a06:	d969      	bls.n	8003adc <_vfiprintf_r+0x1a0>
 8003a08:	b360      	cbz	r0, 8003a64 <_vfiprintf_r+0x128>
 8003a0a:	e024      	b.n	8003a56 <_vfiprintf_r+0x11a>
 8003a0c:	4b50      	ldr	r3, [pc, #320]	; (8003b50 <_vfiprintf_r+0x214>)
 8003a0e:	429c      	cmp	r4, r3
 8003a10:	d101      	bne.n	8003a16 <_vfiprintf_r+0xda>
 8003a12:	68b4      	ldr	r4, [r6, #8]
 8003a14:	e7a2      	b.n	800395c <_vfiprintf_r+0x20>
 8003a16:	4b4f      	ldr	r3, [pc, #316]	; (8003b54 <_vfiprintf_r+0x218>)
 8003a18:	429c      	cmp	r4, r3
 8003a1a:	bf08      	it	eq
 8003a1c:	68f4      	ldreq	r4, [r6, #12]
 8003a1e:	e79d      	b.n	800395c <_vfiprintf_r+0x20>
 8003a20:	4621      	mov	r1, r4
 8003a22:	4630      	mov	r0, r6
 8003a24:	f000 f958 	bl	8003cd8 <__swsetup_r>
 8003a28:	2800      	cmp	r0, #0
 8003a2a:	d09d      	beq.n	8003968 <_vfiprintf_r+0x2c>
 8003a2c:	f04f 30ff 	mov.w	r0, #4294967295
 8003a30:	b01d      	add	sp, #116	; 0x74
 8003a32:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003a36:	46a8      	mov	r8, r5
 8003a38:	e7a2      	b.n	8003980 <_vfiprintf_r+0x44>
 8003a3a:	4a44      	ldr	r2, [pc, #272]	; (8003b4c <_vfiprintf_r+0x210>)
 8003a3c:	1a80      	subs	r0, r0, r2
 8003a3e:	fa0b f000 	lsl.w	r0, fp, r0
 8003a42:	4318      	orrs	r0, r3
 8003a44:	9004      	str	r0, [sp, #16]
 8003a46:	4645      	mov	r5, r8
 8003a48:	e7be      	b.n	80039c8 <_vfiprintf_r+0x8c>
 8003a4a:	9a03      	ldr	r2, [sp, #12]
 8003a4c:	1d11      	adds	r1, r2, #4
 8003a4e:	6812      	ldr	r2, [r2, #0]
 8003a50:	9103      	str	r1, [sp, #12]
 8003a52:	2a00      	cmp	r2, #0
 8003a54:	db01      	blt.n	8003a5a <_vfiprintf_r+0x11e>
 8003a56:	9207      	str	r2, [sp, #28]
 8003a58:	e004      	b.n	8003a64 <_vfiprintf_r+0x128>
 8003a5a:	4252      	negs	r2, r2
 8003a5c:	f043 0302 	orr.w	r3, r3, #2
 8003a60:	9207      	str	r2, [sp, #28]
 8003a62:	9304      	str	r3, [sp, #16]
 8003a64:	f898 3000 	ldrb.w	r3, [r8]
 8003a68:	2b2e      	cmp	r3, #46	; 0x2e
 8003a6a:	d10e      	bne.n	8003a8a <_vfiprintf_r+0x14e>
 8003a6c:	f898 3001 	ldrb.w	r3, [r8, #1]
 8003a70:	2b2a      	cmp	r3, #42	; 0x2a
 8003a72:	d138      	bne.n	8003ae6 <_vfiprintf_r+0x1aa>
 8003a74:	9b03      	ldr	r3, [sp, #12]
 8003a76:	1d1a      	adds	r2, r3, #4
 8003a78:	681b      	ldr	r3, [r3, #0]
 8003a7a:	9203      	str	r2, [sp, #12]
 8003a7c:	2b00      	cmp	r3, #0
 8003a7e:	bfb8      	it	lt
 8003a80:	f04f 33ff 	movlt.w	r3, #4294967295
 8003a84:	f108 0802 	add.w	r8, r8, #2
 8003a88:	9305      	str	r3, [sp, #20]
 8003a8a:	4d33      	ldr	r5, [pc, #204]	; (8003b58 <_vfiprintf_r+0x21c>)
 8003a8c:	f898 1000 	ldrb.w	r1, [r8]
 8003a90:	2203      	movs	r2, #3
 8003a92:	4628      	mov	r0, r5
 8003a94:	f7fc fbc4 	bl	8000220 <memchr>
 8003a98:	b140      	cbz	r0, 8003aac <_vfiprintf_r+0x170>
 8003a9a:	2340      	movs	r3, #64	; 0x40
 8003a9c:	1b40      	subs	r0, r0, r5
 8003a9e:	fa03 f000 	lsl.w	r0, r3, r0
 8003aa2:	9b04      	ldr	r3, [sp, #16]
 8003aa4:	4303      	orrs	r3, r0
 8003aa6:	f108 0801 	add.w	r8, r8, #1
 8003aaa:	9304      	str	r3, [sp, #16]
 8003aac:	f898 1000 	ldrb.w	r1, [r8]
 8003ab0:	482a      	ldr	r0, [pc, #168]	; (8003b5c <_vfiprintf_r+0x220>)
 8003ab2:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8003ab6:	2206      	movs	r2, #6
 8003ab8:	f108 0701 	add.w	r7, r8, #1
 8003abc:	f7fc fbb0 	bl	8000220 <memchr>
 8003ac0:	2800      	cmp	r0, #0
 8003ac2:	d037      	beq.n	8003b34 <_vfiprintf_r+0x1f8>
 8003ac4:	4b26      	ldr	r3, [pc, #152]	; (8003b60 <_vfiprintf_r+0x224>)
 8003ac6:	bb1b      	cbnz	r3, 8003b10 <_vfiprintf_r+0x1d4>
 8003ac8:	9b03      	ldr	r3, [sp, #12]
 8003aca:	3307      	adds	r3, #7
 8003acc:	f023 0307 	bic.w	r3, r3, #7
 8003ad0:	3308      	adds	r3, #8
 8003ad2:	9303      	str	r3, [sp, #12]
 8003ad4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003ad6:	444b      	add	r3, r9
 8003ad8:	9309      	str	r3, [sp, #36]	; 0x24
 8003ada:	e750      	b.n	800397e <_vfiprintf_r+0x42>
 8003adc:	fb05 3202 	mla	r2, r5, r2, r3
 8003ae0:	2001      	movs	r0, #1
 8003ae2:	4688      	mov	r8, r1
 8003ae4:	e78a      	b.n	80039fc <_vfiprintf_r+0xc0>
 8003ae6:	2300      	movs	r3, #0
 8003ae8:	f108 0801 	add.w	r8, r8, #1
 8003aec:	9305      	str	r3, [sp, #20]
 8003aee:	4619      	mov	r1, r3
 8003af0:	250a      	movs	r5, #10
 8003af2:	4640      	mov	r0, r8
 8003af4:	f810 2b01 	ldrb.w	r2, [r0], #1
 8003af8:	3a30      	subs	r2, #48	; 0x30
 8003afa:	2a09      	cmp	r2, #9
 8003afc:	d903      	bls.n	8003b06 <_vfiprintf_r+0x1ca>
 8003afe:	2b00      	cmp	r3, #0
 8003b00:	d0c3      	beq.n	8003a8a <_vfiprintf_r+0x14e>
 8003b02:	9105      	str	r1, [sp, #20]
 8003b04:	e7c1      	b.n	8003a8a <_vfiprintf_r+0x14e>
 8003b06:	fb05 2101 	mla	r1, r5, r1, r2
 8003b0a:	2301      	movs	r3, #1
 8003b0c:	4680      	mov	r8, r0
 8003b0e:	e7f0      	b.n	8003af2 <_vfiprintf_r+0x1b6>
 8003b10:	ab03      	add	r3, sp, #12
 8003b12:	9300      	str	r3, [sp, #0]
 8003b14:	4622      	mov	r2, r4
 8003b16:	4b13      	ldr	r3, [pc, #76]	; (8003b64 <_vfiprintf_r+0x228>)
 8003b18:	a904      	add	r1, sp, #16
 8003b1a:	4630      	mov	r0, r6
 8003b1c:	f7fe f84c 	bl	8001bb8 <_printf_float>
 8003b20:	f1b0 3fff 	cmp.w	r0, #4294967295
 8003b24:	4681      	mov	r9, r0
 8003b26:	d1d5      	bne.n	8003ad4 <_vfiprintf_r+0x198>
 8003b28:	89a3      	ldrh	r3, [r4, #12]
 8003b2a:	065b      	lsls	r3, r3, #25
 8003b2c:	f53f af7e 	bmi.w	8003a2c <_vfiprintf_r+0xf0>
 8003b30:	9809      	ldr	r0, [sp, #36]	; 0x24
 8003b32:	e77d      	b.n	8003a30 <_vfiprintf_r+0xf4>
 8003b34:	ab03      	add	r3, sp, #12
 8003b36:	9300      	str	r3, [sp, #0]
 8003b38:	4622      	mov	r2, r4
 8003b3a:	4b0a      	ldr	r3, [pc, #40]	; (8003b64 <_vfiprintf_r+0x228>)
 8003b3c:	a904      	add	r1, sp, #16
 8003b3e:	4630      	mov	r0, r6
 8003b40:	f7fe fae6 	bl	8002110 <_printf_i>
 8003b44:	e7ec      	b.n	8003b20 <_vfiprintf_r+0x1e4>
 8003b46:	bf00      	nop
 8003b48:	08004164 	.word	0x08004164
 8003b4c:	080042a4 	.word	0x080042a4
 8003b50:	08004184 	.word	0x08004184
 8003b54:	08004144 	.word	0x08004144
 8003b58:	080042aa 	.word	0x080042aa
 8003b5c:	080042ae 	.word	0x080042ae
 8003b60:	08001bb9 	.word	0x08001bb9
 8003b64:	08003917 	.word	0x08003917

08003b68 <_sbrk_r>:
 8003b68:	b538      	push	{r3, r4, r5, lr}
 8003b6a:	4c06      	ldr	r4, [pc, #24]	; (8003b84 <_sbrk_r+0x1c>)
 8003b6c:	2300      	movs	r3, #0
 8003b6e:	4605      	mov	r5, r0
 8003b70:	4608      	mov	r0, r1
 8003b72:	6023      	str	r3, [r4, #0]
 8003b74:	f7fd fc92 	bl	800149c <_sbrk>
 8003b78:	1c43      	adds	r3, r0, #1
 8003b7a:	d102      	bne.n	8003b82 <_sbrk_r+0x1a>
 8003b7c:	6823      	ldr	r3, [r4, #0]
 8003b7e:	b103      	cbz	r3, 8003b82 <_sbrk_r+0x1a>
 8003b80:	602b      	str	r3, [r5, #0]
 8003b82:	bd38      	pop	{r3, r4, r5, pc}
 8003b84:	20000248 	.word	0x20000248

08003b88 <__sread>:
 8003b88:	b510      	push	{r4, lr}
 8003b8a:	460c      	mov	r4, r1
 8003b8c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8003b90:	f000 fa5a 	bl	8004048 <_read_r>
 8003b94:	2800      	cmp	r0, #0
 8003b96:	bfab      	itete	ge
 8003b98:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8003b9a:	89a3      	ldrhlt	r3, [r4, #12]
 8003b9c:	181b      	addge	r3, r3, r0
 8003b9e:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8003ba2:	bfac      	ite	ge
 8003ba4:	6563      	strge	r3, [r4, #84]	; 0x54
 8003ba6:	81a3      	strhlt	r3, [r4, #12]
 8003ba8:	bd10      	pop	{r4, pc}

08003baa <__swrite>:
 8003baa:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003bae:	461f      	mov	r7, r3
 8003bb0:	898b      	ldrh	r3, [r1, #12]
 8003bb2:	05db      	lsls	r3, r3, #23
 8003bb4:	4605      	mov	r5, r0
 8003bb6:	460c      	mov	r4, r1
 8003bb8:	4616      	mov	r6, r2
 8003bba:	d505      	bpl.n	8003bc8 <__swrite+0x1e>
 8003bbc:	2302      	movs	r3, #2
 8003bbe:	2200      	movs	r2, #0
 8003bc0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8003bc4:	f000 f9b6 	bl	8003f34 <_lseek_r>
 8003bc8:	89a3      	ldrh	r3, [r4, #12]
 8003bca:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8003bce:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8003bd2:	81a3      	strh	r3, [r4, #12]
 8003bd4:	4632      	mov	r2, r6
 8003bd6:	463b      	mov	r3, r7
 8003bd8:	4628      	mov	r0, r5
 8003bda:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8003bde:	f000 b869 	b.w	8003cb4 <_write_r>

08003be2 <__sseek>:
 8003be2:	b510      	push	{r4, lr}
 8003be4:	460c      	mov	r4, r1
 8003be6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8003bea:	f000 f9a3 	bl	8003f34 <_lseek_r>
 8003bee:	1c43      	adds	r3, r0, #1
 8003bf0:	89a3      	ldrh	r3, [r4, #12]
 8003bf2:	bf15      	itete	ne
 8003bf4:	6560      	strne	r0, [r4, #84]	; 0x54
 8003bf6:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8003bfa:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8003bfe:	81a3      	strheq	r3, [r4, #12]
 8003c00:	bf18      	it	ne
 8003c02:	81a3      	strhne	r3, [r4, #12]
 8003c04:	bd10      	pop	{r4, pc}

08003c06 <__sclose>:
 8003c06:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8003c0a:	f000 b8d3 	b.w	8003db4 <_close_r>
	...

08003c10 <__swbuf_r>:
 8003c10:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003c12:	460e      	mov	r6, r1
 8003c14:	4614      	mov	r4, r2
 8003c16:	4605      	mov	r5, r0
 8003c18:	b118      	cbz	r0, 8003c22 <__swbuf_r+0x12>
 8003c1a:	6983      	ldr	r3, [r0, #24]
 8003c1c:	b90b      	cbnz	r3, 8003c22 <__swbuf_r+0x12>
 8003c1e:	f7ff fa29 	bl	8003074 <__sinit>
 8003c22:	4b21      	ldr	r3, [pc, #132]	; (8003ca8 <__swbuf_r+0x98>)
 8003c24:	429c      	cmp	r4, r3
 8003c26:	d12a      	bne.n	8003c7e <__swbuf_r+0x6e>
 8003c28:	686c      	ldr	r4, [r5, #4]
 8003c2a:	69a3      	ldr	r3, [r4, #24]
 8003c2c:	60a3      	str	r3, [r4, #8]
 8003c2e:	89a3      	ldrh	r3, [r4, #12]
 8003c30:	071a      	lsls	r2, r3, #28
 8003c32:	d52e      	bpl.n	8003c92 <__swbuf_r+0x82>
 8003c34:	6923      	ldr	r3, [r4, #16]
 8003c36:	b363      	cbz	r3, 8003c92 <__swbuf_r+0x82>
 8003c38:	6923      	ldr	r3, [r4, #16]
 8003c3a:	6820      	ldr	r0, [r4, #0]
 8003c3c:	1ac0      	subs	r0, r0, r3
 8003c3e:	6963      	ldr	r3, [r4, #20]
 8003c40:	b2f6      	uxtb	r6, r6
 8003c42:	4283      	cmp	r3, r0
 8003c44:	4637      	mov	r7, r6
 8003c46:	dc04      	bgt.n	8003c52 <__swbuf_r+0x42>
 8003c48:	4621      	mov	r1, r4
 8003c4a:	4628      	mov	r0, r5
 8003c4c:	f000 f948 	bl	8003ee0 <_fflush_r>
 8003c50:	bb28      	cbnz	r0, 8003c9e <__swbuf_r+0x8e>
 8003c52:	68a3      	ldr	r3, [r4, #8]
 8003c54:	3b01      	subs	r3, #1
 8003c56:	60a3      	str	r3, [r4, #8]
 8003c58:	6823      	ldr	r3, [r4, #0]
 8003c5a:	1c5a      	adds	r2, r3, #1
 8003c5c:	6022      	str	r2, [r4, #0]
 8003c5e:	701e      	strb	r6, [r3, #0]
 8003c60:	6963      	ldr	r3, [r4, #20]
 8003c62:	3001      	adds	r0, #1
 8003c64:	4283      	cmp	r3, r0
 8003c66:	d004      	beq.n	8003c72 <__swbuf_r+0x62>
 8003c68:	89a3      	ldrh	r3, [r4, #12]
 8003c6a:	07db      	lsls	r3, r3, #31
 8003c6c:	d519      	bpl.n	8003ca2 <__swbuf_r+0x92>
 8003c6e:	2e0a      	cmp	r6, #10
 8003c70:	d117      	bne.n	8003ca2 <__swbuf_r+0x92>
 8003c72:	4621      	mov	r1, r4
 8003c74:	4628      	mov	r0, r5
 8003c76:	f000 f933 	bl	8003ee0 <_fflush_r>
 8003c7a:	b190      	cbz	r0, 8003ca2 <__swbuf_r+0x92>
 8003c7c:	e00f      	b.n	8003c9e <__swbuf_r+0x8e>
 8003c7e:	4b0b      	ldr	r3, [pc, #44]	; (8003cac <__swbuf_r+0x9c>)
 8003c80:	429c      	cmp	r4, r3
 8003c82:	d101      	bne.n	8003c88 <__swbuf_r+0x78>
 8003c84:	68ac      	ldr	r4, [r5, #8]
 8003c86:	e7d0      	b.n	8003c2a <__swbuf_r+0x1a>
 8003c88:	4b09      	ldr	r3, [pc, #36]	; (8003cb0 <__swbuf_r+0xa0>)
 8003c8a:	429c      	cmp	r4, r3
 8003c8c:	bf08      	it	eq
 8003c8e:	68ec      	ldreq	r4, [r5, #12]
 8003c90:	e7cb      	b.n	8003c2a <__swbuf_r+0x1a>
 8003c92:	4621      	mov	r1, r4
 8003c94:	4628      	mov	r0, r5
 8003c96:	f000 f81f 	bl	8003cd8 <__swsetup_r>
 8003c9a:	2800      	cmp	r0, #0
 8003c9c:	d0cc      	beq.n	8003c38 <__swbuf_r+0x28>
 8003c9e:	f04f 37ff 	mov.w	r7, #4294967295
 8003ca2:	4638      	mov	r0, r7
 8003ca4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8003ca6:	bf00      	nop
 8003ca8:	08004164 	.word	0x08004164
 8003cac:	08004184 	.word	0x08004184
 8003cb0:	08004144 	.word	0x08004144

08003cb4 <_write_r>:
 8003cb4:	b538      	push	{r3, r4, r5, lr}
 8003cb6:	4c07      	ldr	r4, [pc, #28]	; (8003cd4 <_write_r+0x20>)
 8003cb8:	4605      	mov	r5, r0
 8003cba:	4608      	mov	r0, r1
 8003cbc:	4611      	mov	r1, r2
 8003cbe:	2200      	movs	r2, #0
 8003cc0:	6022      	str	r2, [r4, #0]
 8003cc2:	461a      	mov	r2, r3
 8003cc4:	f7fd fb9d 	bl	8001402 <_write>
 8003cc8:	1c43      	adds	r3, r0, #1
 8003cca:	d102      	bne.n	8003cd2 <_write_r+0x1e>
 8003ccc:	6823      	ldr	r3, [r4, #0]
 8003cce:	b103      	cbz	r3, 8003cd2 <_write_r+0x1e>
 8003cd0:	602b      	str	r3, [r5, #0]
 8003cd2:	bd38      	pop	{r3, r4, r5, pc}
 8003cd4:	20000248 	.word	0x20000248

08003cd8 <__swsetup_r>:
 8003cd8:	4b32      	ldr	r3, [pc, #200]	; (8003da4 <__swsetup_r+0xcc>)
 8003cda:	b570      	push	{r4, r5, r6, lr}
 8003cdc:	681d      	ldr	r5, [r3, #0]
 8003cde:	4606      	mov	r6, r0
 8003ce0:	460c      	mov	r4, r1
 8003ce2:	b125      	cbz	r5, 8003cee <__swsetup_r+0x16>
 8003ce4:	69ab      	ldr	r3, [r5, #24]
 8003ce6:	b913      	cbnz	r3, 8003cee <__swsetup_r+0x16>
 8003ce8:	4628      	mov	r0, r5
 8003cea:	f7ff f9c3 	bl	8003074 <__sinit>
 8003cee:	4b2e      	ldr	r3, [pc, #184]	; (8003da8 <__swsetup_r+0xd0>)
 8003cf0:	429c      	cmp	r4, r3
 8003cf2:	d10f      	bne.n	8003d14 <__swsetup_r+0x3c>
 8003cf4:	686c      	ldr	r4, [r5, #4]
 8003cf6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8003cfa:	b29a      	uxth	r2, r3
 8003cfc:	0715      	lsls	r5, r2, #28
 8003cfe:	d42c      	bmi.n	8003d5a <__swsetup_r+0x82>
 8003d00:	06d0      	lsls	r0, r2, #27
 8003d02:	d411      	bmi.n	8003d28 <__swsetup_r+0x50>
 8003d04:	2209      	movs	r2, #9
 8003d06:	6032      	str	r2, [r6, #0]
 8003d08:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8003d0c:	81a3      	strh	r3, [r4, #12]
 8003d0e:	f04f 30ff 	mov.w	r0, #4294967295
 8003d12:	e03e      	b.n	8003d92 <__swsetup_r+0xba>
 8003d14:	4b25      	ldr	r3, [pc, #148]	; (8003dac <__swsetup_r+0xd4>)
 8003d16:	429c      	cmp	r4, r3
 8003d18:	d101      	bne.n	8003d1e <__swsetup_r+0x46>
 8003d1a:	68ac      	ldr	r4, [r5, #8]
 8003d1c:	e7eb      	b.n	8003cf6 <__swsetup_r+0x1e>
 8003d1e:	4b24      	ldr	r3, [pc, #144]	; (8003db0 <__swsetup_r+0xd8>)
 8003d20:	429c      	cmp	r4, r3
 8003d22:	bf08      	it	eq
 8003d24:	68ec      	ldreq	r4, [r5, #12]
 8003d26:	e7e6      	b.n	8003cf6 <__swsetup_r+0x1e>
 8003d28:	0751      	lsls	r1, r2, #29
 8003d2a:	d512      	bpl.n	8003d52 <__swsetup_r+0x7a>
 8003d2c:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8003d2e:	b141      	cbz	r1, 8003d42 <__swsetup_r+0x6a>
 8003d30:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8003d34:	4299      	cmp	r1, r3
 8003d36:	d002      	beq.n	8003d3e <__swsetup_r+0x66>
 8003d38:	4630      	mov	r0, r6
 8003d3a:	f7ff fd2f 	bl	800379c <_free_r>
 8003d3e:	2300      	movs	r3, #0
 8003d40:	6363      	str	r3, [r4, #52]	; 0x34
 8003d42:	89a3      	ldrh	r3, [r4, #12]
 8003d44:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8003d48:	81a3      	strh	r3, [r4, #12]
 8003d4a:	2300      	movs	r3, #0
 8003d4c:	6063      	str	r3, [r4, #4]
 8003d4e:	6923      	ldr	r3, [r4, #16]
 8003d50:	6023      	str	r3, [r4, #0]
 8003d52:	89a3      	ldrh	r3, [r4, #12]
 8003d54:	f043 0308 	orr.w	r3, r3, #8
 8003d58:	81a3      	strh	r3, [r4, #12]
 8003d5a:	6923      	ldr	r3, [r4, #16]
 8003d5c:	b94b      	cbnz	r3, 8003d72 <__swsetup_r+0x9a>
 8003d5e:	89a3      	ldrh	r3, [r4, #12]
 8003d60:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8003d64:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8003d68:	d003      	beq.n	8003d72 <__swsetup_r+0x9a>
 8003d6a:	4621      	mov	r1, r4
 8003d6c:	4630      	mov	r0, r6
 8003d6e:	f000 f917 	bl	8003fa0 <__smakebuf_r>
 8003d72:	89a2      	ldrh	r2, [r4, #12]
 8003d74:	f012 0301 	ands.w	r3, r2, #1
 8003d78:	d00c      	beq.n	8003d94 <__swsetup_r+0xbc>
 8003d7a:	2300      	movs	r3, #0
 8003d7c:	60a3      	str	r3, [r4, #8]
 8003d7e:	6963      	ldr	r3, [r4, #20]
 8003d80:	425b      	negs	r3, r3
 8003d82:	61a3      	str	r3, [r4, #24]
 8003d84:	6923      	ldr	r3, [r4, #16]
 8003d86:	b953      	cbnz	r3, 8003d9e <__swsetup_r+0xc6>
 8003d88:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8003d8c:	f013 0080 	ands.w	r0, r3, #128	; 0x80
 8003d90:	d1ba      	bne.n	8003d08 <__swsetup_r+0x30>
 8003d92:	bd70      	pop	{r4, r5, r6, pc}
 8003d94:	0792      	lsls	r2, r2, #30
 8003d96:	bf58      	it	pl
 8003d98:	6963      	ldrpl	r3, [r4, #20]
 8003d9a:	60a3      	str	r3, [r4, #8]
 8003d9c:	e7f2      	b.n	8003d84 <__swsetup_r+0xac>
 8003d9e:	2000      	movs	r0, #0
 8003da0:	e7f7      	b.n	8003d92 <__swsetup_r+0xba>
 8003da2:	bf00      	nop
 8003da4:	2000000c 	.word	0x2000000c
 8003da8:	08004164 	.word	0x08004164
 8003dac:	08004184 	.word	0x08004184
 8003db0:	08004144 	.word	0x08004144

08003db4 <_close_r>:
 8003db4:	b538      	push	{r3, r4, r5, lr}
 8003db6:	4c06      	ldr	r4, [pc, #24]	; (8003dd0 <_close_r+0x1c>)
 8003db8:	2300      	movs	r3, #0
 8003dba:	4605      	mov	r5, r0
 8003dbc:	4608      	mov	r0, r1
 8003dbe:	6023      	str	r3, [r4, #0]
 8003dc0:	f7fd fb3b 	bl	800143a <_close>
 8003dc4:	1c43      	adds	r3, r0, #1
 8003dc6:	d102      	bne.n	8003dce <_close_r+0x1a>
 8003dc8:	6823      	ldr	r3, [r4, #0]
 8003dca:	b103      	cbz	r3, 8003dce <_close_r+0x1a>
 8003dcc:	602b      	str	r3, [r5, #0]
 8003dce:	bd38      	pop	{r3, r4, r5, pc}
 8003dd0:	20000248 	.word	0x20000248

08003dd4 <__sflush_r>:
 8003dd4:	898a      	ldrh	r2, [r1, #12]
 8003dd6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003dda:	4605      	mov	r5, r0
 8003ddc:	0710      	lsls	r0, r2, #28
 8003dde:	460c      	mov	r4, r1
 8003de0:	d458      	bmi.n	8003e94 <__sflush_r+0xc0>
 8003de2:	684b      	ldr	r3, [r1, #4]
 8003de4:	2b00      	cmp	r3, #0
 8003de6:	dc05      	bgt.n	8003df4 <__sflush_r+0x20>
 8003de8:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8003dea:	2b00      	cmp	r3, #0
 8003dec:	dc02      	bgt.n	8003df4 <__sflush_r+0x20>
 8003dee:	2000      	movs	r0, #0
 8003df0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8003df4:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8003df6:	2e00      	cmp	r6, #0
 8003df8:	d0f9      	beq.n	8003dee <__sflush_r+0x1a>
 8003dfa:	2300      	movs	r3, #0
 8003dfc:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8003e00:	682f      	ldr	r7, [r5, #0]
 8003e02:	6a21      	ldr	r1, [r4, #32]
 8003e04:	602b      	str	r3, [r5, #0]
 8003e06:	d032      	beq.n	8003e6e <__sflush_r+0x9a>
 8003e08:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8003e0a:	89a3      	ldrh	r3, [r4, #12]
 8003e0c:	075a      	lsls	r2, r3, #29
 8003e0e:	d505      	bpl.n	8003e1c <__sflush_r+0x48>
 8003e10:	6863      	ldr	r3, [r4, #4]
 8003e12:	1ac0      	subs	r0, r0, r3
 8003e14:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8003e16:	b10b      	cbz	r3, 8003e1c <__sflush_r+0x48>
 8003e18:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8003e1a:	1ac0      	subs	r0, r0, r3
 8003e1c:	2300      	movs	r3, #0
 8003e1e:	4602      	mov	r2, r0
 8003e20:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8003e22:	6a21      	ldr	r1, [r4, #32]
 8003e24:	4628      	mov	r0, r5
 8003e26:	47b0      	blx	r6
 8003e28:	1c43      	adds	r3, r0, #1
 8003e2a:	89a3      	ldrh	r3, [r4, #12]
 8003e2c:	d106      	bne.n	8003e3c <__sflush_r+0x68>
 8003e2e:	6829      	ldr	r1, [r5, #0]
 8003e30:	291d      	cmp	r1, #29
 8003e32:	d848      	bhi.n	8003ec6 <__sflush_r+0xf2>
 8003e34:	4a29      	ldr	r2, [pc, #164]	; (8003edc <__sflush_r+0x108>)
 8003e36:	40ca      	lsrs	r2, r1
 8003e38:	07d6      	lsls	r6, r2, #31
 8003e3a:	d544      	bpl.n	8003ec6 <__sflush_r+0xf2>
 8003e3c:	2200      	movs	r2, #0
 8003e3e:	6062      	str	r2, [r4, #4]
 8003e40:	04d9      	lsls	r1, r3, #19
 8003e42:	6922      	ldr	r2, [r4, #16]
 8003e44:	6022      	str	r2, [r4, #0]
 8003e46:	d504      	bpl.n	8003e52 <__sflush_r+0x7e>
 8003e48:	1c42      	adds	r2, r0, #1
 8003e4a:	d101      	bne.n	8003e50 <__sflush_r+0x7c>
 8003e4c:	682b      	ldr	r3, [r5, #0]
 8003e4e:	b903      	cbnz	r3, 8003e52 <__sflush_r+0x7e>
 8003e50:	6560      	str	r0, [r4, #84]	; 0x54
 8003e52:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8003e54:	602f      	str	r7, [r5, #0]
 8003e56:	2900      	cmp	r1, #0
 8003e58:	d0c9      	beq.n	8003dee <__sflush_r+0x1a>
 8003e5a:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8003e5e:	4299      	cmp	r1, r3
 8003e60:	d002      	beq.n	8003e68 <__sflush_r+0x94>
 8003e62:	4628      	mov	r0, r5
 8003e64:	f7ff fc9a 	bl	800379c <_free_r>
 8003e68:	2000      	movs	r0, #0
 8003e6a:	6360      	str	r0, [r4, #52]	; 0x34
 8003e6c:	e7c0      	b.n	8003df0 <__sflush_r+0x1c>
 8003e6e:	2301      	movs	r3, #1
 8003e70:	4628      	mov	r0, r5
 8003e72:	47b0      	blx	r6
 8003e74:	1c41      	adds	r1, r0, #1
 8003e76:	d1c8      	bne.n	8003e0a <__sflush_r+0x36>
 8003e78:	682b      	ldr	r3, [r5, #0]
 8003e7a:	2b00      	cmp	r3, #0
 8003e7c:	d0c5      	beq.n	8003e0a <__sflush_r+0x36>
 8003e7e:	2b1d      	cmp	r3, #29
 8003e80:	d001      	beq.n	8003e86 <__sflush_r+0xb2>
 8003e82:	2b16      	cmp	r3, #22
 8003e84:	d101      	bne.n	8003e8a <__sflush_r+0xb6>
 8003e86:	602f      	str	r7, [r5, #0]
 8003e88:	e7b1      	b.n	8003dee <__sflush_r+0x1a>
 8003e8a:	89a3      	ldrh	r3, [r4, #12]
 8003e8c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8003e90:	81a3      	strh	r3, [r4, #12]
 8003e92:	e7ad      	b.n	8003df0 <__sflush_r+0x1c>
 8003e94:	690f      	ldr	r7, [r1, #16]
 8003e96:	2f00      	cmp	r7, #0
 8003e98:	d0a9      	beq.n	8003dee <__sflush_r+0x1a>
 8003e9a:	0793      	lsls	r3, r2, #30
 8003e9c:	680e      	ldr	r6, [r1, #0]
 8003e9e:	bf08      	it	eq
 8003ea0:	694b      	ldreq	r3, [r1, #20]
 8003ea2:	600f      	str	r7, [r1, #0]
 8003ea4:	bf18      	it	ne
 8003ea6:	2300      	movne	r3, #0
 8003ea8:	eba6 0807 	sub.w	r8, r6, r7
 8003eac:	608b      	str	r3, [r1, #8]
 8003eae:	f1b8 0f00 	cmp.w	r8, #0
 8003eb2:	dd9c      	ble.n	8003dee <__sflush_r+0x1a>
 8003eb4:	4643      	mov	r3, r8
 8003eb6:	463a      	mov	r2, r7
 8003eb8:	6a21      	ldr	r1, [r4, #32]
 8003eba:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8003ebc:	4628      	mov	r0, r5
 8003ebe:	47b0      	blx	r6
 8003ec0:	2800      	cmp	r0, #0
 8003ec2:	dc06      	bgt.n	8003ed2 <__sflush_r+0xfe>
 8003ec4:	89a3      	ldrh	r3, [r4, #12]
 8003ec6:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8003eca:	81a3      	strh	r3, [r4, #12]
 8003ecc:	f04f 30ff 	mov.w	r0, #4294967295
 8003ed0:	e78e      	b.n	8003df0 <__sflush_r+0x1c>
 8003ed2:	4407      	add	r7, r0
 8003ed4:	eba8 0800 	sub.w	r8, r8, r0
 8003ed8:	e7e9      	b.n	8003eae <__sflush_r+0xda>
 8003eda:	bf00      	nop
 8003edc:	20400001 	.word	0x20400001

08003ee0 <_fflush_r>:
 8003ee0:	b538      	push	{r3, r4, r5, lr}
 8003ee2:	690b      	ldr	r3, [r1, #16]
 8003ee4:	4605      	mov	r5, r0
 8003ee6:	460c      	mov	r4, r1
 8003ee8:	b1db      	cbz	r3, 8003f22 <_fflush_r+0x42>
 8003eea:	b118      	cbz	r0, 8003ef4 <_fflush_r+0x14>
 8003eec:	6983      	ldr	r3, [r0, #24]
 8003eee:	b90b      	cbnz	r3, 8003ef4 <_fflush_r+0x14>
 8003ef0:	f7ff f8c0 	bl	8003074 <__sinit>
 8003ef4:	4b0c      	ldr	r3, [pc, #48]	; (8003f28 <_fflush_r+0x48>)
 8003ef6:	429c      	cmp	r4, r3
 8003ef8:	d109      	bne.n	8003f0e <_fflush_r+0x2e>
 8003efa:	686c      	ldr	r4, [r5, #4]
 8003efc:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8003f00:	b17b      	cbz	r3, 8003f22 <_fflush_r+0x42>
 8003f02:	4621      	mov	r1, r4
 8003f04:	4628      	mov	r0, r5
 8003f06:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8003f0a:	f7ff bf63 	b.w	8003dd4 <__sflush_r>
 8003f0e:	4b07      	ldr	r3, [pc, #28]	; (8003f2c <_fflush_r+0x4c>)
 8003f10:	429c      	cmp	r4, r3
 8003f12:	d101      	bne.n	8003f18 <_fflush_r+0x38>
 8003f14:	68ac      	ldr	r4, [r5, #8]
 8003f16:	e7f1      	b.n	8003efc <_fflush_r+0x1c>
 8003f18:	4b05      	ldr	r3, [pc, #20]	; (8003f30 <_fflush_r+0x50>)
 8003f1a:	429c      	cmp	r4, r3
 8003f1c:	bf08      	it	eq
 8003f1e:	68ec      	ldreq	r4, [r5, #12]
 8003f20:	e7ec      	b.n	8003efc <_fflush_r+0x1c>
 8003f22:	2000      	movs	r0, #0
 8003f24:	bd38      	pop	{r3, r4, r5, pc}
 8003f26:	bf00      	nop
 8003f28:	08004164 	.word	0x08004164
 8003f2c:	08004184 	.word	0x08004184
 8003f30:	08004144 	.word	0x08004144

08003f34 <_lseek_r>:
 8003f34:	b538      	push	{r3, r4, r5, lr}
 8003f36:	4c07      	ldr	r4, [pc, #28]	; (8003f54 <_lseek_r+0x20>)
 8003f38:	4605      	mov	r5, r0
 8003f3a:	4608      	mov	r0, r1
 8003f3c:	4611      	mov	r1, r2
 8003f3e:	2200      	movs	r2, #0
 8003f40:	6022      	str	r2, [r4, #0]
 8003f42:	461a      	mov	r2, r3
 8003f44:	f7fd fa9d 	bl	8001482 <_lseek>
 8003f48:	1c43      	adds	r3, r0, #1
 8003f4a:	d102      	bne.n	8003f52 <_lseek_r+0x1e>
 8003f4c:	6823      	ldr	r3, [r4, #0]
 8003f4e:	b103      	cbz	r3, 8003f52 <_lseek_r+0x1e>
 8003f50:	602b      	str	r3, [r5, #0]
 8003f52:	bd38      	pop	{r3, r4, r5, pc}
 8003f54:	20000248 	.word	0x20000248

08003f58 <__swhatbuf_r>:
 8003f58:	b570      	push	{r4, r5, r6, lr}
 8003f5a:	460e      	mov	r6, r1
 8003f5c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8003f60:	2900      	cmp	r1, #0
 8003f62:	b096      	sub	sp, #88	; 0x58
 8003f64:	4614      	mov	r4, r2
 8003f66:	461d      	mov	r5, r3
 8003f68:	da07      	bge.n	8003f7a <__swhatbuf_r+0x22>
 8003f6a:	2300      	movs	r3, #0
 8003f6c:	602b      	str	r3, [r5, #0]
 8003f6e:	89b3      	ldrh	r3, [r6, #12]
 8003f70:	061a      	lsls	r2, r3, #24
 8003f72:	d410      	bmi.n	8003f96 <__swhatbuf_r+0x3e>
 8003f74:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8003f78:	e00e      	b.n	8003f98 <__swhatbuf_r+0x40>
 8003f7a:	466a      	mov	r2, sp
 8003f7c:	f000 f884 	bl	8004088 <_fstat_r>
 8003f80:	2800      	cmp	r0, #0
 8003f82:	dbf2      	blt.n	8003f6a <__swhatbuf_r+0x12>
 8003f84:	9a01      	ldr	r2, [sp, #4]
 8003f86:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8003f8a:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8003f8e:	425a      	negs	r2, r3
 8003f90:	415a      	adcs	r2, r3
 8003f92:	602a      	str	r2, [r5, #0]
 8003f94:	e7ee      	b.n	8003f74 <__swhatbuf_r+0x1c>
 8003f96:	2340      	movs	r3, #64	; 0x40
 8003f98:	2000      	movs	r0, #0
 8003f9a:	6023      	str	r3, [r4, #0]
 8003f9c:	b016      	add	sp, #88	; 0x58
 8003f9e:	bd70      	pop	{r4, r5, r6, pc}

08003fa0 <__smakebuf_r>:
 8003fa0:	898b      	ldrh	r3, [r1, #12]
 8003fa2:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8003fa4:	079d      	lsls	r5, r3, #30
 8003fa6:	4606      	mov	r6, r0
 8003fa8:	460c      	mov	r4, r1
 8003faa:	d507      	bpl.n	8003fbc <__smakebuf_r+0x1c>
 8003fac:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8003fb0:	6023      	str	r3, [r4, #0]
 8003fb2:	6123      	str	r3, [r4, #16]
 8003fb4:	2301      	movs	r3, #1
 8003fb6:	6163      	str	r3, [r4, #20]
 8003fb8:	b002      	add	sp, #8
 8003fba:	bd70      	pop	{r4, r5, r6, pc}
 8003fbc:	ab01      	add	r3, sp, #4
 8003fbe:	466a      	mov	r2, sp
 8003fc0:	f7ff ffca 	bl	8003f58 <__swhatbuf_r>
 8003fc4:	9900      	ldr	r1, [sp, #0]
 8003fc6:	4605      	mov	r5, r0
 8003fc8:	4630      	mov	r0, r6
 8003fca:	f7ff fc35 	bl	8003838 <_malloc_r>
 8003fce:	b948      	cbnz	r0, 8003fe4 <__smakebuf_r+0x44>
 8003fd0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8003fd4:	059a      	lsls	r2, r3, #22
 8003fd6:	d4ef      	bmi.n	8003fb8 <__smakebuf_r+0x18>
 8003fd8:	f023 0303 	bic.w	r3, r3, #3
 8003fdc:	f043 0302 	orr.w	r3, r3, #2
 8003fe0:	81a3      	strh	r3, [r4, #12]
 8003fe2:	e7e3      	b.n	8003fac <__smakebuf_r+0xc>
 8003fe4:	4b0d      	ldr	r3, [pc, #52]	; (800401c <__smakebuf_r+0x7c>)
 8003fe6:	62b3      	str	r3, [r6, #40]	; 0x28
 8003fe8:	89a3      	ldrh	r3, [r4, #12]
 8003fea:	6020      	str	r0, [r4, #0]
 8003fec:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8003ff0:	81a3      	strh	r3, [r4, #12]
 8003ff2:	9b00      	ldr	r3, [sp, #0]
 8003ff4:	6163      	str	r3, [r4, #20]
 8003ff6:	9b01      	ldr	r3, [sp, #4]
 8003ff8:	6120      	str	r0, [r4, #16]
 8003ffa:	b15b      	cbz	r3, 8004014 <__smakebuf_r+0x74>
 8003ffc:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8004000:	4630      	mov	r0, r6
 8004002:	f000 f853 	bl	80040ac <_isatty_r>
 8004006:	b128      	cbz	r0, 8004014 <__smakebuf_r+0x74>
 8004008:	89a3      	ldrh	r3, [r4, #12]
 800400a:	f023 0303 	bic.w	r3, r3, #3
 800400e:	f043 0301 	orr.w	r3, r3, #1
 8004012:	81a3      	strh	r3, [r4, #12]
 8004014:	89a3      	ldrh	r3, [r4, #12]
 8004016:	431d      	orrs	r5, r3
 8004018:	81a5      	strh	r5, [r4, #12]
 800401a:	e7cd      	b.n	8003fb8 <__smakebuf_r+0x18>
 800401c:	0800303d 	.word	0x0800303d

08004020 <__ascii_mbtowc>:
 8004020:	b082      	sub	sp, #8
 8004022:	b901      	cbnz	r1, 8004026 <__ascii_mbtowc+0x6>
 8004024:	a901      	add	r1, sp, #4
 8004026:	b142      	cbz	r2, 800403a <__ascii_mbtowc+0x1a>
 8004028:	b14b      	cbz	r3, 800403e <__ascii_mbtowc+0x1e>
 800402a:	7813      	ldrb	r3, [r2, #0]
 800402c:	600b      	str	r3, [r1, #0]
 800402e:	7812      	ldrb	r2, [r2, #0]
 8004030:	1c10      	adds	r0, r2, #0
 8004032:	bf18      	it	ne
 8004034:	2001      	movne	r0, #1
 8004036:	b002      	add	sp, #8
 8004038:	4770      	bx	lr
 800403a:	4610      	mov	r0, r2
 800403c:	e7fb      	b.n	8004036 <__ascii_mbtowc+0x16>
 800403e:	f06f 0001 	mvn.w	r0, #1
 8004042:	e7f8      	b.n	8004036 <__ascii_mbtowc+0x16>

08004044 <__malloc_lock>:
 8004044:	4770      	bx	lr

08004046 <__malloc_unlock>:
 8004046:	4770      	bx	lr

08004048 <_read_r>:
 8004048:	b538      	push	{r3, r4, r5, lr}
 800404a:	4c07      	ldr	r4, [pc, #28]	; (8004068 <_read_r+0x20>)
 800404c:	4605      	mov	r5, r0
 800404e:	4608      	mov	r0, r1
 8004050:	4611      	mov	r1, r2
 8004052:	2200      	movs	r2, #0
 8004054:	6022      	str	r2, [r4, #0]
 8004056:	461a      	mov	r2, r3
 8004058:	f7fd f9b6 	bl	80013c8 <_read>
 800405c:	1c43      	adds	r3, r0, #1
 800405e:	d102      	bne.n	8004066 <_read_r+0x1e>
 8004060:	6823      	ldr	r3, [r4, #0]
 8004062:	b103      	cbz	r3, 8004066 <_read_r+0x1e>
 8004064:	602b      	str	r3, [r5, #0]
 8004066:	bd38      	pop	{r3, r4, r5, pc}
 8004068:	20000248 	.word	0x20000248

0800406c <__ascii_wctomb>:
 800406c:	b149      	cbz	r1, 8004082 <__ascii_wctomb+0x16>
 800406e:	2aff      	cmp	r2, #255	; 0xff
 8004070:	bf85      	ittet	hi
 8004072:	238a      	movhi	r3, #138	; 0x8a
 8004074:	6003      	strhi	r3, [r0, #0]
 8004076:	700a      	strbls	r2, [r1, #0]
 8004078:	f04f 30ff 	movhi.w	r0, #4294967295
 800407c:	bf98      	it	ls
 800407e:	2001      	movls	r0, #1
 8004080:	4770      	bx	lr
 8004082:	4608      	mov	r0, r1
 8004084:	4770      	bx	lr
	...

08004088 <_fstat_r>:
 8004088:	b538      	push	{r3, r4, r5, lr}
 800408a:	4c07      	ldr	r4, [pc, #28]	; (80040a8 <_fstat_r+0x20>)
 800408c:	2300      	movs	r3, #0
 800408e:	4605      	mov	r5, r0
 8004090:	4608      	mov	r0, r1
 8004092:	4611      	mov	r1, r2
 8004094:	6023      	str	r3, [r4, #0]
 8004096:	f7fd f9db 	bl	8001450 <_fstat>
 800409a:	1c43      	adds	r3, r0, #1
 800409c:	d102      	bne.n	80040a4 <_fstat_r+0x1c>
 800409e:	6823      	ldr	r3, [r4, #0]
 80040a0:	b103      	cbz	r3, 80040a4 <_fstat_r+0x1c>
 80040a2:	602b      	str	r3, [r5, #0]
 80040a4:	bd38      	pop	{r3, r4, r5, pc}
 80040a6:	bf00      	nop
 80040a8:	20000248 	.word	0x20000248

080040ac <_isatty_r>:
 80040ac:	b538      	push	{r3, r4, r5, lr}
 80040ae:	4c06      	ldr	r4, [pc, #24]	; (80040c8 <_isatty_r+0x1c>)
 80040b0:	2300      	movs	r3, #0
 80040b2:	4605      	mov	r5, r0
 80040b4:	4608      	mov	r0, r1
 80040b6:	6023      	str	r3, [r4, #0]
 80040b8:	f7fd f9d9 	bl	800146e <_isatty>
 80040bc:	1c43      	adds	r3, r0, #1
 80040be:	d102      	bne.n	80040c6 <_isatty_r+0x1a>
 80040c0:	6823      	ldr	r3, [r4, #0]
 80040c2:	b103      	cbz	r3, 80040c6 <_isatty_r+0x1a>
 80040c4:	602b      	str	r3, [r5, #0]
 80040c6:	bd38      	pop	{r3, r4, r5, pc}
 80040c8:	20000248 	.word	0x20000248

080040cc <_init>:
 80040cc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80040ce:	bf00      	nop
 80040d0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80040d2:	bc08      	pop	{r3}
 80040d4:	469e      	mov	lr, r3
 80040d6:	4770      	bx	lr

080040d8 <_fini>:
 80040d8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80040da:	bf00      	nop
 80040dc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80040de:	bc08      	pop	{r3}
 80040e0:	469e      	mov	lr, r3
 80040e2:	4770      	bx	lr
